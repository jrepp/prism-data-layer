# Ultra-minimal Dockerfile for MemStore Plugin
# Goal: Get the smallest possible production image
#
# Multi-stage build targets:
# - builder: Compile Go binary with aggressive optimization
# - scratch: Absolute minimum (scratch base = 0 bytes)
# - upx: UPX-compressed binary on scratch
# - production: Current approach (distroless static)
# - debug: Distroless with shell for debugging

# Build stage - use Alpine for minimal builder
FROM docker.io/library/golang:1.24-alpine AS builder

# Install UPX for compression
RUN apk add --no-cache upx

WORKDIR /build

# Copy core module first (dependency)
COPY core/ ./core/

# Copy memstore module
COPY memstore/ ./memstore/

# Build the binary with aggressive optimization
WORKDIR /build/memstore
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -a \
    -installsuffix cgo \
    -ldflags="-s -w -extldflags '-static'" \
    -trimpath \
    -o memstore \
    ./cmd/memstore

# Create UPX-compressed version
RUN cp memstore memstore-upx && \
    upx --best --lzma memstore-upx

# Minimal target - absolute minimum (0 bytes base)
FROM scratch AS minimal

COPY --from=builder /build/memstore/memstore /memstore
COPY --from=builder /build/memstore/config.yaml /config.yaml

EXPOSE 9090
ENTRYPOINT ["/memstore"]
CMD ["-config", "/config.yaml"]

# UPX target - compressed binary on scratch
FROM scratch AS upx-compressed

COPY --from=builder /build/memstore/memstore-upx /memstore
COPY --from=builder /build/memstore/config.yaml /config.yaml

EXPOSE 9090
ENTRYPOINT ["/memstore"]
CMD ["-config", "/config.yaml"]

# Production target - distroless static (current approach)
FROM gcr.io/distroless/static-debian12:nonroot AS production

COPY --from=builder /build/memstore/memstore /memstore
COPY --from=builder /build/memstore/config.yaml /config.yaml

USER nonroot:nonroot
EXPOSE 9090
ENTRYPOINT ["/memstore"]
CMD ["-config", "/config.yaml"]

# Debug target - distroless with busybox shell
FROM gcr.io/distroless/base-debian12:debug-nonroot AS debug

COPY --from=builder /build/memstore/memstore /memstore
COPY --from=builder /build/memstore/config.yaml /config.yaml

USER nonroot:nonroot
EXPOSE 9090
ENTRYPOINT ["/memstore"]
CMD ["-config", "/config.yaml"]
