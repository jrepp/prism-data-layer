[project]
name = "prismctl"
version = "0.1.0"
description = "Command-line interface for Prism data access gateway"
authors = [{name = "Prism Team"}]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}

dependencies = [
    "click>=8.1.0",
    "requests>=2.31.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "types-requests>=2.31.0",
    "types-PyYAML>=6.0",
]

[project.scripts]
prism = "prismctl.main:main"
prismctl = "prismctl.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "D",      # pydocstyle
    "UP",     # pyupgrade
    "ANN",    # flake8-annotations
    "S",      # flake8-bandit (security)
    "B",      # flake8-bugbear
    "A",      # flake8-builtins
    "COM",    # flake8-commas
    "C4",     # flake8-comprehensions
    "DTZ",    # flake8-datetimez
    "T10",    # flake8-debugger
    "EXE",    # flake8-executable
    "ISC",    # flake8-implicit-str-concat
    "ICN",    # flake8-import-conventions
    "G",      # flake8-logging-format
    "INP",    # flake8-no-pep420
    "PIE",    # flake8-pie
    "T20",    # flake8-print
    "PT",     # flake8-pytest-style
    "Q",      # flake8-quotes
    "RSE",    # flake8-raise
    "RET",    # flake8-return
    "SIM",    # flake8-simplify
    "TID",    # flake8-tidy-imports
    "ARG",    # flake8-unused-arguments
    "PTH",    # flake8-use-pathlib
    "ERA",    # eradicate (commented-out code)
    "PL",     # pylint
    "RUF",    # ruff-specific rules
]

ignore = [
    "D100",    # Missing docstring in public module
    "D104",    # Missing docstring in public package
    "D203",    # 1 blank line required before class docstring (conflicts with D211)
    "D213",    # Multi-line docstring summary should start at the second line (conflicts with D212)
    "ANN401",  # Dynamically typed expressions (Any) are disallowed
    "S101",    # Use of assert detected (allow in tests)
    "S105",    # Possible hardcoded password (false positives for "Bearer", etc.)
    "PLR0913", # Too many arguments to function call
    "PLR2004", # Magic value used in comparison (allow for HTTP status codes)
    "T201",    # print() used (CLI needs print)
    "COM812",  # Trailing comma (conflicts with formatter)
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101",    # Allow assert in tests
    "S106",    # Allow hardcoded passwords in tests (test data)
    "ANN",     # Don't require annotations in tests
    "D",       # Don't require docstrings in tests
    "DTZ",     # Allow naive datetime in tests
]
"prismctl/config.py" = [
    "S106",    # Allow hardcoded password in default local config
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["prismctl"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
show_column_numbers = true
pretty = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=prismctl --cov-report=term-missing"
