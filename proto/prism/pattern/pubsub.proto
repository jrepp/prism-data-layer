syntax = "proto3";

package prism.pattern;

option go_package = "github.com/jrepp/prism-data-layer/patterns/core/gen/prism/pattern";

// PubSub pattern service for publish-subscribe messaging
service PubSub {
  // Publish a message to a topic
  rpc Publish(PublishRequest) returns (PublishResponse);

  // Subscribe to a topic (streaming)
  rpc Subscribe(SubscribeRequest) returns (stream Message);

  // Unsubscribe from a topic
  rpc Unsubscribe(UnsubscribeRequest) returns (UnsubscribeResponse);
}

// Publish a message to a topic
message PublishRequest {
  string topic = 1;
  bytes payload = 2;
  map<string, string> metadata = 3;
}

message PublishResponse {
  bool success = 1;
  string message_id = 2;
}

// Subscribe to a topic
message SubscribeRequest {
  string topic = 1;
  string subscriber_id = 2;
  map<string, string> options = 3;
}

// Message received from subscription
message Message {
  string topic = 1;
  bytes payload = 2;
  map<string, string> metadata = 3;
  string message_id = 4;
  int64 timestamp = 5;
}

// Unsubscribe from a topic
message UnsubscribeRequest {
  string topic = 1;
  string subscriber_id = 2;
}

message UnsubscribeResponse {
  bool success = 1;
}
