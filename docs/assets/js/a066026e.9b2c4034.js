"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[5629],{8527:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"rfc-002","title":"Data Layer Interface Specification","description":"Abstract","source":"@site/../docs-cms/rfcs/rfc-002-data-layer-interface.md","sourceDirName":".","slug":"/rfc-002","permalink":"/prism-data-layer/rfc/rfc-002","draft":false,"unlisted":false,"editUrl":"https://github.com/jrepp/prism-data-layer/tree/main/docs-cms/../docs-cms/rfcs/rfc-002-data-layer-interface.md","tags":[],"version":"current","frontMatter":{"author":"Core Team","created":"2025-10-07T00:00:00.000Z","doc_uuid":"839837b0-a37f-41a5-91e3-2667535311c8","id":"rfc-002","project_id":"prism-data-layer","related":"RFC-001, ADR-024","status":"Draft","supersedes":"N/A","title":"Data Layer Interface Specification","updated":"2025-10-07T00:00:00.000Z"},"sidebar":"rfcSidebar","previous":{"title":"Prism Data Access Layer Architecture \u2022 RFC-001","permalink":"/prism-data-layer/rfc/rfc-001"},"next":{"title":"Admin Interface for Prism \u2022 RFC-003","permalink":"/prism-data-layer/rfc/rfc-003"}}');var t=s(74848),i=s(28453);const a={author:"Core Team",created:new Date("2025-10-07T00:00:00.000Z"),doc_uuid:"839837b0-a37f-41a5-91e3-2667535311c8",id:"rfc-002",project_id:"prism-data-layer",related:"RFC-001, ADR-024",status:"Draft",supersedes:"N/A",title:"Data Layer Interface Specification",updated:new Date("2025-10-07T00:00:00.000Z")},o=void 0,c={},l=[{value:"Abstract",id:"abstract",level:2},{value:"1. Introduction",id:"1-introduction",level:2},{value:"1.1 Purpose",id:"11-purpose",level:3},{value:"1.2 Design Principles",id:"12-design-principles",level:3},{value:"1.3 Service Overview",id:"13-service-overview",level:3},{value:"11.3 Authorization",id:"113-authorization",level:3},{value:"12. Testing",id:"12-testing",level:2},{value:"12.1 Unit Tests",id:"121-unit-tests",level:3},{value:"12.2 Integration Tests",id:"122-integration-tests",level:3},{value:"13. References",id:"13-references",level:2},{value:"14. Cache Service (RFC-007)",id:"14-cache-service-rfc-007",level:2},{value:"14.1 Overview",id:"141-overview",level:3},{value:"14.2 Service Definition",id:"142-service-definition",level:3},{value:"14.3 Cache Patterns",id:"143-cache-patterns",level:3},{value:"14.4 Use-Case Recommendations",id:"144-use-case-recommendations",level:3},{value:"15. TimeSeries Service (RFC-005)",id:"15-timeseries-service-rfc-005",level:2},{value:"15.1 Overview",id:"151-overview",level:3},{value:"15.2 Service Definition",id:"152-service-definition",level:3},{value:"15.3 Architecture",id:"153-architecture",level:3},{value:"15.4 Use-Case Recommendations",id:"154-use-case-recommendations",level:3},{value:"16. Object Storage Service (ADR-032)",id:"16-object-storage-service-adr-032",level:2},{value:"16.1 Overview",id:"161-overview",level:3},{value:"16.2 Service Definition",id:"162-service-definition",level:3},{value:"16.3 Architecture",id:"163-architecture",level:3},{value:"16.4 Use-Case Recommendations",id:"164-use-case-recommendations",level:3},{value:"17. Vector Search Service (RFC-004)",id:"17-vector-search-service-rfc-004",level:2},{value:"17.1 Overview",id:"171-overview",level:3},{value:"17.2 Service Definition",id:"172-service-definition",level:3},{value:"17.3 Architecture",id:"173-architecture",level:3},{value:"17.4 Use-Case Recommendations",id:"174-use-case-recommendations",level:3},{value:"18. Data Access Pattern Decision Tree",id:"18-data-access-pattern-decision-tree",level:2},{value:"19. Performance Comparison",id:"19-performance-comparison",level:2},{value:"20. Consistency Guarantees",id:"20-consistency-guarantees",level:2},{value:"21. Integration Patterns",id:"21-integration-patterns",level:2},{value:"21.1 Cache + KeyValue",id:"211-cache--keyvalue",level:3},{value:"21.2 Queue + TimeSeries",id:"212-queue--timeseries",level:3},{value:"21.3 Object Storage + Cache",id:"213-object-storage--cache",level:3},{value:"22. Migration Guide",id:"22-migration-guide",level:2},{value:"22.1 Moving from Direct Backend to Prism",id:"221-moving-from-direct-backend-to-prism",level:3},{value:"22.2 Adding Cache Layer",id:"222-adding-cache-layer",level:3},{value:"22.3 Event Streaming",id:"223-event-streaming",level:3},{value:"23. Revision History",id:"23-revision-history",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"abstract",children:"Abstract"}),"\n",(0,t.jsx)(n.p,{children:"This RFC specifies the complete data layer interface for Prism, defining all gRPC services, message formats, error handling, and client patterns. The interface provides a unified API for accessing heterogeneous backends through five core abstractions: Sessions, Queues, PubSub, Readers, and Transactions."}),"\n",(0,t.jsx)(n.h2,{id:"1-introduction",children:"1. Introduction"}),"\n",(0,t.jsx)(n.h3,{id:"11-purpose",children:"1.1 Purpose"}),"\n",(0,t.jsx)(n.p,{children:"The Prism data layer interface provides:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Unified API"}),": Single gRPC interface for all data operations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type Safety"}),": Protobuf-defined messages with code generation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Streaming"}),": First-class support for server/client/bidirectional streaming"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Abstraction"}),": Backend-agnostic operations that map to multiple implementations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Evolution"}),": Forward/backward compatibility through versioned APIs"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"12-design-principles",children:"1.2 Design Principles"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Session-based"}),": All operations require authenticated session"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Layered"}),": Progressive disclosure from basic to specialized"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Streaming-first"}),": Use streaming for pagination, pub/sub, transactions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Typed"}),": All requests/responses strongly typed via protobuf"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Versioned"}),": APIs versioned (v1, v2, etc.) for evolution"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"13-service-overview",children:"1.3 Service Overview"}),"\n",(0,t.jsx)(n.p,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502           Session Service (v1)             \u2502\n\u2502  - CreateSession, CloseSession, Heartbeat  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                       \u2502\n\u250c\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Queue Service\u2502      \u2502PubSub Service  \u2502\n\u2502    (v1)     \u2502      \u2502     (v1)       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u2502                       \u2502\n\u250c\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Reader       \u2502      \u2502Transact Service\u2502\n\u2502Service (v1) \u2502      \u2502     (v1)       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n## 2. Session Service\n\n### 2.1 Overview\n\nFoundation service for authentication, authorization, and connection management.\n\n### 2.2 Service Definition\n\n"})}),"\n",(0,t.jsx)(n.p,{children:'syntax = "proto3";'}),"\n",(0,t.jsx)(n.p,{children:"package prism.session.v1;"}),"\n",(0,t.jsx)(n.p,{children:'import "google/protobuf/timestamp.proto";\nimport "google/protobuf/duration.proto";\nimport "prism/config/v1/client_config.proto";'}),"\n",(0,t.jsx)(n.p,{children:"service SessionService {\n// Create new authenticated session\nrpc CreateSession(CreateSessionRequest) returns (CreateSessionResponse);"}),"\n",(0,t.jsx)(n.p,{children:"// Close session and release resources\nrpc CloseSession(CloseSessionRequest) returns (CloseSessionResponse);"}),"\n",(0,t.jsx)(n.p,{children:"// Heartbeat to keep session alive\nrpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse);"}),"\n",(0,t.jsx)(n.p,{children:"// Get session metadata\nrpc GetSession(GetSessionRequest) returns (GetSessionResponse);"}),"\n",(0,t.jsx)(n.p,{children:"// Refresh session (extend expiration)\nrpc RefreshSession(RefreshSessionRequest) returns (RefreshSessionResponse);\n}"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### 2.3 Messages\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"message CreateSessionRequest {\n// Authentication credentials\noneof auth {\nstring api_key = 1;\nstring jwt_token = 2;\nMutualTLSAuth mtls = 3;\n}"}),"\n",(0,t.jsx)(n.p,{children:"// Client configuration\noneof config {\nstring config_name = 4;              // Use named config\nprism.config.v1.ClientConfig inline_config = 5;  // Inline config\n}"}),"\n",(0,t.jsx)(n.p,{children:"// Client metadata\nstring client_id = 6;\nstring client_version = 7;\nmap<string, string> metadata = 8;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message MutualTLSAuth {\nbytes client_cert = 1;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message CreateSessionResponse {\n// Session token for subsequent requests\nstring session_token = 1;"}),"\n",(0,t.jsx)(n.p,{children:"// Session metadata\nstring session_id = 2;\ngoogle.protobuf.Timestamp created_at = 3;\ngoogle.protobuf.Timestamp expires_at = 4;"}),"\n",(0,t.jsx)(n.p,{children:"// Resolved configuration\nprism.config.v1.ClientConfig config = 5;"}),"\n",(0,t.jsx)(n.p,{children:"// Server capabilities\nrepeated string supported_features = 6;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message CloseSessionRequest {\nstring session_token = 1;\nbool force = 2;  // Force close even with pending operations\n}"}),"\n",(0,t.jsx)(n.p,{children:"message CloseSessionResponse {\nbool success = 1;\nstring message = 2;\nint32 pending_operations = 3;  // Count of operations not completed\n}"}),"\n",(0,t.jsx)(n.p,{children:"message HeartbeatRequest {\nstring session_token = 1;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message HeartbeatResponse {\ngoogle.protobuf.Timestamp server_time = 1;\ngoogle.protobuf.Duration ttl = 2;  // Time until session expires\nSessionStatus status = 3;\n}"}),"\n",(0,t.jsx)(n.p,{children:"enum SessionStatus {\nSESSION_STATUS_UNSPECIFIED = 0;\nSESSION_STATUS_ACTIVE = 1;\nSESSION_STATUS_EXPIRING = 2;      // Near expiration\nSESSION_STATUS_READ_ONLY = 3;     // Read operations only\nSESSION_STATUS_TERMINATING = 4;   // Shutting down\n}"}),"\n",(0,t.jsx)(n.p,{children:"message GetSessionRequest {\nstring session_token = 1;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message GetSessionResponse {\nstring session_id = 1;\nSessionStatus status = 2;\ngoogle.protobuf.Timestamp created_at = 3;\ngoogle.protobuf.Timestamp expires_at = 4;\ngoogle.protobuf.Timestamp last_activity = 5;\nprism.config.v1.ClientConfig config = 6;\nSessionMetrics metrics = 7;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message SessionMetrics {\nint64 requests_processed = 1;\nint64 bytes_sent = 2;\nint64 bytes_received = 3;\nint32 active_streams = 4;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message RefreshSessionRequest {\nstring session_token = 1;\ngoogle.protobuf.Duration extension = 2;  // How long to extend\n}"}),"\n",(0,t.jsx)(n.p,{children:"message RefreshSessionResponse {\ngoogle.protobuf.Timestamp new_expires_at = 1;\n}"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### 2.4 Usage Examples\n\n**Create Session (Named Config):**\n"})}),"\n",(0,t.jsx)(n.p,{children:"client := session.NewSessionServiceClient(conn)"}),"\n",(0,t.jsx)(n.p,{children:'resp, err := client.CreateSession(ctx, &session.CreateSessionRequest{\nAuth: &session.CreateSessionRequest_ApiKey{\nApiKey: "key-123",\n},\nConfig: &session.CreateSessionRequest_ConfigName{\nConfigName: "user-profiles",\n},\nClientId: "app-service-v1",\nClientVersion: "1.0.0",\n})'}),"\n",(0,t.jsx)(n.p,{children:"sessionToken := resp.SessionToken"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n**Heartbeat Loop:**\n"})}),"\n",(0,t.jsx)(n.p,{children:"ticker := time.NewTicker(30 * time.Second)\ndefer ticker.Stop()"}),"\n",(0,t.jsx)(n.p,{children:'for {\nselect {\ncase <-ticker.C:\nresp, err := client.Heartbeat(ctx, &session.HeartbeatRequest{\nSessionToken: sessionToken,\n})\nif err != nil {\nlog.Error("heartbeat failed", err)\nreturn\n}\nlog.Debug("heartbeat ok", "ttl", resp.Ttl)\ncase <-done:\nreturn\n}\n}'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n## 3. Queue Service\n\n### 3.1 Overview\n\nKafka-style message queue operations with topics, partitions, and offsets.\n\n### 3.2 Service Definition\n\n"})}),"\n",(0,t.jsx)(n.p,{children:'syntax = "proto3";'}),"\n",(0,t.jsx)(n.p,{children:"package prism.queue.v1;"}),"\n",(0,t.jsx)(n.p,{children:'import "google/protobuf/timestamp.proto";\nimport "google/protobuf/duration.proto";'}),"\n",(0,t.jsx)(n.p,{children:"service QueueService {\n// Publish message to topic\nrpc Publish(PublishRequest) returns (PublishResponse);"}),"\n",(0,t.jsx)(n.p,{children:"// Publish batch of messages\nrpc PublishBatch(PublishBatchRequest) returns (PublishBatchResponse);"}),"\n",(0,t.jsx)(n.p,{children:"// Subscribe to topic (server streaming)\nrpc Subscribe(SubscribeRequest) returns (stream Message);"}),"\n",(0,t.jsx)(n.p,{children:"// Acknowledge message processing\nrpc Acknowledge(AcknowledgeRequest) returns (AcknowledgeResponse);"}),"\n",(0,t.jsx)(n.p,{children:"// Commit offset for consumer group\nrpc Commit(CommitRequest) returns (CommitResponse);"}),"\n",(0,t.jsx)(n.p,{children:"// Seek to specific offset\nrpc Seek(SeekRequest) returns (SeekResponse);"}),"\n",(0,t.jsx)(n.p,{children:"// Get topic metadata\nrpc GetTopicInfo(GetTopicInfoRequest) returns (GetTopicInfoResponse);\n}"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### 3.3 Messages\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"message PublishRequest {\nstring session_token = 1;\nstring topic = 2;\nbytes payload = 3;\nmap<string, string> headers = 4;\noptional string partition_key = 5;\noptional int32 partition = 6;  // Explicit partition\n}"}),"\n",(0,t.jsx)(n.p,{children:"message PublishResponse {\nstring message_id = 1;\nint64 offset = 2;\nint32 partition = 3;\ngoogle.protobuf.Timestamp timestamp = 4;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message PublishBatchRequest {\nstring session_token = 1;\nstring topic = 2;\nrepeated BatchMessage messages = 3;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message BatchMessage {\nbytes payload = 1;\nmap<string, string> headers = 2;\noptional string partition_key = 3;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message PublishBatchResponse {\nrepeated PublishResponse results = 1;\nint32 success_count = 2;\nint32 failure_count = 3;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message SubscribeRequest {\nstring session_token = 1;\nstring topic = 2;\nstring consumer_group = 3;"}),"\n",(0,t.jsx)(n.p,{children:"// Starting position\noneof start_position {\nint64 offset = 4;\ngoogle.protobuf.Timestamp timestamp = 5;\nStartPosition position = 6;\n}"}),"\n",(0,t.jsx)(n.p,{children:"// Flow control\noptional int32 max_messages = 7;\noptional google.protobuf.Duration timeout = 8;\n}"}),"\n",(0,t.jsx)(n.p,{children:"enum StartPosition {\nSTART_POSITION_UNSPECIFIED = 0;\nSTART_POSITION_EARLIEST = 1;\nSTART_POSITION_LATEST = 2;\nSTART_POSITION_COMMITTED = 3;  // Last committed offset\n}"}),"\n",(0,t.jsx)(n.p,{children:"message Message {\nstring message_id = 1;\nstring topic = 2;\nint32 partition = 3;\nint64 offset = 4;\nbytes payload = 5;\nmap<string, string> headers = 6;\ngoogle.protobuf.Timestamp timestamp = 7;"}),"\n",(0,t.jsx)(n.p,{children:"// Metadata\noptional string producer_id = 8;\noptional int32 attempt = 9;  // For retries\n}"}),"\n",(0,t.jsx)(n.p,{children:"message AcknowledgeRequest {\nstring session_token = 1;\nrepeated string message_ids = 2;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message AcknowledgeResponse {\nint32 acknowledged_count = 1;\nrepeated string failed_ids = 2;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message CommitRequest {\nstring session_token = 1;\nstring topic = 2;\nstring consumer_group = 3;\nrepeated PartitionOffset offsets = 4;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message PartitionOffset {\nint32 partition = 1;\nint64 offset = 2;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message CommitResponse {\nbool success = 1;\nrepeated PartitionOffset committed = 2;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message SeekRequest {\nstring session_token = 1;\nstring topic = 2;\nstring consumer_group = 3;\nrepeated PartitionOffset positions = 4;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message SeekResponse {\nbool success = 1;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message GetTopicInfoRequest {\nstring session_token = 1;\nstring topic = 2;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message GetTopicInfoResponse {\nstring topic = 1;\nint32 partition_count = 2;\nint64 message_count = 3;\nrepeated PartitionInfo partitions = 4;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message PartitionInfo {\nint32 partition = 1;\nint64 earliest_offset = 2;\nint64 latest_offset = 3;\nint64 message_count = 4;\n}"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### 3.4 Usage Examples\n\n**Publish:**\n"})}),"\n",(0,t.jsx)(n.p,{children:'let response = client.publish(PublishRequest {\nsession_token: token.clone(),\ntopic: "events".to_string(),\npayload: serde_json::to_vec(&event)?,\nheaders: headers,\npartition_key: Some(user_id),\n..Default::default()\n}).await?;'}),"\n",(0,t.jsx)(n.p,{children:'println!("Published to partition {} offset {}",\nresponse.partition, response.offset);'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n**Subscribe (Streaming):**\n"})}),"\n",(0,t.jsx)(n.p,{children:'let mut stream = client.subscribe(SubscribeRequest {\nsession_token: token.clone(),\ntopic: "events".to_string(),\nconsumer_group: "processors".to_string(),\nstart_position: Some(\nsubscribe_request::StartPosition::Position(StartPosition::Latest as i32)\n),\n..Default::default()\n}).await?.into_inner();'}),"\n",(0,t.jsx)(n.p,{children:"while let Some(message) = stream.message().await? {\nprocess_message(&message).await?;"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"client.acknowledge(AcknowledgeRequest {\n    session_token: token.clone(),\n    message_ids: vec![message.message_id],\n}).await?;\n"})}),"\n",(0,t.jsx)(n.p,{children:"}"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n## 4. PubSub Service\n\n### 4.1 Overview\n\nNATS-style publish-subscribe with topic patterns and wildcards.\n\n### 4.2 Service Definition\n\n"})}),"\n",(0,t.jsx)(n.p,{children:'syntax = "proto3";'}),"\n",(0,t.jsx)(n.p,{children:"package prism.pubsub.v1;"}),"\n",(0,t.jsx)(n.p,{children:'import "google/protobuf/timestamp.proto";'}),"\n",(0,t.jsx)(n.p,{children:"service PubSubService {\n// Publish event to topic\nrpc Publish(PublishRequest) returns (PublishResponse);"}),"\n",(0,t.jsx)(n.p,{children:"// Subscribe to topic pattern (server streaming)\nrpc Subscribe(SubscribeRequest) returns (stream Event);"}),"\n",(0,t.jsx)(n.p,{children:"// Unsubscribe from topic pattern\nrpc Unsubscribe(UnsubscribeRequest) returns (UnsubscribeResponse);"}),"\n",(0,t.jsx)(n.p,{children:"// List active subscriptions\nrpc ListSubscriptions(ListSubscriptionsRequest) returns (ListSubscriptionsResponse);\n}"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### 4.3 Messages\n\n"})}),"\n",(0,t.jsx)(n.p,{children:'message PublishRequest {\nstring session_token = 1;\nstring topic = 2;  // e.g., "events.user.created"\nbytes payload = 3;\nmap<string, string> metadata = 4;\noptional string correlation_id = 5;\noptional string reply_to = 6;  // For request-reply pattern\n}'}),"\n",(0,t.jsx)(n.p,{children:"message PublishResponse {\nstring event_id = 1;\ngoogle.protobuf.Timestamp published_at = 2;\nint32 subscriber_count = 3;  // How many subscribers received it\n}"}),"\n",(0,t.jsx)(n.p,{children:'message SubscribeRequest {\nstring session_token = 1;\nstring topic_pattern = 2;  // e.g., "events.user.*", "events.>"\noptional string queue_group = 3;  // For load balancing\nSubscriptionOptions options = 4;\n}'}),"\n",(0,t.jsx)(n.p,{children:"message SubscriptionOptions {\nbool auto_acknowledge = 1;  // Auto-ack on delivery\noptional int32 max_messages = 2;  // Limit total messages\noptional google.protobuf.Duration max_duration = 3;  // Subscription timeout\n}"}),"\n",(0,t.jsx)(n.p,{children:"message Event {\nstring event_id = 1;\nstring topic = 2;\nbytes payload = 3;\nmap<string, string> metadata = 4;\ngoogle.protobuf.Timestamp timestamp = 5;"}),"\n",(0,t.jsx)(n.p,{children:"// Request-reply support\noptional string correlation_id = 6;\noptional string reply_to = 7;"}),"\n",(0,t.jsx)(n.p,{children:"// Subscription info\nstring subscription_id = 8;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message UnsubscribeRequest {\nstring session_token = 1;\nstring subscription_id = 2;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message UnsubscribeResponse {\nbool success = 1;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message ListSubscriptionsRequest {\nstring session_token = 1;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message ListSubscriptionsResponse {\nrepeated Subscription subscriptions = 1;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message Subscription {\nstring subscription_id = 1;\nstring topic_pattern = 2;\noptional string queue_group = 3;\ngoogle.protobuf.Timestamp created_at = 4;\nint64 messages_received = 5;\nbool active = 6;\n}"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### 4.4 Usage Examples\n\n**Subscribe with Wildcard:**\n"})}),"\n",(0,t.jsx)(n.p,{children:'stream, err := client.Subscribe(ctx, &pubsub.SubscribeRequest{\nSessionToken: token,\nTopicPattern: "events.user.*",  // Match all user events\nQueueGroup: "processors",        // Load balance across group\nOptions: &pubsub.SubscriptionOptions{\nAutoAcknowledge: true,\n},\n})'}),"\n",(0,t.jsx)(n.p,{children:'for {\nevent, err := stream.Recv()\nif err == io.EOF {\nbreak\n}\nif err != nil {\nlog.Error("stream error", err)\nbreak\n}'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'log.Info("received event", "topic", event.Topic, "id", event.EventId)\nprocessEvent(event)\n'})}),"\n",(0,t.jsx)(n.p,{children:"}"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n## 5. Reader Service\n\n### 5.1 Overview\n\nDatabase-style paged reading with queries and filters.\n\n### 5.2 Service Definition\n\n"})}),"\n",(0,t.jsx)(n.p,{children:'syntax = "proto3";'}),"\n",(0,t.jsx)(n.p,{children:"package prism.reader.v1;"}),"\n",(0,t.jsx)(n.p,{children:'import "google/protobuf/struct.proto";\nimport "google/protobuf/timestamp.proto";'}),"\n",(0,t.jsx)(n.p,{children:"service ReaderService {\n// Read pages of data (server streaming)\nrpc Read(ReadRequest) returns (stream Page);"}),"\n",(0,t.jsx)(n.p,{children:"// Query with filters (server streaming)\nrpc Query(QueryRequest) returns (stream Row);"}),"\n",(0,t.jsx)(n.p,{children:"// Count matching records\nrpc Count(CountRequest) returns (CountResponse);"}),"\n",(0,t.jsx)(n.p,{children:"// Get single record by ID\nrpc Get(GetRequest) returns (GetResponse);\n}"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### 5.3 Messages\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"message ReadRequest {\nstring session_token = 1;\nstring collection = 2;\nint32 page_size = 3;\noptional string cursor = 4;  // Continuation token\nrepeated string fields = 5;  // Projection (empty = all fields)\noptional Filter filter = 6;\nrepeated Sort sort = 7;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message Page {\nrepeated Row rows = 1;\noptional string next_cursor = 2;\nbool has_more = 3;\nPageMetadata metadata = 4;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message PageMetadata {\nint32 row_count = 1;\nint32 page_number = 2;\ngoogle.protobuf.Timestamp generated_at = 3;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message Row {\nmap<string, google.protobuf.Value> fields = 1;\noptional RowMetadata metadata = 2;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message RowMetadata {\ngoogle.protobuf.Timestamp created_at = 1;\ngoogle.protobuf.Timestamp updated_at = 2;\nstring version = 3;  // For optimistic locking\n}"}),"\n",(0,t.jsx)(n.p,{children:"message QueryRequest {\nstring session_token = 1;\nstring collection = 2;\nFilter filter = 3;\nrepeated Sort sort = 4;\noptional int32 limit = 5;\noptional int32 offset = 6;\nrepeated string fields = 7;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message Filter {\noneof filter {\nFieldFilter field = 1;\nCompositeFilter composite = 2;\n}\n}"}),"\n",(0,t.jsx)(n.p,{children:"message FieldFilter {\nstring field = 1;\nOperator op = 2;\ngoogle.protobuf.Value value = 3;"}),"\n",(0,t.jsx)(n.p,{children:"enum Operator {\nOPERATOR_UNSPECIFIED = 0;\nOPERATOR_EQUALS = 1;\nOPERATOR_NOT_EQUALS = 2;\nOPERATOR_GREATER_THAN = 3;\nOPERATOR_GREATER_THAN_OR_EQUALS = 4;\nOPERATOR_LESS_THAN = 5;\nOPERATOR_LESS_THAN_OR_EQUALS = 6;\nOPERATOR_IN = 7;\nOPERATOR_NOT_IN = 8;\nOPERATOR_CONTAINS = 9;\nOPERATOR_STARTS_WITH = 10;\nOPERATOR_ENDS_WITH = 11;\n}\n}"}),"\n",(0,t.jsx)(n.p,{children:"message CompositeFilter {\nLogicalOperator op = 1;\nrepeated Filter filters = 2;"}),"\n",(0,t.jsx)(n.p,{children:"enum LogicalOperator {\nLOGICAL_OPERATOR_UNSPECIFIED = 0;\nLOGICAL_OPERATOR_AND = 1;\nLOGICAL_OPERATOR_OR = 2;\nLOGICAL_OPERATOR_NOT = 3;\n}\n}"}),"\n",(0,t.jsx)(n.p,{children:"message Sort {\nstring field = 1;\nDirection direction = 2;"}),"\n",(0,t.jsx)(n.p,{children:"enum Direction {\nDIRECTION_UNSPECIFIED = 0;\nDIRECTION_ASC = 1;\nDIRECTION_DESC = 2;\n}\n}"}),"\n",(0,t.jsx)(n.p,{children:"message CountRequest {\nstring session_token = 1;\nstring collection = 2;\noptional Filter filter = 3;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message CountResponse {\nint64 count = 1;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message GetRequest {\nstring session_token = 1;\nstring collection = 2;\nstring id = 3;\nrepeated string fields = 4;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message GetResponse {\noptional Row row = 1;\nbool found = 2;\n}"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### 5.4 Usage Examples\n\n**Paged Reading:**\n"})}),"\n",(0,t.jsx)(n.p,{children:'stream = client.Read(reader_pb2.ReadRequest(\nsession_token=token,\ncollection="users",\npage_size=100,\nfields=["id", "name", "email"],\nsort=[\nreader_pb2.Sort(field="created_at", direction=reader_pb2.Sort.DIRECTION_DESC)\n]\n))'}),"\n",(0,t.jsx)(n.p,{children:'for page in stream:\nfor row in page.rows:\nuser_id = row.fields["id"].string_value\nname = row.fields["name"].string_value\nprint(f"User: {user_id} - {name}")'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"if not page.has_more:\n    break\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n**Query with Filter:**\n"})}),"\n",(0,t.jsx)(n.h1,{id:"complex-filter-active-users-created-in-last-30-days",children:"Complex filter: active users created in last 30 days"}),"\n",(0,t.jsx)(n.p,{children:'filter = reader_pb2.Filter(\ncomposite=reader_pb2.CompositeFilter(\nop=reader_pb2.CompositeFilter.LOGICAL_OPERATOR_AND,\nfilters=[\nreader_pb2.Filter(\nfield=reader_pb2.FieldFilter(\nfield="status",\nop=reader_pb2.FieldFilter.OPERATOR_EQUALS,\nvalue=Value(string_value="active")\n)\n),\nreader_pb2.Filter(\nfield=reader_pb2.FieldFilter(\nfield="created_at",\nop=reader_pb2.FieldFilter.OPERATOR_GREATER_THAN,\nvalue=Value(string_value="2025-09-07T00:00:00Z")\n)\n)\n]\n)\n)'}),"\n",(0,t.jsx)(n.p,{children:'stream = client.Query(reader_pb2.QueryRequest(\nsession_token=token,\ncollection="users",\nfilter=filter,\nlimit=1000\n))'}),"\n",(0,t.jsx)(n.p,{children:"for row in stream:\nprocess_user(row)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n## 6. Transact Service\n\n### 6.1 Overview\n\nTransactional writes across two tables (inbox/outbox pattern).\n\n### 6.2 Service Definition\n\n"})}),"\n",(0,t.jsx)(n.p,{children:'syntax = "proto3";'}),"\n",(0,t.jsx)(n.p,{children:"package prism.transact.v1;"}),"\n",(0,t.jsx)(n.p,{children:'import "google/protobuf/struct.proto";\nimport "google/protobuf/timestamp.proto";'}),"\n",(0,t.jsx)(n.p,{children:"service TransactService {\n// Single transactional write\nrpc Write(WriteRequest) returns (WriteResponse);"}),"\n",(0,t.jsx)(n.p,{children:"// Streaming transaction (begin, writes, commit/rollback)\nrpc Transaction(stream TransactRequest) returns (stream TransactResponse);"}),"\n",(0,t.jsx)(n.p,{children:"// Read mailbox messages\nrpc ReadMailbox(ReadMailboxRequest) returns (stream MailboxMessage);"}),"\n",(0,t.jsx)(n.p,{children:"// Mark mailbox messages as processed\nrpc ProcessMailbox(ProcessMailboxRequest) returns (ProcessMailboxResponse);\n}"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### 6.3 Messages\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"message WriteRequest {\nstring session_token = 1;"}),"\n",(0,t.jsx)(n.p,{children:"// Data table write\nDataWrite data = 2;"}),"\n",(0,t.jsx)(n.p,{children:"// Mailbox table write\nMailboxWrite mailbox = 3;"}),"\n",(0,t.jsx)(n.p,{children:"// Transaction options\nTransactionOptions options = 4;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message DataWrite {\nstring table = 1;\nmap<string, google.protobuf.Value> record = 2;\nWriteMode mode = 3;\noptional string id_field = 4;  // For updates"}),"\n",(0,t.jsx)(n.p,{children:"enum WriteMode {\nWRITE_MODE_UNSPECIFIED = 0;\nWRITE_MODE_INSERT = 1;\nWRITE_MODE_UPDATE = 2;\nWRITE_MODE_UPSERT = 3;\nWRITE_MODE_DELETE = 4;\n}\n}"}),"\n",(0,t.jsx)(n.p,{children:"message MailboxWrite {\nstring mailbox_id = 1;\nbytes message = 2;\nmap<string, string> metadata = 3;\noptional string message_type = 4;\noptional int32 priority = 5;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message TransactionOptions {\nIsolationLevel isolation = 1;\nint32 timeout_ms = 2;\nbool idempotent = 3;  // Safe to retry\noptional string idempotency_key = 4;"}),"\n",(0,t.jsx)(n.p,{children:"enum IsolationLevel {\nISOLATION_LEVEL_UNSPECIFIED = 0;\nISOLATION_LEVEL_READ_COMMITTED = 1;\nISOLATION_LEVEL_REPEATABLE_READ = 2;\nISOLATION_LEVEL_SERIALIZABLE = 3;\n}\n}"}),"\n",(0,t.jsx)(n.p,{children:"message WriteResponse {\nstring transaction_id = 1;\nbool committed = 2;\nDataWriteResult data_result = 3;\nMailboxWriteResult mailbox_result = 4;\ngoogle.protobuf.Timestamp timestamp = 5;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message DataWriteResult {\nint64 rows_affected = 1;\nmap<string, google.protobuf.Value> generated_values = 2;  // Auto-generated IDs, etc.\n}"}),"\n",(0,t.jsx)(n.p,{children:"message MailboxWriteResult {\nstring message_id = 1;\nint64 sequence = 2;\n}"}),"\n",(0,t.jsx)(n.p,{children:"// Streaming transaction messages\nmessage TransactRequest {\noneof request {\nBeginTransaction begin = 1;\nWriteRequest write = 2;\nCommitTransaction commit = 3;\nRollbackTransaction rollback = 4;\n}\n}"}),"\n",(0,t.jsx)(n.p,{children:"message BeginTransaction {\nstring session_token = 1;\nTransactionOptions options = 2;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message CommitTransaction {\n// Empty - just signals commit\n}"}),"\n",(0,t.jsx)(n.p,{children:"message RollbackTransaction {\nstring reason = 1;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message TransactResponse {\noneof response {\nTransactionStarted started = 1;\nWriteResponse write_result = 2;\nTransactionCommitted committed = 3;\nTransactionRolledBack rolled_back = 4;\nTransactionError error = 5;\n}\n}"}),"\n",(0,t.jsx)(n.p,{children:"message TransactionStarted {\nstring transaction_id = 1;\ngoogle.protobuf.Timestamp started_at = 2;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message TransactionCommitted {\nbool success = 1;\nint32 write_count = 2;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message TransactionRolledBack {\nstring reason = 1;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message TransactionError {\nstring code = 1;\nstring message = 2;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message ReadMailboxRequest {\nstring session_token = 1;\nstring mailbox_id = 2;\noptional int64 since_sequence = 3;\noptional int32 limit = 4;\noptional bool unprocessed_only = 5;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message MailboxMessage {\nstring message_id = 1;\nstring mailbox_id = 2;\nint64 sequence = 3;\nbytes message = 4;\nmap<string, string> metadata = 5;\noptional string message_type = 6;\ngoogle.protobuf.Timestamp created_at = 7;\nbool processed = 8;\noptional google.protobuf.Timestamp processed_at = 9;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message ProcessMailboxRequest {\nstring session_token = 1;\nrepeated string message_ids = 2;\n}"}),"\n",(0,t.jsx)(n.p,{children:"message ProcessMailboxResponse {\nint32 processed_count = 1;\nrepeated string failed_ids = 2;\n}"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### 6.4 Usage Examples\n\n**Single Transaction:**\n"})}),"\n",(0,t.jsx)(n.p,{children:'let response = client.write(WriteRequest {\nsession_token: token.clone(),\ndata: Some(DataWrite {\ntable: "orders".to_string(),\nrecord: order_data,\nmode: WriteMode::Insert as i32,\n..Default::default()\n}),\nmailbox: Some(MailboxWrite {\nmailbox_id: "order-events".to_string(),\nmessage: event_bytes,\nmetadata: metadata,\nmessage_type: Some("order.created".to_string()),\n..Default::default()\n}),\noptions: Some(TransactionOptions {\nisolation: IsolationLevel::Serializable as i32,\nidempotent: true,\nidempotency_key: Some(order_id.clone()),\n..Default::default()\n}),\n}).await?;'}),"\n",(0,t.jsx)(n.p,{children:'println!("Transaction {} committed", response.transaction_id);'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n**Streaming Transaction:**\n"})}),"\n",(0,t.jsx)(n.p,{children:"let (mut tx, mut rx) = client.transaction().await?.into_inner().split();"}),"\n",(0,t.jsx)(n.p,{children:"// Begin\ntx.send(TransactRequest {\nrequest: Some(transact_request::Request::Begin(BeginTransaction {\nsession_token: token.clone(),\n..Default::default()\n}))\n}).await?;"}),"\n",(0,t.jsx)(n.p,{children:"let started = rx.message().await?.unwrap();"}),"\n",(0,t.jsx)(n.p,{children:"// Multiple writes\nfor order in orders {\ntx.send(TransactRequest {\nrequest: Some(transact_request::Request::Write(/* ... */))\n}).await?;"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"let result = rx.message().await?;\n"})}),"\n",(0,t.jsx)(n.p,{children:"}"}),"\n",(0,t.jsx)(n.p,{children:"// Commit\ntx.send(TransactRequest {\nrequest: Some(transact_request::Request::Commit(CommitTransaction {}))\n}).await?;"}),"\n",(0,t.jsx)(n.p,{children:"let committed = rx.message().await?.unwrap();"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n## 7. Error Handling\n\n### 7.1 gRPC Status Codes\n\nAll services use standard gRPC status codes:\n\n| Code | Usage |\n|------|-------|\n| `OK` | Success |\n| `CANCELLED` | Client cancelled |\n| `INVALID_ARGUMENT` | Invalid request parameters |\n| `DEADLINE_EXCEEDED` | Timeout |\n| `NOT_FOUND` | Resource not found |\n| `ALREADY_EXISTS` | Duplicate creation |\n| `PERMISSION_DENIED` | Authorization failure |\n| `RESOURCE_EXHAUSTED` | Rate limit exceeded |\n| `FAILED_PRECONDITION` | Precondition not met |\n| `ABORTED` | Transaction conflict |\n| `OUT_OF_RANGE` | Invalid range |\n| `UNIMPLEMENTED` | Feature not available |\n| `INTERNAL` | Server error |\n| `UNAVAILABLE` | Service unavailable |\n| `UNAUTHENTICATED` | Invalid/missing auth |\n\n### 7.2 Error Details\n\nUse `google.rpc.ErrorInfo` for structured errors:\n\n"})}),"\n",(0,t.jsx)(n.p,{children:'import "google/rpc/error_details.proto";'}),"\n",(0,t.jsx)(n.p,{children:'// In error response metadata\ngoogle.rpc.ErrorInfo {\nreason: "INVALID_SESSION_TOKEN"\ndomain: "prism.session.v1"\nmetadata: {\n"session_id": "sess-123"\n"expired_at": "2025-10-07T12:00:00Z"\n}\n}'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### 7.3 Client Error Handling\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"resp, err := client.Publish(ctx, req)\nif err != nil {\nst, ok := status.FromError(err)\nif !ok {\n// Non-gRPC error\nreturn err\n}"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"switch st.Code() {\ncase codes.Unauthenticated:\n    // Refresh session\n    return refreshAndRetry()\ncase codes.ResourceExhausted:\n    // Rate limited, backoff\n    time.Sleep(backoff)\n    return retry()\ncase codes.Unavailable:\n    // Service down, circuit breaker\n    return circuitBreaker.RecordFailure(err)\ndefault:\n    return err\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"}"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n## 8. Backward Compatibility\n\n### 8.1 Versioning Strategy\n\n- **API Version**: `v1`, `v2` in package name (`prism.queue.v1`)\n- **Service Version**: Separate services for major versions\n- **Message Evolution**: Additive changes only within version\n\n### 8.2 Compatible Changes\n\n\u2705 **Allowed:**\n- Add new RPC methods\n- Add new optional fields\n- Add new enum values (with `UNSPECIFIED` default)\n- Add new message types\n- Deprecate (but don't remove) fields\n\n\u274c **Not Allowed:**\n- Remove or rename fields\n- Change field numbers\n- Change field types\n- Remove RPC methods\n- Change RPC signatures\n\n### 8.3 Deprecation Process\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"message OldRequest {\nstring field1 = 1;\nstring field2 = 2 [deprecated = true];  // Mark deprecated\nstring field3 = 3;  // New replacement\n}"}),"\n",(0,t.jsx)(n.p,{children:"service MyService {\nrpc OldMethod(OldRequest) returns (OldResponse) {\noption deprecated = true;  // Mark deprecated\n}\nrpc NewMethod(NewRequest) returns (NewResponse);\n}"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n## 9. Client Libraries\n\n### 9.1 Repository Location\n\n**GitHub Repository**: `https://github.com/jrepp/prism-data-layer`\n\nAll externally-facing Go library packages are published from this repository. When importing Prism SDK components, use the GitHub module path:\n\n"})}),"\n",(0,t.jsx)(n.p,{children:'import (\n"github.com/jrepp/prism-data-layer/plugin-sdk/auth"\n"github.com/jrepp/prism-data-layer/plugin-sdk/authz"\n"github.com/jrepp/prism-data-layer/plugin-sdk/plugin"\n)'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### 9.2 Generated Clients\n\nAll languages get generated clients:\n\n"})}),"\n",(0,t.jsx)(n.h1,{id:"rust",children:"Rust"}),"\n",(0,t.jsx)(n.p,{children:"buf generate --template buf.gen.rust.yaml"}),"\n",(0,t.jsx)(n.h1,{id:"go",children:"Go"}),"\n",(0,t.jsx)(n.p,{children:"buf generate --template buf.gen.go.yaml"}),"\n",(0,t.jsx)(n.h1,{id:"python",children:"Python"}),"\n",(0,t.jsx)(n.p,{children:"buf generate --template buf.gen.python.yaml"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### 9.3 Client Patterns\n\n**Connection Management:**\n"})}),"\n",(0,t.jsx)(n.p,{children:'// Create connection with keepalive\nconn, err := grpc.Dial(\n"prism.example.com:8980",\ngrpc.WithTransportCredentials(creds),\ngrpc.WithKeepaliveParams(keepalive.ClientParameters{\nTime:    30 * time.Second,\nTimeout: 10 * time.Second,\n}),\n)\ndefer conn.Close()'}),"\n",(0,t.jsx)(n.p,{children:"// Create clients\nsessionClient := session.NewSessionServiceClient(conn)\nqueueClient := queue.NewQueueServiceClient(conn)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n**Metadata Propagation:**\n"})}),"\n",(0,t.jsx)(n.p,{children:'// Add session token to metadata\nmd := metadata.Pairs("x-session-token", sessionToken)\nctx := metadata.NewOutgoingContext(ctx, md)'}),"\n",(0,t.jsx)(n.p,{children:"// Or use interceptor\nfunc sessionTokenInterceptor(token string) grpc.UnaryClientInterceptor {\nreturn func(ctx context.Context, method string, req, reply interface{},\ncc *grpc.ClientConn, invoker grpc.UnaryInvoker, opts ...grpc.CallOption) error {"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'    md := metadata.Pairs("x-session-token", token)\n    ctx = metadata.NewOutgoingContext(ctx, md)\n    return invoker(ctx, method, req, reply, cc, opts...)\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"}"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n## 10. Performance Considerations\n\n### 10.1 Connection Pooling\n\n- Reuse gRPC connections\n- Use HTTP/2 multiplexing (multiple RPCs per connection)\n- Configure connection pool size based on load\n\n### 10.2 Streaming Best Practices\n\n**Server Streaming:**\n- Use backpressure (flow control)\n- Set reasonable page sizes\n- Use cursors for resumption\n\n**Client Streaming:**\n- Batch writes when possible\n- Use buffering to reduce round trips\n\n### 10.3 Timeouts\n\nSet appropriate timeouts:\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"ctx, cancel := context.WithTimeout(ctx, 5*time.Second)\ndefer cancel()"}),"\n",(0,t.jsx)(n.p,{children:"resp, err := client.Publish(ctx, req)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n## 11. Security\n\n### 11.1 Transport Security\n\n- TLS 1.3 required\n- mTLS for service-to-service\n- Certificate rotation support\n\n### 11.2 Authentication\n\nSession tokens in metadata:\nx-session-token: sess-abc123def456\n"})}),"\n",(0,t.jsx)(n.h3,{id:"113-authorization",children:"11.3 Authorization"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Namespace-level permissions"}),"\n",(0,t.jsx)(n.li,{children:"Operation-level permissions"}),"\n",(0,t.jsx)(n.li,{children:"Row-level security (future)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"12-testing",children:"12. Testing"}),"\n",(0,t.jsx)(n.h3,{id:"121-unit-tests",children:"12.1 Unit Tests"}),"\n",(0,t.jsx)(n.p,{children:"Test generated code and client logic:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'func TestPublish(t *testing.T) {\n    // Mock server\n    server := &mockQueueService{\n        publishFunc: func(ctx context.Context, req *queue.PublishRequest) (*queue.PublishResponse, error) {\n            return &queue.PublishResponse{\n                MessageId: "msg-123",\n                Offset: 42,\n                Partition: 0,\n            }, nil\n        },\n    }\n\n    // Test client\n    resp, err := client.Publish(ctx, req)\n    assert.NoError(t, err)\n    assert.Equal(t, "msg-123", resp.MessageId)\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"122-integration-tests",children:"12.2 Integration Tests"}),"\n",(0,t.jsx)(n.p,{children:"Test against real server:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:"func TestQueueIntegration(t *testing.T) {\n    // Start test server\n    server := startTestServer(t)\n    defer server.Stop()\n\n    // Create client\n    conn := dialTestServer(t, server.Addr())\n    client := queue.NewQueueServiceClient(conn)\n\n    // Test flow\n    pubResp, _ := client.Publish(ctx, &queue.PublishRequest{...})\n\n    stream, _ := client.Subscribe(ctx, &queue.SubscribeRequest{...})\n    msg, _ := stream.Recv()\n\n    assert.Equal(t, pubResp.MessageId, msg.MessageId)\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"13-references",children:"13. References"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"RFC-001: Prism Architecture"}),"\n",(0,t.jsx)(n.li,{children:"ADR-023: gRPC-First Interface Design"}),"\n",(0,t.jsx)(n.li,{children:"ADR-024: Layered Interface Hierarchy"}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://grpc.io/docs/",children:"gRPC Documentation"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://protobuf.dev/programming-guides/style/",children:"Protobuf Style Guide"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"14-cache-service-rfc-007",children:"14. Cache Service (RFC-007)"}),"\n",(0,t.jsx)(n.h3,{id:"141-overview",children:"14.1 Overview"}),"\n",(0,t.jsx)(n.p,{children:"Transparent caching layer with look-aside and write-through strategies for high-performance data access."}),"\n",(0,t.jsx)(n.h3,{id:"142-service-definition",children:"14.2 Service Definition"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-protobuf",children:'syntax = "proto3";\n\npackage prism.cache.v1;\n\nservice CacheService {\n  // Get value from cache (look-aside pattern)\n  rpc Get(GetRequest) returns (GetResponse);\n\n  // Set value in cache\n  rpc Set(SetRequest) returns (SetResponse);\n\n  // Delete cache entry\n  rpc Delete(DeleteRequest) returns (DeleteResponse);\n\n  // Get multiple values (batch)\n  rpc GetMulti(GetMultiRequest) returns (GetMultiResponse);\n\n  // Check if key exists\n  rpc Exists(ExistsRequest) returns (ExistsResponse);\n\n  // Set with expiration\n  rpc SetEx(SetExRequest) returns (SetExResponse);\n\n  // Increment counter\n  rpc Increment(IncrementRequest) returns (IncrementResponse);\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"143-cache-patterns",children:"14.3 Cache Patterns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Look-Aside (Cache-Aside)"}),":"]}),"\n",(0,t.jsx)(n.mermaid,{value:'sequenceDiagram\n    participant Client\n    participant Prism\n    participant Cache as Redis Cache\n    participant DB as PostgreSQL\n\n    Client->>Prism: Get(key="user:123")\n    Prism->>Cache: GET user:123\n    alt Cache Hit\n        Cache--\x3e>Prism: User data\n        Prism--\x3e>Client: User data (2ms)\n    else Cache Miss\n        Cache--\x3e>Prism: nil\n        Prism->>DB: SELECT * FROM users WHERE id=123\n        DB--\x3e>Prism: User data\n        Prism->>Cache: SET user:123 data TTL=300s\n        Prism--\x3e>Client: User data (25ms)\n    end'}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Write-Through"}),":"]}),"\n",(0,t.jsx)(n.mermaid,{value:'sequenceDiagram\n    participant Client\n    participant Prism\n    participant Cache as Redis Cache\n    participant DB as PostgreSQL\n\n    Client->>Prism: Set(key="config:flags", value=...)\n    Prism->>DB: UPDATE config SET value=...\n    DB--\x3e>Prism: OK\n    Prism->>Cache: SET config:flags value\n    Cache--\x3e>Prism: OK\n    Prism--\x3e>Client: OK (18ms)'}),"\n",(0,t.jsx)(n.h3,{id:"144-use-case-recommendations",children:"14.4 Use-Case Recommendations"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Use Case"}),(0,t.jsx)(n.th,{children:"Strategy"}),(0,t.jsx)(n.th,{children:"TTL"}),(0,t.jsx)(n.th,{children:"Rationale"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"User Sessions"})]}),(0,t.jsx)(n.td,{children:"Look-Aside"}),(0,t.jsx)(n.td,{children:"24h"}),(0,t.jsx)(n.td,{children:"High read, low write"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"API Responses"})]}),(0,t.jsx)(n.td,{children:"Look-Aside"}),(0,t.jsx)(n.td,{children:"5-15m"}),(0,t.jsx)(n.td,{children:"Tolerate stale data"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Product Catalog"})]}),(0,t.jsx)(n.td,{children:"Look-Aside"}),(0,t.jsx)(n.td,{children:"1h"}),(0,t.jsx)(n.td,{children:"Read-only reference data"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"User Profiles"})]}),(0,t.jsx)(n.td,{children:"Look-Aside"}),(0,t.jsx)(n.td,{children:"15m"}),(0,t.jsx)(n.td,{children:"Frequently accessed"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Application Config"})]}),(0,t.jsx)(n.td,{children:"Write-Through"}),(0,t.jsx)(n.td,{children:"Infinite"}),(0,t.jsx)(n.td,{children:"Require consistency"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Feature Flags"})]}),(0,t.jsx)(n.td,{children:"Write-Through"}),(0,t.jsx)(n.td,{children:"Infinite"}),(0,t.jsx)(n.td,{children:"Must be fresh"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Rate Limit Counters"})]}),(0,t.jsx)(n.td,{children:"Cache-Only"}),(0,t.jsx)(n.td,{children:"1m"}),(0,t.jsx)(n.td,{children:"Temporary state"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u274c ",(0,t.jsx)(n.strong,{children:"Financial Transactions"})]}),(0,t.jsx)(n.td,{children:"No Cache"}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"Require strong consistency"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u274c ",(0,t.jsx)(n.strong,{children:"Audit Logs"})]}),(0,t.jsx)(n.td,{children:"No Cache"}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"Write-once, read-rarely"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"15-timeseries-service-rfc-005",children:"15. TimeSeries Service (RFC-005)"}),"\n",(0,t.jsx)(n.h3,{id:"151-overview",children:"15.1 Overview"}),"\n",(0,t.jsx)(n.p,{children:"ClickHouse-backed time series analytics for high-volume event data with OLAP queries."}),"\n",(0,t.jsx)(n.h3,{id:"152-service-definition",children:"15.2 Service Definition"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-protobuf",children:'syntax = "proto3";\n\npackage prism.timeseries.v1;\n\nservice TimeSeriesService {\n  // Append event(s) to time series\n  rpc AppendEvents(AppendEventsRequest) returns (AppendEventsResponse);\n\n  // Stream events for continuous ingestion\n  rpc StreamEvents(stream Event) returns (StreamEventsResponse);\n\n  // Query events with time range and filters\n  rpc QueryEvents(QueryRequest) returns (QueryResponse);\n\n  // Query pre-aggregated data\n  rpc QueryAggregates(AggregateRequest) returns (AggregateResponse);\n\n  // Stream query results\n  rpc StreamQuery(QueryRequest) returns (stream Event);\n}\n\nmessage Event {\n  int64 timestamp = 1;  // Unix nanoseconds\n  string event_type = 2;\n  string source = 3;\n  map<string, string> dimensions = 4;\n  map<string, double> metrics = 5;\n  string payload = 6;\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"153-architecture",children:"15.3 Architecture"}),"\n",(0,t.jsx)(n.mermaid,{value:"graph LR\n    Client[Client Apps]\n    Proxy[Prism Proxy]\n    CH[ClickHouse<br/>Sharded Cluster]\n    MV[Materialized Views<br/>1m, 5m, 1h rollups]\n\n    Client --\x3e|Append Events| Proxy\n    Proxy --\x3e|Batch Insert| CH\n    CH --\x3e MV\n    Client --\x3e|Query Aggregates| Proxy\n    Proxy --\x3e|SELECT| MV"}),"\n",(0,t.jsx)(n.h3,{id:"154-use-case-recommendations",children:"15.4 Use-Case Recommendations"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Use Case"}),(0,t.jsx)(n.th,{children:"Ingestion Rate"}),(0,t.jsx)(n.th,{children:"Retention"}),(0,t.jsx)(n.th,{children:"Rationale"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Application Logs"})]}),(0,t.jsx)(n.td,{children:"100k events/s"}),(0,t.jsx)(n.td,{children:"30 days"}),(0,t.jsx)(n.td,{children:"High volume, short retention"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Observability Metrics"})]}),(0,t.jsx)(n.td,{children:"1M events/s"}),(0,t.jsx)(n.td,{children:"90 days"}),(0,t.jsx)(n.td,{children:"Standard monitoring retention"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"User Analytics"})]}),(0,t.jsx)(n.td,{children:"10k events/s"}),(0,t.jsx)(n.td,{children:"1 year"}),(0,t.jsx)(n.td,{children:"Business analytics"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"IoT Sensor Data"})]}),(0,t.jsx)(n.td,{children:"500k events/s"}),(0,t.jsx)(n.td,{children:"90 days"}),(0,t.jsx)(n.td,{children:"High frequency measurements"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Click Stream"})]}),(0,t.jsx)(n.td,{children:"50k events/s"}),(0,t.jsx)(n.td,{children:"180 days"}),(0,t.jsx)(n.td,{children:"User behavior analysis"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Audit Events"})]}),(0,t.jsx)(n.td,{children:"1k events/s"}),(0,t.jsx)(n.td,{children:"7 years"}),(0,t.jsx)(n.td,{children:"Compliance requirements"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u274c ",(0,t.jsx)(n.strong,{children:"Real-Time Transactions"})]}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"Use transactional DB instead"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"16-object-storage-service-adr-032",children:"16. Object Storage Service (ADR-032)"}),"\n",(0,t.jsx)(n.h3,{id:"161-overview",children:"16.1 Overview"}),"\n",(0,t.jsx)(n.p,{children:"S3-compatible object storage for blobs with MinIO for local development."}),"\n",(0,t.jsx)(n.h3,{id:"162-service-definition",children:"16.2 Service Definition"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-protobuf",children:'syntax = "proto3";\n\npackage prism.objectstore.v1;\n\nservice ObjectStoreService {\n  // Upload object (streaming for large files)\n  rpc PutObject(stream PutObjectRequest) returns (PutObjectResponse);\n\n  // Download object (streaming)\n  rpc GetObject(GetObjectRequest) returns (stream GetObjectResponse);\n\n  // Delete object\n  rpc DeleteObject(DeleteObjectRequest) returns (DeleteObjectResponse);\n\n  // List objects in bucket/prefix\n  rpc ListObjects(ListObjectsRequest) returns (ListObjectsResponse);\n\n  // Get object metadata\n  rpc HeadObject(HeadObjectRequest) returns (HeadObjectResponse);\n\n  // Generate presigned URL\n  rpc GetPresignedURL(PresignedURLRequest) returns (PresignedURLResponse);\n}\n\nmessage PutObjectRequest {\n  string bucket = 1;\n  string key = 2;\n  map<string, string> metadata = 3;\n  string content_type = 4;\n  optional int64 ttl_seconds = 5;\n  bytes chunk = 6;  // Streaming chunk\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"163-architecture",children:"16.3 Architecture"}),"\n",(0,t.jsx)(n.mermaid,{value:"graph TB\n    Client[Client App]\n    Proxy[Prism Proxy]\n    MinIO[MinIO / S3]\n    CDN[CDN<br/>Optional]\n\n    Client --\x3e|Upload| Proxy\n    Proxy --\x3e|Stream| MinIO\n    Client --\x3e|Get Presigned URL| Proxy\n    Proxy --\x3e|Generate URL| MinIO\n    Client -.Direct Upload.-> MinIO\n    MinIO -.Serve.-> CDN"}),"\n",(0,t.jsx)(n.h3,{id:"164-use-case-recommendations",children:"16.4 Use-Case Recommendations"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Use Case"}),(0,t.jsx)(n.th,{children:"Object Size"}),(0,t.jsx)(n.th,{children:"TTL"}),(0,t.jsx)(n.th,{children:"Rationale"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"File Uploads"})]}),(0,t.jsx)(n.td,{children:"1KB - 100MB"}),(0,t.jsx)(n.td,{children:"90 days"}),(0,t.jsx)(n.td,{children:"User-generated content"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Profile Pictures"})]}),(0,t.jsx)(n.td,{children:"10KB - 5MB"}),(0,t.jsx)(n.td,{children:"1 year"}),(0,t.jsx)(n.td,{children:"Long-lived media"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Build Artifacts"})]}),(0,t.jsx)(n.td,{children:"10MB - 2GB"}),(0,t.jsx)(n.td,{children:"30 days"}),(0,t.jsx)(n.td,{children:"CI/CD outputs"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"ML Models"})]}),(0,t.jsx)(n.td,{children:"100MB - 10GB"}),(0,t.jsx)(n.td,{children:"Infinite"}),(0,t.jsx)(n.td,{children:"Model serving"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Backups"})]}),(0,t.jsx)(n.td,{children:"1GB - 100GB"}),(0,t.jsx)(n.td,{children:"90 days"}),(0,t.jsx)(n.td,{children:"Database backups"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Video/Audio"})]}),(0,t.jsx)(n.td,{children:"10MB - 5GB"}),(0,t.jsx)(n.td,{children:"1 year"}),(0,t.jsx)(n.td,{children:"Media streaming"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Log Archives"})]}),(0,t.jsx)(n.td,{children:"100MB - 10GB"}),(0,t.jsx)(n.td,{children:"7 years"}),(0,t.jsx)(n.td,{children:"Compliance"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u274c ",(0,t.jsx)(n.strong,{children:"Small Metadata"})]}),(0,t.jsx)(n.td,{children:"< 1KB"}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"Use KeyValue instead"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"17-vector-search-service-rfc-004",children:"17. Vector Search Service (RFC-004)"}),"\n",(0,t.jsx)(n.h3,{id:"171-overview",children:"17.1 Overview"}),"\n",(0,t.jsx)(n.p,{children:"Redis-backed vector similarity search for ML embeddings and semantic search."}),"\n",(0,t.jsx)(n.h3,{id:"172-service-definition",children:"17.2 Service Definition"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-protobuf",children:'syntax = "proto3";\n\npackage prism.vector.v1;\n\nservice VectorService {\n  // Index vector embedding\n  rpc IndexVector(IndexVectorRequest) returns (IndexVectorResponse);\n\n  // Search for similar vectors\n  rpc SearchSimilar(SearchRequest) returns (SearchResponse);\n\n  // Batch index vectors\n  rpc BatchIndex(stream IndexVectorRequest) returns (BatchIndexResponse);\n\n  // Delete vector\n  rpc DeleteVector(DeleteVectorRequest) returns (DeleteVectorResponse);\n\n  // Get vector by ID\n  rpc GetVector(GetVectorRequest) returns (GetVectorResponse);\n}\n\nmessage IndexVectorRequest {\n  string id = 1;\n  repeated float vector = 2;  // Embedding (e.g., 768 dims)\n  map<string, string> metadata = 3;\n}\n\nmessage SearchRequest {\n  repeated float query_vector = 1;\n  int32 top_k = 2;  // Return top K similar\n  optional float min_score = 3;\n  map<string, string> filters = 4;\n}\n\nmessage SearchResponse {\n  repeated SimilarVector results = 1;\n}\n\nmessage SimilarVector {\n  string id = 1;\n  float score = 2;  // Similarity score (0-1)\n  map<string, string> metadata = 3;\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"173-architecture",children:"17.3 Architecture"}),"\n",(0,t.jsx)(n.mermaid,{value:"graph LR\n    Client[Client App]\n    Proxy[Prism Proxy]\n    Redis[Redis VSS<br/>Vector Similarity Search]\n    Index[HNSW Index<br/>Hierarchical NSW]\n\n    Client --\x3e|Index Vector| Proxy\n    Proxy --\x3e|FT.INDEX| Redis\n    Redis --\x3e Index\n    Client --\x3e|Search Similar| Proxy\n    Proxy --\x3e|FT.SEARCH| Redis\n    Redis --\x3e|KNN Query| Index"}),"\n",(0,t.jsx)(n.h3,{id:"174-use-case-recommendations",children:"17.4 Use-Case Recommendations"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Use Case"}),(0,t.jsx)(n.th,{children:"Vector Dims"}),(0,t.jsx)(n.th,{children:"Index Size"}),(0,t.jsx)(n.th,{children:"Rationale"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Semantic Search"})]}),(0,t.jsx)(n.td,{children:"384-768"}),(0,t.jsx)(n.td,{children:"1M vectors"}),(0,t.jsx)(n.td,{children:"Document similarity"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Image Similarity"})]}),(0,t.jsx)(n.td,{children:"512-2048"}),(0,t.jsx)(n.td,{children:"10M vectors"}),(0,t.jsx)(n.td,{children:"Visual search"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Product Recommendations"})]}),(0,t.jsx)(n.td,{children:"256-512"}),(0,t.jsx)(n.td,{children:"5M vectors"}),(0,t.jsx)(n.td,{children:"E-commerce similarity"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Duplicate Detection"})]}),(0,t.jsx)(n.td,{children:"128-384"}),(0,t.jsx)(n.td,{children:"100k vectors"}),(0,t.jsx)(n.td,{children:"Content deduplication"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Anomaly Detection"})]}),(0,t.jsx)(n.td,{children:"64-256"}),(0,t.jsx)(n.td,{children:"1M vectors"}),(0,t.jsx)(n.td,{children:"Pattern matching"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u274c ",(0,t.jsx)(n.strong,{children:"High-Dimensional (>4096)"})]}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"Use specialized vector DB"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:["\u274c ",(0,t.jsx)(n.strong,{children:"Exact Match"})]}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"Use KeyValue index instead"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"18-data-access-pattern-decision-tree",children:"18. Data Access Pattern Decision Tree"}),"\n",(0,t.jsx)(n.mermaid,{value:"graph TD\n    Start[What type of data?]\n    Start --\x3e|Binary/Files| ObjStore[Object Storage<br/>MinIO/S3]\n    Start --\x3e|Events/Logs| TimeSeries[TimeSeries<br/>ClickHouse]\n    Start --\x3e|Messages| MsgType{Message Type?}\n    Start --\x3e|Structured| Struct{Access Pattern?}\n    Start --\x3e|Vectors| Vector[Vector Search<br/>Redis VSS]\n\n    MsgType --\x3e|Queue| Queue[Queue Service<br/>Kafka]\n    MsgType --\x3e|PubSub| PubSub[PubSub Service<br/>NATS]\n\n    Struct --\x3e|Read-Heavy| Cache{Stale OK?}\n    Struct --\x3e|Write-Heavy| Transaction[Transact Service<br/>PostgreSQL]\n    Struct --\x3e|Paged Read| Reader[Reader Service<br/>PostgreSQL]\n\n    Cache --\x3e|Yes| LookAside[Look-Aside Cache<br/>Redis + DB]\n    Cache --\x3e|No| WriteThrough[Write-Through Cache<br/>Redis + DB]\n\n    ObjStore -.Metadata.-> Cache\n    TimeSeries -.Aggregates.-> Cache"}),"\n",(0,t.jsx)(n.h2,{id:"19-performance-comparison",children:"19. Performance Comparison"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Pattern"}),(0,t.jsx)(n.th,{children:"Latency (P99)"}),(0,t.jsx)(n.th,{children:"Throughput"}),(0,t.jsx)(n.th,{children:"Use When"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Cache (Hit)"})}),(0,t.jsx)(n.td,{children:"< 5ms"}),(0,t.jsx)(n.td,{children:"50k RPS"}),(0,t.jsx)(n.td,{children:"Frequent reads"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Cache (Miss)"})}),(0,t.jsx)(n.td,{children:"< 50ms"}),(0,t.jsx)(n.td,{children:"5k RPS"}),(0,t.jsx)(n.td,{children:"First access"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"KeyValue"})}),(0,t.jsx)(n.td,{children:"< 20ms"}),(0,t.jsx)(n.td,{children:"10k RPS"}),(0,t.jsx)(n.td,{children:"Transactional data"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"TimeSeries"})}),(0,t.jsx)(n.td,{children:"< 100ms"}),(0,t.jsx)(n.td,{children:"1M events/s"}),(0,t.jsx)(n.td,{children:"Analytics"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Object Storage"})}),(0,t.jsx)(n.td,{children:"< 500ms"}),(0,t.jsx)(n.td,{children:"1k RPS"}),(0,t.jsx)(n.td,{children:"Large files"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Vector Search"})}),(0,t.jsx)(n.td,{children:"< 50ms"}),(0,t.jsx)(n.td,{children:"5k RPS"}),(0,t.jsx)(n.td,{children:"Similarity queries"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Queue"})}),(0,t.jsx)(n.td,{children:"< 30ms"}),(0,t.jsx)(n.td,{children:"100k msgs/s"}),(0,t.jsx)(n.td,{children:"Async processing"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"PubSub"})}),(0,t.jsx)(n.td,{children:"< 10ms"}),(0,t.jsx)(n.td,{children:"50k msgs/s"}),(0,t.jsx)(n.td,{children:"Real-time events"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"20-consistency-guarantees",children:"20. Consistency Guarantees"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Pattern"}),(0,t.jsx)(n.th,{children:"Consistency"}),(0,t.jsx)(n.th,{children:"Durability"}),(0,t.jsx)(n.th,{children:"Rationale"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Look-Aside Cache"})}),(0,t.jsx)(n.td,{children:"Eventual"}),(0,t.jsx)(n.td,{children:"Cache: None, DB: Strong"}),(0,t.jsx)(n.td,{children:"Tolerate stale reads"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Write-Through Cache"})}),(0,t.jsx)(n.td,{children:"Strong"}),(0,t.jsx)(n.td,{children:"Cache: None, DB: Strong"}),(0,t.jsx)(n.td,{children:"Fresh reads required"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"KeyValue (Transact)"})}),(0,t.jsx)(n.td,{children:"Serializable"}),(0,t.jsx)(n.td,{children:"Strong"}),(0,t.jsx)(n.td,{children:"ACID transactions"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"TimeSeries"})}),(0,t.jsx)(n.td,{children:"Eventual"}),(0,t.jsx)(n.td,{children:"Strong"}),(0,t.jsx)(n.td,{children:"Analytics, not transactions"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Object Storage"})}),(0,t.jsx)(n.td,{children:"Strong"}),(0,t.jsx)(n.td,{children:"Strong"}),(0,t.jsx)(n.td,{children:"Immutable objects"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Vector Search"})}),(0,t.jsx)(n.td,{children:"Eventual"}),(0,t.jsx)(n.td,{children:"None (Cache)"}),(0,t.jsx)(n.td,{children:"Search results, not source of truth"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Queue"})}),(0,t.jsx)(n.td,{children:"At-least-once"}),(0,t.jsx)(n.td,{children:"Strong"}),(0,t.jsx)(n.td,{children:"Message delivery"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"PubSub"})}),(0,t.jsx)(n.td,{children:"At-most-once"}),(0,t.jsx)(n.td,{children:"None"}),(0,t.jsx)(n.td,{children:"Real-time, ephemeral"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"21-integration-patterns",children:"21. Integration Patterns"}),"\n",(0,t.jsx)(n.h3,{id:"211-cache--keyvalue",children:"21.1 Cache + KeyValue"}),"\n",(0,t.jsx)(n.mermaid,{value:"sequenceDiagram\n    Client->>Proxy: Read user profile\n    Proxy->>Cache: Check cache\n    alt Cache Hit\n        Cache--\x3e>Proxy: Profile data\n    else Cache Miss\n        Proxy->>KeyValue: Query PostgreSQL\n        KeyValue--\x3e>Proxy: Profile data\n        Proxy->>Cache: Update cache (TTL=15m)\n    end\n    Proxy--\x3e>Client: Profile data"}),"\n",(0,t.jsx)(n.h3,{id:"212-queue--timeseries",children:"21.2 Queue + TimeSeries"}),"\n",(0,t.jsx)(n.mermaid,{value:"sequenceDiagram\n    Client->>Proxy: Publish event to queue\n    Proxy->>Queue: Enqueue (Kafka)\n    Queue--\x3e>Proxy: Acknowledged\n\n    Worker->>Proxy: Subscribe to queue\n    Proxy->>Queue: Pull events\n    Queue--\x3e>Proxy: Event batch\n\n    Worker->>Proxy: AppendEvents (ClickHouse)\n    Proxy->>TimeSeries: Batch insert\n    TimeSeries--\x3e>Proxy: Inserted"}),"\n",(0,t.jsx)(n.h3,{id:"213-object-storage--cache",children:"21.3 Object Storage + Cache"}),"\n",(0,t.jsx)(n.mermaid,{value:"sequenceDiagram\n    Client->>Proxy: Get object metadata\n    Proxy->>Cache: Check metadata cache\n    alt Cache Hit\n        Cache--\x3e>Proxy: Metadata\n    else Cache Miss\n        Proxy->>ObjectStore: HeadObject\n        ObjectStore--\x3e>Proxy: Metadata\n        Proxy->>Cache: Cache metadata (TTL=1h)\n    end\n    Proxy--\x3e>Client: Metadata\n\n    Client->>Proxy: GetPresignedURL\n    Proxy->>ObjectStore: Generate URL\n    ObjectStore--\x3e>Proxy: Presigned URL\n    Proxy--\x3e>Client: URL\n    Client-.Direct Download.->ObjectStore"}),"\n",(0,t.jsx)(n.h2,{id:"22-migration-guide",children:"22. Migration Guide"}),"\n",(0,t.jsx)(n.h3,{id:"221-moving-from-direct-backend-to-prism",children:"22.1 Moving from Direct Backend to Prism"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Before (Direct PostgreSQL)"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import psycopg2\n\nconn = psycopg2.connect("postgres://localhost/mydb")\ncursor = conn.cursor()\ncursor.execute("SELECT * FROM users WHERE id = %s", (user_id,))\nuser = cursor.fetchone()\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"After (Prism Reader Service)"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from prism_sdk import PrismClient\n\nclient = PrismClient(namespace="users")\nresponse = client.get(collection="users", id=user_id)\nuser = response.row.fields\n'})}),"\n",(0,t.jsx)(n.h3,{id:"222-adding-cache-layer",children:"22.2 Adding Cache Layer"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Before (Direct DB reads)"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'user = db.query("SELECT * FROM users WHERE id = ?", user_id)\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"After (Look-Aside Cache via Prism)"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# Prism handles cache check + DB fallback automatically\nuser = client.get(collection="users", id=user_id)\n# First call: ~20ms (DB), subsequent: ~2ms (cache)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"223-event-streaming",children:"22.3 Event Streaming"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Before (Direct Kafka)"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'producer = KafkaProducer(bootstrap_servers="kafka:9092")\nproducer.send("events", event_data)\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"After (Prism Queue Service)"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'client.publish(topic="events", payload=event_data)\n# Prism handles Kafka producer config, retries, partitioning\n'})}),"\n",(0,t.jsx)(n.h2,{id:"23-revision-history",children:"23. Revision History"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"2025-10-07: Initial draft"}),"\n",(0,t.jsx)(n.li,{children:"2025-10-08: Added Cache, TimeSeries, Object Storage, Vector Search services; decision tree; integration patterns"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var r=s(96540);const t={},i=r.createContext(t);function a(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);