"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[8032],{28453:(n,e,i)=>{i.d(e,{R:()=>t,x:()=>l});var s=i(96540);const r={},a=s.createContext(r);function t(n){const e=s.useContext(a);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:t(n.components),s.createElement(a.Provider,{value:e},n.children)}},55915:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"adr-043","title":"Plugin Capability Discovery System","description":"Context","source":"@site/../docs-cms/adr/adr-043-plugin-capability-discovery.md","sourceDirName":".","slug":"/adr-043","permalink":"/prism-data-layer/adr/adr-043","draft":false,"unlisted":false,"editUrl":"https://github.com/jrepp/prism-data-layer/tree/main/docs-cms/../docs-cms/adr/adr-043-plugin-capability-discovery.md","tags":[{"inline":true,"label":"architecture","permalink":"/prism-data-layer/adr/tags/architecture"},{"inline":true,"label":"backend","permalink":"/prism-data-layer/adr/tags/backend"},{"inline":true,"label":"plugin","permalink":"/prism-data-layer/adr/tags/plugin"},{"inline":true,"label":"protobuf","permalink":"/prism-data-layer/adr/tags/protobuf"},{"inline":true,"label":"api-design","permalink":"/prism-data-layer/adr/tags/api-design"}],"version":"current","frontMatter":{"date":"2025-10-09T00:00:00.000Z","deciders":"Platform Team","doc_uuid":"62421fcd-75b9-413a-ba59-a53387f52666","id":"adr-043","project_id":"prism-data-layer","status":"Accepted","tags":["architecture","backend","plugin","protobuf","api-design"],"title":"Plugin Capability Discovery System"},"sidebar":"adrSidebar","previous":{"title":"AWS SQS Queue Backend Plugin \u2022 ADR-042","permalink":"/prism-data-layer/adr/adr-042"},"next":{"title":"TinkerPop/Gremlin Generic Plugin \u2022 ADR-044","permalink":"/prism-data-layer/adr/adr-044"}}');var r=i(74848),a=i(28453);const t={date:new Date("2025-10-09T00:00:00.000Z"),deciders:"Platform Team",doc_uuid:"62421fcd-75b9-413a-ba59-a53387f52666",id:"adr-043",project_id:"prism-data-layer",status:"Accepted",tags:["architecture","backend","plugin","protobuf","api-design"],title:"Plugin Capability Discovery System"},l=void 0,o={},c=[{value:"Context",id:"context",level:2},{value:"Decision",id:"decision",level:2},{value:"Capability Hierarchy",id:"capability-hierarchy",level:3},{value:"Capability Discovery Flow",id:"capability-discovery-flow",level:2},{value:"1. Plugin Registration",id:"1-plugin-registration",level:3},{value:"2. Client Capability Query",id:"2-client-capability-query",level:3},{value:"3. Runtime Validation",id:"3-runtime-validation",level:3},{value:"Example: Selecting Graph Plugin",id:"example-selecting-graph-plugin",level:2},{value:"Capability Inheritance and Composition",id:"capability-inheritance-and-composition",level:2},{value:"Admin UI: Capability Matrix",id:"admin-ui-capability-matrix",level:2},{value:"Consequences",id:"consequences",level:2},{value:"Positive",id:"positive",level:3},{value:"Negative",id:"negative",level:3},{value:"Neutral",id:"neutral",level:3},{value:"References",id:"references",level:2},{value:"Revision History",id:"revision-history",level:2}];function p(n){const e={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"context",children:"Context"}),"\n",(0,r.jsxs)(e.p,{children:["Backend plugins have ",(0,r.jsx)(e.strong,{children:"varying capabilities"})," depending on the underlying data store:"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Example: Graph Operations"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Neptune"}),": Supports Gremlin, SPARQL, full ACID transactions, read replicas"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Neo4j"}),": Supports Cypher, ACID transactions, no SPARQL"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"TinkerGraph (in-memory)"}),": Supports Gremlin, no persistence, no clustering"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"JanusGraph"}),": Supports Gremlin, eventual consistency, distributed"]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Example: KeyValue Operations"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Redis"}),": Fast reads, limited transactions, no complex queries"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"PostgreSQL"}),": Full SQL, ACID transactions, complex queries, slower"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"DynamoDB"}),": Fast reads, limited transactions, eventual consistency option"]}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Current Problem"}),": Clients don't know what features a plugin supports until they try and fail. This leads to:"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Runtime errors for unsupported operations"}),"\n",(0,r.jsx)(e.li,{children:'Poor error messages ("operation not supported")'}),"\n",(0,r.jsx)(e.li,{children:"No way to select optimal plugin for use case"}),"\n",(0,r.jsx)(e.li,{children:"No compile-time validation of plugin compatibility"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"decision",children:"Decision"}),"\n",(0,r.jsxs)(e.p,{children:["Implement a ",(0,r.jsx)(e.strong,{children:"Plugin Capability Discovery System"})," where:"]}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Plugins declare capabilities"})," in protobuf metadata"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Clients query capabilities"})," before invoking operations"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Prism validates"})," client requests against plugin capabilities"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Admin API exposes"})," capability matrix for operational visibility"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"capability-hierarchy",children:"Capability Hierarchy"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-protobuf",children:'syntax = "proto3";\n\npackage prism.plugin.v1;\n\n// Plugin capability declaration\nmessage PluginCapabilities {\n  // Plugin identity\n  string plugin_name = 1;       // "postgres", "neptune", "redis"\n  string plugin_version = 2;    // "1.2.0"\n  repeated string backend_types = 3;  // ["postgres", "timescaledb"]\n\n  // Supported data abstractions\n  repeated DataAbstraction abstractions = 4;\n\n  // Backend-specific features\n  BackendFeatures features = 5;\n\n  // Performance characteristics\n  PerformanceProfile performance = 6;\n\n  // Operational constraints\n  OperationalConstraints constraints = 7;\n}\n\nenum DataAbstraction {\n  DATA_ABSTRACTION_UNSPECIFIED = 0;\n  DATA_ABSTRACTION_KEY_VALUE = 1;\n  DATA_ABSTRACTION_TIME_SERIES = 2;\n  DATA_ABSTRACTION_GRAPH = 3;\n  DATA_ABSTRACTION_DOCUMENT = 4;\n  DATA_ABSTRACTION_QUEUE = 5;\n  DATA_ABSTRACTION_PUBSUB = 6;\n}\n\nmessage BackendFeatures {\n  // Transaction support\n  TransactionCapabilities transactions = 1;\n\n  // Query capabilities\n  QueryCapabilities queries = 2;\n\n  // Consistency models\n  repeated ConsistencyLevel consistency_levels = 3;\n\n  // Persistence guarantees\n  PersistenceFeatures persistence = 4;\n\n  // Scaling capabilities\n  ScalingFeatures scaling = 5;\n}\n\nmessage TransactionCapabilities {\n  bool supports_transactions = 1;\n  bool supports_acid = 2;\n  bool supports_optimistic_locking = 3;\n  bool supports_pessimistic_locking = 4;\n  bool supports_distributed_transactions = 5;\n  int64 max_transaction_duration_ms = 6;\n}\n\nmessage QueryCapabilities {\n  // Graph-specific\n  repeated string graph_query_languages = 1;  // ["gremlin", "cypher", "sparql"]\n  bool supports_graph_algorithms = 2;\n  repeated string supported_algorithms = 3;  // ["pagerank", "shortest_path"]\n\n  // SQL-specific\n  bool supports_sql = 4;\n  repeated string sql_features = 5;  // ["joins", "window_functions", "cte"]\n\n  // General\n  bool supports_secondary_indexes = 6;\n  bool supports_full_text_search = 7;\n  bool supports_aggregations = 8;\n}\n\nenum ConsistencyLevel {\n  CONSISTENCY_LEVEL_UNSPECIFIED = 0;\n  CONSISTENCY_LEVEL_EVENTUAL = 1;\n  CONSISTENCY_LEVEL_READ_AFTER_WRITE = 2;\n  CONSISTENCY_LEVEL_STRONG = 3;\n  CONSISTENCY_LEVEL_LINEARIZABLE = 4;\n}\n\nmessage PersistenceFeatures {\n  bool supports_durable_writes = 1;\n  bool supports_snapshots = 2;\n  bool supports_point_in_time_recovery = 3;\n  bool supports_continuous_backup = 4;\n}\n\nmessage ScalingFeatures {\n  bool supports_read_replicas = 1;\n  bool supports_horizontal_sharding = 2;\n  bool supports_vertical_scaling = 3;\n  int32 max_read_replicas = 4;\n}\n\nmessage PerformanceProfile {\n  // Latency characteristics\n  int64 typical_read_latency_p50_us = 1;\n  int64 typical_write_latency_p50_us = 2;\n\n  // Throughput\n  int64 max_reads_per_second = 3;\n  int64 max_writes_per_second = 4;\n\n  // Batch sizes\n  int32 max_batch_size = 5;\n}\n\nmessage OperationalConstraints {\n  // Connection limits\n  int32 max_connections_per_instance = 1;\n\n  // Data limits\n  int64 max_key_size_bytes = 2;\n  int64 max_value_size_bytes = 3;\n  int64 max_query_result_size_bytes = 4;\n\n  // Deployment constraints\n  repeated string required_cloud_providers = 5;  // ["aws", "gcp", "azure"]\n  bool requires_vpc = 6;\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"capability-discovery-flow",children:"Capability Discovery Flow"}),"\n",(0,r.jsx)(e.h3,{id:"1-plugin-registration",children:"1. Plugin Registration"}),"\n",(0,r.jsx)(e.p,{children:"When a plugin starts, it registers its capabilities:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-go",children:'// plugins/postgres/main.go\nfunc (p *PostgresPlugin) GetCapabilities() *PluginCapabilities {\n    return &PluginCapabilities{\n        PluginName:    "postgres",\n        PluginVersion: "1.2.0",\n        BackendTypes:  []string{"postgres", "timescaledb"},\n        Abstractions: []DataAbstraction{\n            DataAbstraction_DATA_ABSTRACTION_KEY_VALUE,\n            DataAbstraction_DATA_ABSTRACTION_TIME_SERIES,\n        },\n        Features: &BackendFeatures{\n            Transactions: &TransactionCapabilities{\n                SupportsTransactions:     true,\n                SupportsAcid:             true,\n                SupportsOptimisticLocking: true,\n                MaxTransactionDurationMs: 30000,\n            },\n            Queries: &QueryCapabilities{\n                SupportsSql: true,\n                SqlFeatures: []string{"joins", "window_functions", "cte"},\n                SupportsSecondaryIndexes: true,\n                SupportsFullTextSearch:   true,\n                SupportsAggregations:     true,\n            },\n            ConsistencyLevels: []ConsistencyLevel{\n                ConsistencyLevel_CONSISTENCY_LEVEL_STRONG,\n                ConsistencyLevel_CONSISTENCY_LEVEL_LINEARIZABLE,\n            },\n        },\n        Performance: &PerformanceProfile{\n            TypicalReadLatencyP50Us:  2000,   // 2ms\n            TypicalWriteLatencyP50Us: 5000,   // 5ms\n            MaxReadsPerSecond:        100000,\n            MaxWritesPerSecond:       50000,\n        },\n    }\n}\n'})}),"\n",(0,r.jsx)(e.h3,{id:"2-client-capability-query",children:"2. Client Capability Query"}),"\n",(0,r.jsx)(e.p,{children:"Clients query capabilities before selecting a backend:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-protobuf",children:"service PluginDiscoveryService {\n  // List all registered plugins\n  rpc ListPlugins(ListPluginsRequest) returns (ListPluginsResponse);\n\n  // Get capabilities for specific plugin\n  rpc GetPluginCapabilities(GetPluginCapabilitiesRequest) returns (PluginCapabilities);\n\n  // Find plugins matching requirements\n  rpc FindPlugins(FindPluginsRequest) returns (FindPluginsResponse);\n}\n\nmessage FindPluginsRequest {\n  // Required abstractions\n  repeated DataAbstraction required_abstractions = 1;\n\n  // Required features\n  BackendFeatures required_features = 2;\n\n  // Performance requirements\n  PerformanceRequirements performance_requirements = 3;\n\n  // Ranking preferences\n  PluginRankingPreferences preferences = 4;\n}\n\nmessage PerformanceRequirements {\n  int64 max_read_latency_p50_us = 1;\n  int64 max_write_latency_p50_us = 2;\n  int64 min_reads_per_second = 3;\n  int64 min_writes_per_second = 4;\n}\n\nmessage PluginRankingPreferences {\n  enum RankingStrategy {\n    RANKING_STRATEGY_UNSPECIFIED = 0;\n    RANKING_STRATEGY_LOWEST_LATENCY = 1;\n    RANKING_STRATEGY_HIGHEST_THROUGHPUT = 2;\n    RANKING_STRATEGY_STRONGEST_CONSISTENCY = 3;\n    RANKING_STRATEGY_MOST_FEATURES = 4;\n  }\n  RankingStrategy strategy = 1;\n}\n\nmessage FindPluginsResponse {\n  repeated PluginMatch matches = 1;\n}\n\nmessage PluginMatch {\n  string plugin_name = 1;\n  PluginCapabilities capabilities = 2;\n  float compatibility_score = 3;  // 0.0 to 1.0\n  repeated string missing_features = 4;\n}\n"})}),"\n",(0,r.jsx)(e.h3,{id:"3-runtime-validation",children:"3. Runtime Validation"}),"\n",(0,r.jsx)(e.p,{children:"Prism validates operations against plugin capabilities:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-go",children:'func (p *Proxy) ValidateOperation(\n    pluginName string,\n    operation string,\n) error {\n    caps, err := p.registry.GetCapabilities(pluginName)\n    if err != nil {\n        return fmt.Errorf("plugin not found: %w", err)\n    }\n\n    switch operation {\n    case "BeginTransaction":\n        if !caps.Features.Transactions.SupportsTransactions {\n            return fmt.Errorf(\n                "plugin %s does not support transactions",\n                pluginName,\n            )\n        }\n    case "ExecuteGremlinQuery":\n        if !slices.Contains(\n            caps.Features.Queries.GraphQueryLanguages,\n            "gremlin",\n        ) {\n            return fmt.Errorf(\n                "plugin %s does not support Gremlin queries",\n                pluginName,\n            )\n        }\n    }\n\n    return nil\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"example-selecting-graph-plugin",children:"Example: Selecting Graph Plugin"}),"\n",(0,r.jsx)(e.p,{children:"Client wants to run Gremlin queries with ACID transactions:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-go",children:'// Client code\nreq := &FindPluginsRequest{\n    RequiredAbstractions: []DataAbstraction{\n        DataAbstraction_DATA_ABSTRACTION_GRAPH,\n    },\n    RequiredFeatures: &BackendFeatures{\n        Transactions: &TransactionCapabilities{\n            SupportsTransactions: true,\n            SupportsAcid:         true,\n        },\n        Queries: &QueryCapabilities{\n            GraphQueryLanguages: []string{"gremlin"},\n        },\n    },\n    Preferences: &PluginRankingPreferences{\n        Strategy: RankingStrategy_RANKING_STRATEGY_LOWEST_LATENCY,\n    },\n}\n\nresp, err := discoveryClient.FindPlugins(ctx, req)\nif err != nil {\n    log.Fatal(err)\n}\n\nif len(resp.Matches) == 0 {\n    log.Fatal("No plugins match requirements")\n}\n\n// Best match\nbestMatch := resp.Matches[0]\nfmt.Printf("Selected plugin: %s (score: %.2f)\\n",\n    bestMatch.PluginName,\n    bestMatch.CompatibilityScore,\n)\n\n// Matches: neptune (score: 0.95), neo4j (score: 0.90)\n'})}),"\n",(0,r.jsx)(e.h2,{id:"capability-inheritance-and-composition",children:"Capability Inheritance and Composition"}),"\n",(0,r.jsxs)(e.p,{children:["Some plugins support ",(0,r.jsx)(e.strong,{children:"multiple abstractions"})," with different capabilities:"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-protobuf",children:"message PluginCapabilities {\n  // ... base fields ...\n\n  // Abstraction-specific capabilities\n  map<string, AbstractionCapabilities> abstraction_capabilities = 10;\n}\n\nmessage AbstractionCapabilities {\n  DataAbstraction abstraction = 1;\n  BackendFeatures features = 2;\n  PerformanceProfile performance = 3;\n}\n"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Example: Postgres plugin"}),":"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-go",children:'capabilities := &PluginCapabilities{\n    PluginName: "postgres",\n    AbstractionCapabilities: map[string]*AbstractionCapabilities{\n        "keyvalue": {\n            Abstraction: DataAbstraction_DATA_ABSTRACTION_KEY_VALUE,\n            Features: &BackendFeatures{\n                Transactions: &TransactionCapabilities{\n                    SupportsAcid: true,\n                },\n            },\n            Performance: &PerformanceProfile{\n                TypicalReadLatencyP50Us: 2000,\n            },\n        },\n        "timeseries": {\n            Abstraction: DataAbstraction_DATA_ABSTRACTION_TIME_SERIES,\n            Features: &BackendFeatures{\n                Queries: &QueryCapabilities{\n                    SupportsAggregations: true,\n                },\n            },\n            Performance: &PerformanceProfile{\n                TypicalReadLatencyP50Us: 5000,  // Slower for aggregations\n            },\n        },\n    },\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"admin-ui-capability-matrix",children:"Admin UI: Capability Matrix"}),"\n",(0,r.jsx)(e.p,{children:"Admin UI displays plugin capabilities in a comparison matrix:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"prismctl plugin capabilities postgres neptune redis\n\n\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n\u2503 Feature          \u2503 Postgres \u2503 Neptune \u2503 Redis \u2503\n\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n\u2502 Transactions     \u2502 \u2713 ACID   \u2502 \u2713 ACID  \u2502 \u2717     \u2502\n\u2502 Graph (Gremlin)  \u2502 \u2717        \u2502 \u2713       \u2502 \u2717     \u2502\n\u2502 Graph (Cypher)   \u2502 \u2717        \u2502 \u2717       \u2502 \u2717     \u2502\n\u2502 SQL              \u2502 \u2713        \u2502 \u2717       \u2502 \u2717     \u2502\n\u2502 Read Replicas    \u2502 \u2713 (15)   \u2502 \u2713 (15)  \u2502 \u2713 (5) \u2502\n\u2502 P50 Read Latency \u2502 2ms      \u2502 3ms     \u2502 0.3ms \u2502\n\u2502 Max Throughput   \u2502 100K/s   \u2502 50K/s   \u2502 1M/s  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsx)(e.h2,{id:"consequences",children:"Consequences"}),"\n",(0,r.jsx)(e.h3,{id:"positive",children:"Positive"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\u2705 ",(0,r.jsx)(e.strong,{children:"Clients know upfront"})," what plugins support"]}),"\n",(0,r.jsxs)(e.li,{children:["\u2705 ",(0,r.jsx)(e.strong,{children:"Better error messages"}),': "Neptune doesn\'t support Cypher, use Gremlin"']}),"\n",(0,r.jsxs)(e.li,{children:["\u2705 ",(0,r.jsx)(e.strong,{children:"Automated plugin selection"})," based on requirements"]}),"\n",(0,r.jsxs)(e.li,{children:["\u2705 ",(0,r.jsx)(e.strong,{children:"Documentation auto-generated"})," from capability metadata"]}),"\n",(0,r.jsxs)(e.li,{children:["\u2705 ",(0,r.jsx)(e.strong,{children:"Testing simplified"}),": validate capabilities, not behavior"]}),"\n",(0,r.jsxs)(e.li,{children:["\u2705 ",(0,r.jsx)(e.strong,{children:"Operational visibility"}),": understand what backends can do"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"negative",children:"Negative"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\u274c ",(0,r.jsx)(e.strong,{children:"Complexity"}),": More protobuf definitions to maintain"]}),"\n",(0,r.jsxs)(e.li,{children:["\u274c ",(0,r.jsx)(e.strong,{children:"Version skew"}),": Plugin capabilities may change across versions"]}),"\n",(0,r.jsxs)(e.li,{children:["\u274c ",(0,r.jsx)(e.strong,{children:"False advertising"}),": Plugins might claim unsupported features"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"neutral",children:"Neutral"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\ud83d\udd04 ",(0,r.jsx)(e.strong,{children:"Capability evolution"}),": Must version capability schema carefully"]}),"\n",(0,r.jsxs)(e.li,{children:["\ud83d\udd04 ",(0,r.jsx)(e.strong,{children:"Partial support"}),': Some features may be "best effort"']}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"references",children:"References"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"ADR-005: Backend Plugin Architecture"}),"\n",(0,r.jsx)(e.li,{children:"ADR-025: Container Plugin Model"}),"\n",(0,r.jsx)(e.li,{children:"ADR-041: Graph Database Backend Support"}),"\n",(0,r.jsx)(e.li,{children:"ADR-044: TinkerPop/Gremlin Generic Plugin (proposed)"}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://tinkerpop.apache.org/",children:"Apache TinkerPop: Provider Requirements"})}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"revision-history",children:"Revision History"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"2025-10-09: Initial ADR for plugin capability discovery"}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(p,{...n})}):p(n)}}}]);