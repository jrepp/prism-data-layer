"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[85988],{28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>c});var i=r(96540);const s={},t=i.createContext(s);function a(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(t.Provider,{value:n},e.children)}},38618:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"adr-index","title":"Architecture Decision Records","description":"This section documents all significant architectural decisions made in the Prism Data Access Layer project. Each ADR captures the context, decision, alternatives considered, and consequences of a specific architectural choice.","source":"@site/../docs-cms/adr/index.md","sourceDirName":".","slug":"/","permalink":"/prism-data-layer/adr/","draft":false,"unlisted":false,"editUrl":"https://github.com/jrepp/prism-data-layer/tree/main/docs-cms/../docs-cms/adr/index.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"id":"adr-index","title":"Architecture Decision Records","sidebar_position":0,"slug":"/"},"sidebar":"adrSidebar","next":{"title":"Rust for the Proxy Implementation \u2022 ADR-001","permalink":"/prism-data-layer/adr/adr-001"}}');var s=r(74848),t=r(28453);const a={id:"adr-index",title:"Architecture Decision Records",sidebar_position:0,slug:"/"},c="Architecture Decision Records (ADRs)",d={},l=[{value:"What is an ADR?",id:"what-is-an-adr",level:2},{value:"ADR Format",id:"adr-format",level:2},{value:"Browse ADRs",id:"browse-adrs",level:2},{value:"Foundation",id:"foundation",level:3},{value:"Architecture",id:"architecture",level:3},{value:"Security",id:"security",level:3},{value:"Operations",id:"operations",level:3},{value:"Development Process",id:"development-process",level:3},{value:"Local Development",id:"local-development",level:3},{value:"Performance &amp; Reliability",id:"performance--reliability",level:3},{value:"Documentation &amp; Governance",id:"documentation--governance",level:3},{value:"ADR Status",id:"adr-status",level:2},{value:"Contributing",id:"contributing",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"architecture-decision-records-adrs",children:"Architecture Decision Records (ADRs)"})}),"\n",(0,s.jsx)(n.p,{children:"This section documents all significant architectural decisions made in the Prism Data Access Layer project. Each ADR captures the context, decision, alternatives considered, and consequences of a specific architectural choice."}),"\n",(0,s.jsx)(n.h2,{id:"what-is-an-adr",children:"What is an ADR?"}),"\n",(0,s.jsx)(n.p,{children:"An Architecture Decision Record (ADR) is a document that captures an important architectural decision along with its context and consequences. ADRs help teams:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Understand"})," why certain decisions were made"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Evaluate"})," alternatives that were considered"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Learn"})," from past decisions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Onboard"})," new team members to the project's architectural philosophy"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"adr-format",children:"ADR Format"}),"\n",(0,s.jsx)(n.p,{children:"Each ADR follows a consistent structure:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Context"}),": The problem or situation that requires a decision"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Decision"}),": The architectural choice that was made"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rationale"}),": Why this decision was made (alternatives considered)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Consequences"}),": Impact of the decision (positive, negative, neutral)"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"browse-adrs",children:"Browse ADRs"}),"\n",(0,s.jsx)(n.p,{children:"Use the sidebar to browse all ADRs by category, or explore some key decisions:"}),"\n",(0,s.jsx)(n.h3,{id:"foundation",children:"Foundation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-001",children:"ADR-001: Rust for Proxy"})," - Why Rust over Java/Go/C++"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-003",children:"ADR-003: Protobuf Single Source of Truth"})," - Using protobuf for data models"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-004",children:"ADR-004: Local-First Testing"})," - Real backends over mocks"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-002",children:"ADR-002: Client-Originated Configuration"})," - Applications declare requirements"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-005",children:"ADR-005: Backend Plugin Architecture"})," - Pluggable backend design"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-008",children:"ADR-008: Observability Strategy"})," - Logging, metrics, tracing"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"security",children:"Security"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-007",children:"ADR-007: Authentication & Authorization"})," - mTLS and OAuth2"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-006",children:"ADR-006: Namespace Multi-Tenancy"})," - Tenant isolation"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"operations",children:"Operations"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-009",children:"ADR-009: Shadow Traffic Migrations"})," - Zero-downtime backend migrations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-010",children:"ADR-010: Caching Layer"})," - Performance optimization strategy"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"development-process",children:"Development Process"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-012",children:"ADR-012: Go for Backend Plugins"})," - Why Go for plugins vs Rust"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-015",children:"ADR-015: Go Testing Strategy"})," - Test-driven development approach"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-040",children:"ADR-040: UV-Only Python Tooling"})," - No system Python packages, uv for everything"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-041",children:"ADR-041: Pattern Acceptance Test Framework"})," - Cross-backend test automation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-043",children:"ADR-043: Hygienic Build System"})," - Out-of-source builds in ",(0,s.jsx)(n.code,{children:"build/"})," directory"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-049",children:"ADR-049: Podman Container Optimization"})," - Scratch containers and MicroVMs"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"local-development",children:"Local Development"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-036",children:"ADR-036: SQLite Config Storage"})," - Local-first configuration"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-044",children:"ADR-044: Prismctl CLI with Typer"})," - Python CLI design"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-048",children:"ADR-048: Local Signoz Observability"})," - OpenTelemetry + Signoz for local testing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-016",children:"ADR-016: Local Development Infrastructure"})," - Dex, Signoz, service lifecycle"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"performance--reliability",children:"Performance & Reliability"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-011",children:"ADR-011: Implementation Roadmap"})," - Phased delivery strategy"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-013",children:"ADR-013: Error Handling Strategy"})," - Structured errors with retryability"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-020",children:"ADR-020: Parallel Testing Infrastructure"})," - Fork-join test execution"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-021",children:"ADR-021: Parallel Linting System"})," - 54-90x faster linting"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"documentation--governance",children:"Documentation & Governance"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-042",children:"ADR-042: MDX Docusaurus Migration"})," - Documentation platform choice"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/adr/adr-050",children:"ADR-050: Documentation Validation Pipeline"})," - Automated link checking, frontmatter validation"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"adr-status",children:"ADR Status"}),"\n",(0,s.jsx)(n.p,{children:"ADRs can have the following statuses:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Proposed"}),": Under discussion, not yet decided"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Accepted"}),": Decision made and documented"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Implemented"}),": Decision implemented in code"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Deprecated"}),": No longer applicable"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Superseded"}),": Replaced by a newer ADR"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"contributing",children:"Contributing"}),"\n",(0,s.jsx)(n.p,{children:"When making a significant architectural decision:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Create a new ADR using the template: ",(0,s.jsx)(n.code,{children:"ADR-000-template.md"})]}),"\n",(0,s.jsx)(n.li,{children:"Number it sequentially (next available number)"}),"\n",(0,s.jsx)(n.li,{children:"Fill in all sections with context and rationale"}),"\n",(0,s.jsx)(n.li,{children:"Submit for review with the core team"}),"\n",(0,s.jsx)(n.li,{children:"Update status as the decision progresses"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Total ADRs"}),": 50+ decisions documented"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Latest Updates"}),": See the ",(0,s.jsx)(n.a,{href:"/docs/changelog",children:"Changelog"})," for recent ADRs"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}}}]);