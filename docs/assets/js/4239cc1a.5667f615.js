"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[2697],{23772:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"rfc-016","title":"Local Development Infrastructure","description":"Status: Draft","source":"@site/../docs-cms/rfcs/rfc-016-local-development-infrastructure.md","sourceDirName":".","slug":"/rfc-016","permalink":"/prism-data-layer/rfc/rfc-016","draft":false,"unlisted":false,"editUrl":"https://github.com/jrepp/prism-data-layer/tree/main/docs-cms/../docs-cms/rfcs/rfc-016-local-development-infrastructure.md","tags":[{"inline":true,"label":"local-development","permalink":"/prism-data-layer/rfc/tags/local-development"},{"inline":true,"label":"observability","permalink":"/prism-data-layer/rfc/tags/observability"},{"inline":true,"label":"authentication","permalink":"/prism-data-layer/rfc/tags/authentication"},{"inline":true,"label":"tooling","permalink":"/prism-data-layer/rfc/tags/tooling"},{"inline":true,"label":"dex","permalink":"/prism-data-layer/rfc/tags/dex"},{"inline":true,"label":"signoz","permalink":"/prism-data-layer/rfc/tags/signoz"},{"inline":true,"label":"developer-experience","permalink":"/prism-data-layer/rfc/tags/developer-experience"}],"version":"current","frontMatter":{"author":"Platform Team","created":"2025-10-09T00:00:00.000Z","doc_uuid":"a632404a-79cb-4bc9-9874-db98c64bbdc3","id":"rfc-016","project_id":"prism-data-layer","status":"Draft","tags":["local-development","observability","authentication","tooling","dex","signoz","developer-experience"],"title":"Local Development Infrastructure","updated":"2025-10-09T00:00:00.000Z"},"sidebar":"rfcSidebar","previous":{"title":"Plugin Acceptance Test Framework (Interface-Based Testing) \u2022 RFC-015","permalink":"/prism-data-layer/rfc/rfc-015"},"next":{"title":"Multicast Registry Pattern \u2022 RFC-017","permalink":"/prism-data-layer/rfc/rfc-017"}}');var r=s(74848),t=s(28453);const l={author:"Platform Team",created:new Date("2025-10-09T00:00:00.000Z"),doc_uuid:"a632404a-79cb-4bc9-9874-db98c64bbdc3",id:"rfc-016",project_id:"prism-data-layer",status:"Draft",tags:["local-development","observability","authentication","tooling","dex","signoz","developer-experience"],title:"Local Development Infrastructure",updated:new Date("2025-10-09T00:00:00.000Z")},o="RFC-016: Local Development Infrastructure",c={},a=[{value:"Abstract",id:"abstract",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Problem Statement",id:"problem-statement",level:3},{value:"Goals",id:"goals",level:3},{value:"Non-Goals",id:"non-goals",level:3},{value:"Architecture Overview",id:"architecture-overview",level:2},{value:"Support Tooling Categories",id:"support-tooling-categories",level:3},{value:"Independence Principle",id:"independence-principle",level:3}];function d(e){const n={a:"a",backend:"backend",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",tokenresponse:"tokenresponse",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"rfc-016-local-development-infrastructure",children:"RFC-016: Local Development Infrastructure"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status"}),": Draft\n",(0,r.jsx)(n.strong,{children:"Author"}),": Platform Team\n",(0,r.jsx)(n.strong,{children:"Created"}),": 2025-10-09\n",(0,r.jsx)(n.strong,{children:"Updated"}),": 2025-10-09"]}),"\n",(0,r.jsx)(n.h2,{id:"abstract",children:"Abstract"}),"\n",(0,r.jsxs)(n.p,{children:["This RFC defines the ",(0,r.jsx)(n.strong,{children:"local development infrastructure"}),' for Prism, covering support tooling that must be "online and locally supported" for a complete development experience. This includes:']}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Signoz"}),": OpenTelemetry observability (traces, metrics, logs)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dex"}),": Identity provider for OIDC authentication"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Developer Identity Auto-Provisioning"}),": Simplified authentication for local development"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lifecycle Management"}),": How these components are versioned, updated, and managed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Independence"}),": Each stack runs independently without coupling to backend testing infrastructure"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The goal is to provide developers with ",(0,r.jsx)(n.strong,{children:"production-like infrastructure locally"})," while maintaining ",(0,r.jsx)(n.strong,{children:"simplicity and low resource footprint"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"motivation",children:"Motivation"}),"\n",(0,r.jsx)(n.h3,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Current Pain Points:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No Local Observability"}),": Developers debug with console logs, can't see distributed traces"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Manual Auth Setup"}),": Dex requires manual configuration, slows down local testing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scattered Infrastructure"}),": Backend compose files mix testing and support services"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Login Friction"}),": Every local restart requires re-authentication"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No Lifecycle Management"}),": No clear process for updating support tooling versions"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Requirements:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Observability"}),": Full OpenTelemetry stack (traces, metrics, logs) for debugging"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authentication"}),": OIDC provider (Dex) for admin API and data proxy"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Developer UX"}),": Auto-login, pre-provisioned identity, zero-config setup"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Independence"}),": Each service runs standalone, can be started/stopped individually"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resource Efficient"}),": <3GB RAM total for all support services"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Production Parity"}),": Same patterns local and production (OpenTelemetry, OIDC)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"goals",children:"Goals"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Complete Local Stack"}),": Observability + Auth + Support tooling"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Zero-Config Developer Experience"}),": Run ",(0,r.jsx)(n.code,{children:"make dev-up"})," \u2192 everything works"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Auto-Provisioned Identity"}),": Developer user pre-configured in Dex"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Independent Lifecycle"}),": Update Signoz without touching Dex or backends"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Clear Documentation"}),": Developers know what each service does and how to use it"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"non-goals",children:"Non-Goals"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Production Deployment"}),": This RFC covers local development only"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scalability"}),": Local instances are single-node, not HA"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multi-tenancy"}),": Local dev assumes single developer environment"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CI/CD"}),": Separate RFC will cover CI observability and auth"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"architecture-overview",children:"Architecture Overview"}),"\n",(0,r.jsx)(n.h3,{id:"support-tooling-categories",children:"Support Tooling Categories"}),"\n",(0,r.jsx)(n.mermaid,{value:'graph TB\n    subgraph "Developer Machine"\n        subgraph "Prism Core"\n            Proxy[Prism Proxy<br/>:8980]\n            Admin[Admin Service<br/>:8090]\n            CLI[prismctl CLI]\n        end\n\n        subgraph "Support Tooling (RFC-016)"\n            Signoz[Signoz Observability<br/>:3301]\n            Dex[Dex Identity Provider<br/>:5556]\n            DevIdentity[Developer Identity<br/>Auto-Provisioned]\n        end\n\n        subgraph "Backend Testing (MEMO-004)"\n            Postgres[(PostgreSQL)]\n            Redis[(Redis)]\n            Kafka[(Kafka)]\n        end\n    end\n\n    CLI --\x3e|Authenticate| Dex\n    Admin --\x3e|OIDC| Dex\n    Proxy --\x3e|Traces/Metrics| Signoz\n    Admin --\x3e|Traces/Metrics| Signoz\n    Postgres -.->|Optional Logs| Signoz\n\n    Dex --\x3e|Auto-provision| DevIdentity\n    DevIdentity --\x3e|JWT Tokens| CLI\n    DevIdentity --\x3e|JWT Tokens| Admin\n\n    style Signoz fill:#e1f5ff\n    style Dex fill:#e1f5ff\n    style DevIdentity fill:#fff3e0'}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Category 1: Observability"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Signoz"}),": Traces, metrics, logs (ADR-048)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Debug distributed systems, validate instrumentation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lifecycle"}),": Independent, updated quarterly"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Category 2: Authentication"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dex"}),": OIDC identity provider (ADR-046)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Developer Identity"}),": Auto-provisioned user for local development"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Test OIDC flows, avoid login friction"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lifecycle"}),": Independent, updated yearly"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Category 3: Backend Testing"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Postgres, Redis, Kafka"}),": Data backends (MEMO-004)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Integration and acceptance testing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lifecycle"}),": Per-backend versioning, testcontainers"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"independence-principle",children:"Independence Principle"}),"\n",(0,r.jsx)(n.p,{children:"Each support service has its own Docker Compose file:"}),"\n",(0,r.jsx)(n.p,{children:"local-dev/\n\u251c\u2500\u2500 signoz/\n\u2502   \u251c\u2500\u2500 docker-compose.signoz.yml\n\u2502   \u251c\u2500\u2500 otel-collector-config.yaml\n\u2502   \u2514\u2500\u2500 README.md\n\u251c\u2500\u2500 dex/\n\u2502   \u251c\u2500\u2500 docker-compose.dex.yml\n\u2502   \u251c\u2500\u2500 dex-config.yaml\n\u2502   \u251c\u2500\u2500 static-users.yaml\n\u2502   \u2514\u2500\u2500 README.md\n\u2514\u2500\u2500 all/\n\u251c\u2500\u2500 docker-compose.all.yml  # Start everything\n\u2514\u2500\u2500 Makefile"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n**Benefits:**\n- Start/stop services independently\n- Update versions without affecting other services\n- Developer can choose what to run (only Dex, only Signoz, or both)\n- Clear ownership and documentation per service\n\n## Component 1: Signoz Observability\n\n**See ADR-048 for complete details.**\n\n### Quick Start\n\n"})}),"\n",(0,r.jsx)(n.h1,{id:"start-signoz",children:"Start Signoz"}),"\n",(0,r.jsx)(n.p,{children:"cd local-dev/signoz\ndocker-compose -f docker-compose.signoz.yml up -d"}),"\n",(0,r.jsx)(n.h1,{id:"access-ui",children:"Access UI"}),"\n",(0,r.jsxs)(n.p,{children:["open ",(0,r.jsx)(n.a,{href:"http://localhost:3301",children:"http://localhost:3301"})]}),"\n",(0,r.jsx)(n.h1,{id:"configure-prism-to-send-telemetry",children:"Configure Prism to send telemetry"}),"\n",(0,r.jsxs)(n.p,{children:["export OTEL_EXPORTER_OTLP_ENDPOINT=",(0,r.jsx)(n.a,{href:"http://localhost:4317",children:"http://localhost:4317"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n### Integration Points\n\n**Prism Proxy:**\n"})}),"\n",(0,r.jsx)(n.p,{children:"// Automatically uses OTEL_EXPORTER_OTLP_ENDPOINT if set\n// proxy/src/main.rs\nfn main() {\ninit_observability()?; // Sets up OpenTelemetry\n// ...\n}"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n**Backend Plugins:**\n"})}),"\n",(0,r.jsxs)(n.p,{children:["// plugins/",(0,r.jsx)(n.backend,{children:'/main.go\nfunc main() {\nobservability.InitTracer("prism-plugin-postgres")\n// Reads OTEL_EXPORTER_OTLP_ENDPOINT from environment\n}'})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n### Resource Usage\n\n- **Memory**: ~1.5GB (ClickHouse + services)\n- **CPU**: 2 cores max\n- **Ports**: 3301 (UI), 4317 (OTLP gRPC), 4318 (OTLP HTTP)\n- **Startup Time**: ~20 seconds\n\n## Component 2: Dex Identity Provider\n\n**Builds on ADR-046.**\n\n### Architecture\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"sequenceDiagram\nparticipant Dev as Developer\nparticipant CLI as prismctl\nparticipant Dex as Dex (Local)\nparticipant Admin as Admin Service"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Note over Dex: Pre-provisioned user:<br/>dev@local.prism\n\nDev->>CLI: prism namespace list\nCLI->>Dex: Check cached token<br/>~/.prism/token\n\nalt Token Valid\n    CLI->>Admin: Request with JWT\nelse Token Missing/Expired\n    CLI->>Dex: Device code flow\n    Dex--\x3e>CLI: Auto-approve for dev@local.prism\n    CLI->>CLI: Cache token (~/.prism/token)\n    CLI->>Admin: Request with JWT\nend\n\nAdmin->>Dex: Validate JWT (JWKS)\nDex--\x3e>Admin: Valid\nAdmin--\x3e>CLI: Response\nCLI--\x3e>Dev: Result\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n### Dex Configuration\n\nLocation: `local-dev/dex/dex-config.yaml`\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["issuer: ",(0,r.jsx)(n.a,{href:"http://localhost:5556/dex",children:"http://localhost:5556/dex"})]}),"\n",(0,r.jsx)(n.p,{children:"storage:\ntype: sqlite3\nconfig:\nfile: /var/dex/dex.db"}),"\n",(0,r.jsx)(n.p,{children:"web:\nhttp: 0.0.0.0:5556"}),"\n",(0,r.jsx)(n.p,{children:"telemetry:\nhttp: 0.0.0.0:5558"}),"\n",(0,r.jsx)(n.h1,{id:"cors-for-local-development",children:"CORS for local development"}),"\n",(0,r.jsx)(n.p,{children:'grpc:\naddr: 0.0.0.0:5557\ntlsCert: ""\ntlsKey: ""'}),"\n",(0,r.jsx)(n.h1,{id:"static-clients-prismctl-admin-ui",children:"Static clients (prismctl, admin UI)"}),"\n",(0,r.jsx)(n.p,{children:"staticClients:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'id: prismctl\nname: "Prism CLI"\nsecret: local-dev-secret-not-for-production\nredirectURIs:'}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"http://localhost:8090/auth/callback",children:"http://localhost:8090/auth/callback"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"http://127.0.0.1:8090/auth/callback",children:"http://127.0.0.1:8090/auth/callback"}),"\npublic: true  # Public client (no client secret required)"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'id: prism-admin-ui\nname: "Prism Admin UI"\nsecret: admin-ui-local-secret\nredirectURIs:'}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"http://localhost:3000/auth/callback",children:"http://localhost:3000/auth/callback"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"http://127.0.0.1:3000/auth/callback",children:"http://127.0.0.1:3000/auth/callback"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h1,{id:"enable-device-code-flow-for-cli",children:"Enable device code flow for CLI"}),"\n",(0,r.jsx)(n.p,{children:'oauth2:\nskipApprovalScreen: true  # Auto-approve for local dev\nresponseTypes: ["code", "token", "id_token"]'}),"\n",(0,r.jsx)(n.h1,{id:"connectors-static-users-for-local-dev",children:"Connectors: Static users for local dev"}),"\n",(0,r.jsx)(n.p,{children:"connectors:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"type: local\nid: local\nname: Local\nconfig:\nenablePasswordDB: true"}),"\n"]}),"\n",(0,r.jsx)(n.h1,{id:"enable-password-grant-for-automated-testing",children:"Enable password grant (for automated testing)"}),"\n",(0,r.jsx)(n.p,{children:"enablePasswordDB: true"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n### Static Developer User\n\nLocation: `local-dev/dex/static-users.yaml`\n\n"})}),"\n",(0,r.jsx)(n.h1,{id:"pre-provisioned-developer-user",children:"Pre-provisioned developer user"}),"\n",(0,r.jsx)(n.h1,{id:"password-is-bcrypt-hash-of-devpass",children:'Password is bcrypt hash of "devpass"'}),"\n",(0,r.jsx)(n.p,{children:"staticPasswords:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['email: "',(0,r.jsx)(n.a,{href:"mailto:dev@local.prism",children:"dev@local.prism"}),'"\nhash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"\nusername: "developer"\nuserID: "08a8684b-db88-4b73-90a9-3cd1661f5466"\ngroups:']}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'"prism:admin"'}),"\n",(0,r.jsx)(n.li,{children:'"prism:operator"'}),"\n",(0,r.jsx)(n.li,{children:'"prism:viewer"'}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['email: "',(0,r.jsx)(n.a,{href:"mailto:test@local.prism",children:"test@local.prism"}),'"\nhash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"\nusername: "testuser"\nuserID: "a0b1c2d3-e4f5-6789-0123-456789abcdef"\ngroups:']}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'"prism:viewer"'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n**Default Credentials:**\n- **Email**: `dev@local.prism`\n- **Password**: `devpass`\n- **Groups**: admin, operator, viewer (full access)\n\n### Docker Compose Configuration\n\nLocation: `local-dev/dex/docker-compose.dex.yml`\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"version: '3.8'"}),"\n",(0,r.jsxs)(n.p,{children:['services:\ndex:\nimage: ghcr.io/dexidp/dex:v2.37.0\ncontainer_name: prism-dex\ncommand: ["dex", "serve", "/etc/dex/dex-config.yaml"]\nvolumes:\n- ./dex-config.yaml:/etc/dex/dex-config.yaml:ro\n- ./static-users.yaml:/etc/dex/static-users.yaml:ro\n- dex-data:/var/dex\nports:\n- "5556:5556"  # HTTP\n- "5557:5557"  # gRPC\n- "5558:5558"  # Telemetry\nenvironment:\n- DEX_ISSUER=',(0,r.jsx)(n.a,{href:"http://localhost:5556/dex",children:"http://localhost:5556/dex"}),'\nmem_limit: 256m\ncpus: 0.25\nnetworks:\n- prism\nhealthcheck:\ntest: ["CMD", "wget", "-q", "-O-", "http://localhost:5556/dex/.well-known/openid-configuration"]\ninterval: 10s\ntimeout: 5s\nretries: 3']}),"\n",(0,r.jsx)(n.p,{children:"volumes:\ndex-data:\ndriver: local"}),"\n",(0,r.jsx)(n.p,{children:"networks:\nprism:\ndriver: bridge\nexternal: false"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n### Developer Identity Auto-Provisioning\n\n**Problem**: Logging in on every local restart is tedious.\n\n**Solution**: CLI auto-authenticates with developer user credentials.\n\n#### Implementation: Auto-Login Flow\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"// cli/src/auth/auto_login.rs"}),"\n",(0,r.jsx)(n.p,{children:"pub struct AutoLoginConfig {\npub enabled: bool,\npub email: String,\npub password: String,\npub issuer: String,\n}"}),"\n",(0,r.jsxs)(n.p,{children:['impl Default for AutoLoginConfig {\nfn default() -> Self {\nSelf {\nenabled: is_local_dev(),\nemail: "',(0,r.jsx)(n.a,{href:"mailto:dev@local.prism",children:"dev@local.prism"}),'".to_string(),\npassword: "devpass".to_string(),\nissuer: "',(0,r.jsx)(n.a,{href:"http://localhost:5556/dex%22.to_string()",children:'http://localhost:5556/dex".to_string()'}),",\n}\n}\n}"]}),"\n",(0,r.jsxs)(n.p,{children:["pub async fn auto_authenticate(config: &AutoLoginConfig) -> Result",(0,r.jsx)(n.tokenresponse,{children:" {\nif !config.enabled {\nreturn Err(Error::AutoLoginDisabled);\n}"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'// Use resource owner password credentials grant (for local dev only)\nlet client = reqwest::Client::new();\nlet params = [\n    ("grant_type", "password"),\n    ("username", &config.email),\n    ("password", &config.password),\n    ("client_id", "prismctl"),\n    ("scope", "openid profile email groups offline_access"),\n];\n\nlet response = client\n    .post(format!("{}/token", config.issuer))\n    .form(&params)\n    .send()\n    .await?;\n\nif !response.status().is_success() {\n    return Err(Error::AutoLoginFailed(response.text().await?));\n}\n\nlet token_response: TokenResponse = response.json().await?;\n\n// Cache token for future use\ncache_token(&token_response)?;\n\nOk(token_response)\n'})}),"\n",(0,r.jsx)(n.p,{children:"}"}),"\n",(0,r.jsx)(n.p,{children:'fn is_local_dev() -> bool {\n// Check environment variable or hostname\nenv::var("PRISM_LOCAL_DEV")\n.map(|v| v == "true")\n.unwrap_or(false)\n}'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n#### CLI Integration\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"// cli/src/commands/namespace.rs"}),"\n",(0,r.jsxs)(n.p,{children:['async fn list_namespaces(ctx: &Context) -> Result<()> {\n// Step 1: Check cached token\nlet token = match load_cached_token() {\nOk(token) if !token.is_expired() => {\ndebug!("Using cached token");\ntoken\n}\n_ => {\n// Step 2: Auto-login if local dev\nif let Ok(token) = auto_authenticate(&AutoLoginConfig::default()).await {\ninfo!("Auto-authenticated as ',(0,r.jsx)(n.a,{href:"mailto:dev@local.prism",children:"dev@local.prism"}),'");\ntoken\n} else {\n// Step 3: Fall back to device code flow\ninfo!("Starting OIDC device code flow...");\ndevice_code_flow(&ctx.config).await?\n}\n}\n};']}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'// Step 4: Make API call with token\nlet namespaces = ctx.admin_client\n    .list_namespaces()\n    .bearer_auth(&token.access_token)\n    .send()\n    .await?\n    .json()\n    .await?;\n\n// Display results\nprintln!("{}", format_namespaces(&namespaces));\nOk(())\n'})}),"\n",(0,r.jsx)(n.p,{children:"}"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n#### Environment Variable Toggle\n\n"})}),"\n",(0,r.jsx)(n.h1,{id:"enable-auto-login-default-for-local-dev",children:"Enable auto-login (default for local dev)"}),"\n",(0,r.jsx)(n.p,{children:"export PRISM_LOCAL_DEV=true"}),"\n",(0,r.jsx)(n.h1,{id:"disable-auto-login-force-device-code-flow",children:"Disable auto-login (force device code flow)"}),"\n",(0,r.jsx)(n.p,{children:"export PRISM_LOCAL_DEV=false"}),"\n",(0,r.jsx)(n.h1,{id:"prism-cli-will-auto-detect-and-authenticate",children:"Prism CLI will auto-detect and authenticate"}),"\n",(0,r.jsx)(n.p,{children:"prism namespace list"}),"\n",(0,r.jsx)(n.h1,{id:"output",children:"Output:"}),"\n",(0,r.jsxs)(n.h1,{id:"info-auto-authenticated-as-devlocalprism",children:["[INFO] Auto-authenticated as ",(0,r.jsx)(n.a,{href:"mailto:dev@local.prism",children:"dev@local.prism"})]}),"\n",(0,r.jsx)(n.h1,{id:"name--------------status----backend",children:"NAME              STATUS    BACKEND"}),"\n",(0,r.jsx)(n.h1,{id:"analytics---------active----postgres",children:"analytics         active    postgres"}),"\n",(0,r.jsx)(n.h1,{id:"events------------active----kafka",children:"events            active    kafka"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n### Resource Usage\n\n- **Memory**: ~256MB\n- **CPU**: 0.25 cores\n- **Ports**: 5556 (HTTP), 5557 (gRPC), 5558 (telemetry)\n- **Startup Time**: ~5 seconds\n\n## Component 3: Lifecycle Management\n\n### Versioning Strategy\n\n**Signoz:**\n- Version: Pinned in `docker-compose.signoz.yml`\n- Update Frequency: Quarterly (or when new features needed)\n- Upgrade Path: Stop \u2192 pull new images \u2192 up \u2192 verify\n\n**Dex:**\n- Version: Pinned in `docker-compose.dex.yml`\n- Update Frequency: Yearly (stable, infrequent releases)\n- Upgrade Path: Stop \u2192 pull new image \u2192 up \u2192 verify OIDC flow\n\n**Coordination:**\n- No version dependencies between Signoz and Dex\n- Can update independently\n- Breaking changes documented in CHANGELOG\n\n### Update Process\n\n"})}),"\n",(0,r.jsx)(n.h1,{id:"update-signoz",children:"Update Signoz"}),"\n",(0,r.jsx)(n.p,{children:"cd local-dev/signoz\ndocker-compose -f docker-compose.signoz.yml pull\ndocker-compose -f docker-compose.signoz.yml up -d"}),"\n",(0,r.jsx)(n.h1,{id:"update-dex",children:"Update Dex"}),"\n",(0,r.jsx)(n.p,{children:"cd local-dev/dex\ndocker-compose -f docker-compose.dex.yml pull\ndocker-compose -f docker-compose.dex.yml up -d"}),"\n",(0,r.jsx)(n.h1,{id:"update-all",children:"Update all"}),"\n",(0,r.jsx)(n.p,{children:"cd local-dev\nmake update-support-services"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n### Version Tracking\n\nLocation: `local-dev/versions.yaml`\n\n"})}),"\n",(0,r.jsx)(n.h1,{id:"prism-local-development-support-services",children:"Prism Local Development Support Services"}),"\n",(0,r.jsx)(n.h1,{id:"last-updated-2025-10-09",children:"Last updated: 2025-10-09"}),"\n",(0,r.jsx)(n.p,{children:'support_services:\nsignoz:\nversion: "0.39.0"\nupdated: "2025-10-09"\nupdate_frequency: "quarterly"\nbreaking_changes:\n- "0.39.0: ClickHouse schema migration required"'}),"\n",(0,r.jsx)(n.p,{children:'signoz_otel_collector:\nversion: "0.79.9"\nupdated: "2025-10-09"\nupdate_frequency: "quarterly"'}),"\n",(0,r.jsx)(n.p,{children:'clickhouse:\nversion: "23.7-alpine"\nupdated: "2025-10-09"\nupdate_frequency: "quarterly"'}),"\n",(0,r.jsx)(n.p,{children:'dex:\nversion: "v2.37.0"\nupdated: "2025-10-09"\nupdate_frequency: "yearly"\nbreaking_changes:\n- "v2.37.0: Static password hash format changed to bcrypt"'}),"\n",(0,r.jsx)(n.p,{children:'backend_testing:\npostgres:\nversion: "16-alpine"\nredis:\nversion: "7-alpine"\nkafka:\nversion: "7.5.0"'}),"\n",(0,r.jsx)(n.h1,{id:"see-memo-004-for-complete-backend-versions",children:"See MEMO-004 for complete backend versions"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n### Health Checks\n\n"})}),"\n",(0,r.jsx)(n.h1,{id:"check-all-support-services",children:"Check all support services"}),"\n",(0,r.jsx)(n.p,{children:"cd local-dev\n./scripts/health-check.sh"}),"\n",(0,r.jsx)(n.h1,{id:"output-1",children:"Output:"}),"\n",(0,r.jsxs)(n.h1,{id:"-signoz-ui-httplocalhost3301-healthy",children:["\u2705 Signoz UI (",(0,r.jsx)(n.a,{href:"http://localhost:3301",children:"http://localhost:3301"}),"): healthy"]}),"\n",(0,r.jsx)(n.h1,{id:"-signoz-otlp-grpclocalhost4317-healthy",children:"\u2705 Signoz OTLP (grpc://localhost:4317): healthy"}),"\n",(0,r.jsxs)(n.h1,{id:"-dex-oidc-httplocalhost5556-healthy",children:["\u2705 Dex OIDC (",(0,r.jsx)(n.a,{href:"http://localhost:5556",children:"http://localhost:5556"}),"): healthy"]}),"\n",(0,r.jsx)(n.h1,{id:"-dex-well-known-config-valid",children:"\u2705 Dex well-known config: valid"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n## Usage Patterns\n\n### Pattern 1: Start Everything\n\n"})}),"\n",(0,r.jsx)(n.h1,{id:"start-all-support-services",children:"Start all support services"}),"\n",(0,r.jsx)(n.p,{children:"cd local-dev\nmake dev-up"}),"\n",(0,r.jsx)(n.h1,{id:"equivalent-to",children:"Equivalent to:"}),"\n",(0,r.jsx)(n.h1,{id:"docker-compose--f-signozdocker-composesignozyml-up--d",children:"docker-compose -f signoz/docker-compose.signoz.yml up -d"}),"\n",(0,r.jsx)(n.h1,{id:"docker-compose--f-dexdocker-composedexyml-up--d",children:"docker-compose -f dex/docker-compose.dex.yml up -d"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n### Pattern 2: Start Only Signoz\n\n"})}),"\n",(0,r.jsx)(n.h1,{id:"just-observability-no-auth",children:"Just observability, no auth"}),"\n",(0,r.jsx)(n.p,{children:"cd local-dev/signoz\ndocker-compose -f docker-compose.signoz.yml up -d"}),"\n",(0,r.jsx)(n.h1,{id:"start-prism-without-dex-local-mode-no-auth",children:"Start Prism without Dex (local mode, no auth)"}),"\n",(0,r.jsx)(n.p,{children:"export PRISM_AUTH_DISABLED=true\ncargo run --release"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n### Pattern 3: Start Only Dex\n\n"})}),"\n",(0,r.jsx)(n.h1,{id:"just-auth-no-observability",children:"Just auth, no observability"}),"\n",(0,r.jsx)(n.p,{children:"cd local-dev/dex\ndocker-compose -f docker-compose.dex.yml up -d"}),"\n",(0,r.jsx)(n.h1,{id:"test-oidc-flow",children:"Test OIDC flow"}),"\n",(0,r.jsx)(n.p,{children:"prism auth login"}),"\n",(0,r.jsxs)(n.h1,{id:"opens-browser-to-httplocalhost5556dexauth",children:["Opens browser to ",(0,r.jsx)(n.a,{href:"http://localhost:5556/dex/auth",children:"http://localhost:5556/dex/auth"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n### Pattern 4: Full Stack with Backends\n\n"})}),"\n",(0,r.jsx)(n.h1,{id:"start-support-services",children:"Start support services"}),"\n",(0,r.jsx)(n.p,{children:"make dev-up"}),"\n",(0,r.jsx)(n.h1,{id:"start-redis-backend",children:"Start Redis backend"}),"\n",(0,r.jsx)(n.p,{children:"cd local-dev/backends\ndocker-compose -f docker-compose.backends.yml up redis -d"}),"\n",(0,r.jsx)(n.h1,{id:"start-prism-proxy-with-redis-plugin",children:"Start Prism proxy with Redis plugin"}),"\n",(0,r.jsxs)(n.p,{children:["export OTEL_EXPORTER_OTLP_ENDPOINT=",(0,r.jsx)(n.a,{href:"http://localhost:4317",children:"http://localhost:4317"}),"\nexport PRISM_LOCAL_DEV=true\ncargo run --release"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n## Configuration Injection\n\n### Environment Variables\n\nSupport services expose configuration via standard environment variables:\n\n**Signoz (OpenTelemetry):**\n"})}),"\n",(0,r.jsx)(n.h1,{id:"otlp-endpoint-for-prism-components",children:"OTLP endpoint for Prism components"}),"\n",(0,r.jsxs)(n.p,{children:["export OTEL_EXPORTER_OTLP_ENDPOINT=",(0,r.jsx)(n.a,{href:"http://localhost:4317",children:"http://localhost:4317"})]}),"\n",(0,r.jsx)(n.h1,{id:"service-name-auto-detected-by-component",children:"Service name (auto-detected by component)"}),"\n",(0,r.jsx)(n.h1,{id:"proxy-prism-proxy",children:"Proxy: prism-proxy"}),"\n",(0,r.jsx)(n.h1,{id:"plugin-prism-plugin-backend",children:"Plugin: prism-plugin-{backend}"}),"\n",(0,r.jsx)(n.h1,{id:"admin-prism-admin",children:"Admin: prism-admin"}),"\n",(0,r.jsx)(n.h1,{id:"environment-label",children:"Environment label"}),"\n",(0,r.jsx)(n.p,{children:'export OTEL_RESOURCE_ATTRIBUTES="deployment.environment=local"'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n**Dex (OIDC):**\n"})}),"\n",(0,r.jsx)(n.h1,{id:"issuer-url",children:"Issuer URL"}),"\n",(0,r.jsxs)(n.p,{children:["export PRISM_OIDC_ISSUER=",(0,r.jsx)(n.a,{href:"http://localhost:5556/dex",children:"http://localhost:5556/dex"})]}),"\n",(0,r.jsx)(n.h1,{id:"client-id-for-cli",children:"Client ID for CLI"}),"\n",(0,r.jsx)(n.p,{children:"export PRISM_OIDC_CLIENT_ID=prismctl"}),"\n",(0,r.jsx)(n.h1,{id:"auto-login-local-dev-only",children:"Auto-login (local dev only)"}),"\n",(0,r.jsx)(n.p,{children:"export PRISM_LOCAL_DEV=true"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n### Configuration Files\n\n**Prism Proxy Config:**\n"})}),"\n",(0,r.jsx)(n.h1,{id:"proxyconfigyaml",children:"proxy/config.yaml"}),"\n",(0,r.jsxs)(n.p,{children:["observability:\ntracing:\nenabled: true\n# OTEL_EXPORTER_OTLP_ENDPOINT used if set\n# Default: ",(0,r.jsx)(n.a,{href:"http://localhost:4317",children:"http://localhost:4317"}),"\notlp_endpoint: ${OTEL_EXPORTER_OTLP_ENDPOINT}\nservice_name: prism-proxy"]}),"\n",(0,r.jsxs)(n.p,{children:["authentication:\noidc:\nenabled: true\nissuer: ${PRISM_OIDC_ISSUER:-",(0,r.jsx)(n.a,{href:"http://localhost:5556/dex%7D",children:"http://localhost:5556/dex}"}),"\nclient_id: prism-proxy\n# Auto-discover JWKS from .well-known/openid-configuration"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n**CLI Config:**\n"})}),"\n",(0,r.jsx)(n.h1,{id:"prismconfigyaml",children:"~/.prism/config.yaml"}),"\n",(0,r.jsxs)(n.p,{children:["admin:\nendpoint: ",(0,r.jsx)(n.a,{href:"http://localhost:8090",children:"http://localhost:8090"})]}),"\n",(0,r.jsxs)(n.p,{children:["auth:\noidc:\nissuer: ",(0,r.jsx)(n.a,{href:"http://localhost:5556/dex",children:"http://localhost:5556/dex"}),"\nclient_id: prismctl\nauto_login: true  # Local dev only"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n## Developer Workflows\n\n### Workflow 1: First-Time Setup\n\n"})}),"\n",(0,r.jsx)(n.h1,{id:"clone-repository",children:"Clone repository"}),"\n",(0,r.jsxs)(n.p,{children:["git clone ",(0,r.jsx)(n.a,{href:"https://github.com/org/prism.git",children:"https://github.com/org/prism.git"}),"\ncd prism"]}),"\n",(0,r.jsx)(n.h1,{id:"bootstrap-local-development",children:"Bootstrap local development"}),"\n",(0,r.jsx)(n.p,{children:"make bootstrap"}),"\n",(0,r.jsx)(n.h1,{id:"what-it-does",children:"What it does:"}),"\n",(0,r.jsx)(n.h1,{id:"1-creates-prism-directory",children:"1. Creates ~/.prism/ directory"}),"\n",(0,r.jsx)(n.h1,{id:"2-generates-default-configyaml",children:"2. Generates default config.yaml"}),"\n",(0,r.jsx)(n.h1,{id:"3-pulls-docker-images-for-support-services",children:"3. Pulls Docker images for support services"}),"\n",(0,r.jsx)(n.h1,{id:"4-starts-signoz-and-dex",children:"4. Starts Signoz and Dex"}),"\n",(0,r.jsx)(n.h1,{id:"5-waits-for-health-checks",children:"5. Waits for health checks"}),"\n",(0,r.jsxs)(n.h1,{id:"6-auto-authenticates-with-devlocalprism",children:["6. Auto-authenticates with ",(0,r.jsx)(n.a,{href:"mailto:dev@local.prism",children:"dev@local.prism"})]}),"\n",(0,r.jsx)(n.h1,{id:"7-displays-access-urls",children:"7. Displays access URLs"}),"\n",(0,r.jsx)(n.h1,{id:"output-2",children:"Output:"}),"\n",(0,r.jsx)(n.h1,{id:"-support-services-ready",children:"\u2705 Support services ready!"}),"\n",(0,r.jsxs)(n.h1,{id:"-signoz-ui-httplocalhost3301",children:["\ud83d\udd2d Signoz UI: ",(0,r.jsx)(n.a,{href:"http://localhost:3301",children:"http://localhost:3301"})]}),"\n",(0,r.jsxs)(n.h1,{id:"-dex-oidc-httplocalhost5556dex",children:["\ud83d\udd10 Dex OIDC: ",(0,r.jsx)(n.a,{href:"http://localhost:5556/dex",children:"http://localhost:5556/dex"})]}),"\n",(0,r.jsxs)(n.h1,{id:"-auto-authenticated-as-devlocalprism",children:["\ud83d\udc64 Auto-authenticated as: ",(0,r.jsx)(n.a,{href:"mailto:dev@local.prism",children:"dev@local.prism"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n### Workflow 2: Daily Development\n\n"})}),"\n",(0,r.jsx)(n.h1,{id:"start-support-services-if-not-running",children:"Start support services (if not running)"}),"\n",(0,r.jsx)(n.p,{children:"make dev-up"}),"\n",(0,r.jsx)(n.h1,{id:"start-prism-proxy",children:"Start Prism proxy"}),"\n",(0,r.jsx)(n.p,{children:"cd proxy\ncargo run --release"}),"\n",(0,r.jsx)(n.h1,{id:"in-another-terminal-start-backend-plugin",children:"In another terminal: Start backend plugin"}),"\n",(0,r.jsx)(n.p,{children:"cd plugins/postgres\ngo run ./cmd/server"}),"\n",(0,r.jsx)(n.h1,{id:"in-another-terminal-use-cli",children:"In another terminal: Use CLI"}),"\n",(0,r.jsx)(n.p,{children:"prism namespace list  # Auto-authenticates\nprism session list\nprism health"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n### Workflow 3: Testing OIDC Integration\n\n"})}),"\n",(0,r.jsx)(n.h1,{id:"start-dex",children:"Start Dex"}),"\n",(0,r.jsx)(n.p,{children:"cd local-dev/dex\ndocker-compose -f docker-compose.dex.yml up -d"}),"\n",(0,r.jsx)(n.h1,{id:"test-device-code-flow-manual",children:"Test device code flow (manual)"}),"\n",(0,r.jsx)(n.p,{children:"export PRISM_LOCAL_DEV=false  # Disable auto-login\nprism auth login"}),"\n",(0,r.jsx)(n.h1,{id:"output-3",children:"Output:"}),"\n",(0,r.jsxs)(n.h1,{id:"visit-httplocalhost5556dexdevice",children:["Visit: ",(0,r.jsx)(n.a,{href:"http://localhost:5556/dex/device",children:"http://localhost:5556/dex/device"})]}),"\n",(0,r.jsx)(n.h1,{id:"enter-code-abcd-1234",children:"Enter code: ABCD-1234"}),"\n",(0,r.jsx)(n.h1,{id:"opens-browser",children:"[Opens browser]"}),"\n",(0,r.jsxs)(n.h1,{id:"user-logs-in-as-devlocalprism-with-password-devpass",children:["[User logs in as ",(0,r.jsx)(n.a,{href:"mailto:dev@local.prism",children:"dev@local.prism"})," with password: devpass]"]}),"\n",(0,r.jsx)(n.h1,{id:"-authenticated-successfully",children:"\u2705 Authenticated successfully"}),"\n",(0,r.jsx)(n.h1,{id:"test-token-caching",children:"Test token caching"}),"\n",(0,r.jsx)(n.p,{children:"cat ~/.prism/token"}),"\n",(0,r.jsx)(n.h1,{id:"",children:"{"}),"\n",(0,r.jsx)(n.h1,{id:"access_token-eyjh",children:'"access_token": "eyJh...",'}),"\n",(0,r.jsx)(n.h1,{id:"refresh_token-cgk",children:'"refresh_token": "Cgk...",'}),"\n",(0,r.jsx)(n.h1,{id:"expires_at-2025-10-09t110000z",children:'"expires_at": "2025-10-09T11:00:00Z"'}),"\n",(0,r.jsx)(n.h1,{id:"-1",children:"}"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n### Workflow 4: Debugging with Traces\n\n"})}),"\n",(0,r.jsx)(n.h1,{id:"ensure-signoz-is-running",children:"Ensure Signoz is running"}),"\n",(0,r.jsx)(n.p,{children:"make dev-signoz-up"}),"\n",(0,r.jsx)(n.h1,{id:"set-otlp-endpoint",children:"Set OTLP endpoint"}),"\n",(0,r.jsxs)(n.p,{children:["export OTEL_EXPORTER_OTLP_ENDPOINT=",(0,r.jsx)(n.a,{href:"http://localhost:4317",children:"http://localhost:4317"})]}),"\n",(0,r.jsx)(n.h1,{id:"start-components-with-tracing",children:"Start components with tracing"}),"\n",(0,r.jsx)(n.p,{children:"cargo run --release  # Proxy\ngo run ./cmd/server  # Plugin"}),"\n",(0,r.jsx)(n.h1,{id:"make-some-requests",children:"Make some requests"}),"\n",(0,r.jsx)(n.p,{children:"prism namespace create analytics --backend postgres\nprism session list --namespace analytics"}),"\n",(0,r.jsx)(n.h1,{id:"view-traces-in-signoz",children:"View traces in Signoz"}),"\n",(0,r.jsxs)(n.p,{children:["open ",(0,r.jsx)(n.a,{href:"http://localhost:3301",children:"http://localhost:3301"})]}),"\n",(0,r.jsx)(n.h1,{id:"navigate-to-traces-tab",children:"Navigate to Traces tab"}),"\n",(0,r.jsx)(n.h1,{id:"filter-by-service-prism-proxy",children:"Filter by service: prism-proxy"}),"\n",(0,r.jsx)(n.h1,{id:"click-trace-to-see-full-waterfall-showing",children:"Click trace to see full waterfall showing:"}),"\n",(0,r.jsx)(n.h1,{id:"prism-proxy--admin-service--postgres",children:"prism-proxy \u2192 admin-service \u2192 postgres"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\n## Production Considerations\n\n**This RFC covers local development only.**\n\nFor production:\n- **Signoz**: Deploy as HA cluster (see Signoz docs)\n- **Dex**: Deploy with Kubernetes connector or enterprise SSO\n- **Identity**: Connect to real identity providers (Okta, Azure AD, Google)\n- **Secrets**: Use secret management, not static passwords\n\n**Migration Path:**\n1. Develop locally with RFC-016 infrastructure\n2. Test with ADR-046 Dex setup\n3. Deploy to staging with production OIDC provider\n4. Validate observability with production Signoz cluster\n5. Deploy to production with full monitoring\n\n## Open Questions\n\n1. **Auto-Update**: Should support services auto-update, or require manual upgrade?\n   - **Proposal**: Manual upgrade with notifications\n   - **Reasoning**: Avoid breaking changes mid-development\n\n2. **Shared Network**: Should Signoz and Dex share Docker network with backends?\n   - **Proposal**: Separate networks, bridge when needed\n   - **Reasoning**: Clear service boundaries\n\n3. **Data Retention**: How long to keep Signoz data locally?\n   - **Proposal**: 3 days default, configurable\n   - **Reasoning**: Balance disk space vs debugging needs\n\n4. **Multi-User**: Support multiple developer identities?\n   - **Proposal**: Start with single identity, add later if needed\n   - **Reasoning**: YAGNI for local dev\n\n5. **Windows Support**: How do these stacks run on Windows?\n   - **Proposal**: Docker Desktop + WSL2\n   - **Reasoning**: Standard Docker Compose should work\n\n## Related Documents\n\n- [ADR-047: OpenTelemetry Tracing Integration](/adr/adr-047-opentelemetry-tracing-integration)\n- [ADR-046: Dex IDP for Local Identity Testing](/adr/adr-046-dex-idp-local-testing)\n- [ADR-048: Local Signoz Instance for Observability Testing](/adr/adr-048-local-signoz-observability)\n- [RFC-010: Admin Protocol with OIDC](/rfc/rfc-010)\n- [RFC-011: Data Proxy Authentication](/rfc/rfc-011)\n- [MEMO-004: Backend Plugin Implementation Guide](/memos/memo-004-backend-plugin-implementation-guide)\n\n## Revision History\n\n- 2025-10-09: Initial draft covering Signoz, Dex, developer identity auto-provisioning, and lifecycle management\n\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(96540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);