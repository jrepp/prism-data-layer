"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[3976],{2053:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"intro","title":"Documentation Overview","description":"Welcome to the Prism Data Access Layer documentation. Prism is a high-performance data access gateway that provides a unified, client-configurable interface to heterogeneous data backends.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/prism-data-layer/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/jrepp/prism-data-layer/tree/main/docusaurus/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Documentation Overview","sidebar_position":1},"sidebar":"tutorialSidebar"}');var s=i(4848),t=i(8453);const a={title:"Documentation Overview",sidebar_position:1},o="Prism Documentation",c={},l=[{value:"What is Prism?",id:"what-is-prism",level:2},{value:"Documentation Types",id:"documentation-types",level:2},{value:"\ud83d\udccb Architecture Decision Records (ADRs)",id:"-architecture-decision-records-adrs",level:3},{value:"\ud83d\udcd0 Request for Comments (RFCs)",id:"-request-for-comments-rfcs",level:3},{value:"\ud83d\udcd6 General Documentation",id:"-general-documentation",level:3},{value:"Key Concepts",id:"key-concepts",level:2},{value:"Data Abstractions",id:"data-abstractions",level:3},{value:"Client-Originated Configuration",id:"client-originated-configuration",level:3},{value:"PII Handling",id:"pii-handling",level:3},{value:"Getting Started",id:"getting-started",level:2},{value:"Performance Targets",id:"performance-targets",level:2},{value:"Project Philosophy",id:"project-philosophy",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"prism-documentation",children:"Prism Documentation"})}),"\n",(0,s.jsx)(n.p,{children:"Welcome to the Prism Data Access Layer documentation. Prism is a high-performance data access gateway that provides a unified, client-configurable interface to heterogeneous data backends."}),"\n",(0,s.jsx)(n.h2,{id:"what-is-prism",children:"What is Prism?"}),"\n",(0,s.jsx)(n.p,{children:"Prism sits between applications and data backends (Kafka, NATS, Postgres, SQLite, Neptune), providing:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Unified API"}),": Single gRPC/HTTP interface across all backends"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Client-Originated Configuration"}),": Applications declare requirements; Prism auto-provisions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rust Performance"}),": 10-100x faster than JVM alternatives"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Local-First Testing"}),": Real backends locally, no mocks required"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Protobuf-Driven"}),": Single source of truth for all data models"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"documentation-types",children:"Documentation Types"}),"\n",(0,s.jsx)(n.p,{children:"Our documentation is organized into three main types:"}),"\n",(0,s.jsxs)(n.h3,{id:"-architecture-decision-records-adrs",children:["\ud83d\udccb ",(0,s.jsx)(n.a,{href:"/adr",children:"Architecture Decision Records (ADRs)"})]}),"\n",(0,s.jsx)(n.p,{children:"Track all significant architectural decisions made in the Prism project. Each ADR captures the context, decision, and consequences of a specific choice."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"When to read"}),": Understanding why certain technical choices were made, evaluating alternatives that were considered, onboarding to the project's architectural philosophy."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/adr",children:"Browse ADRs \u2192"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"-request-for-comments-rfcs",children:["\ud83d\udcd0 ",(0,s.jsx)(n.a,{href:"/rfc",children:"Request for Comments (RFCs)"})]}),"\n",(0,s.jsx)(n.p,{children:"Detailed technical specifications for major features and components. RFCs provide comprehensive design documentation before implementation."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"When to read"}),": Understanding complete system designs, implementing new features, reviewing proposed changes before they're built."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/rfc",children:"Browse RFCs \u2192"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"-general-documentation",children:"\ud83d\udcd6 General Documentation"}),"\n",(0,s.jsx)(n.p,{children:"Tutorials, guides, and reference documentation for using and developing Prism."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"When to read"}),": Getting started with Prism, learning how to use specific features, troubleshooting issues."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,s.jsx)(n.h3,{id:"data-abstractions",children:"Data Abstractions"}),"\n",(0,s.jsx)(n.p,{children:"Prism provides three primary data abstractions:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"KeyValue"}),": HashMap of SortedMaps backed by Postgres, Cassandra, SQLite, or S3"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"TimeSeries"}),": Append-only log with timestamp queries, backed by Kafka, ClickHouse, or NATS"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Graph"}),": Nodes and edges with traversal, backed by Neptune, Neo4j, or Postgres"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"client-originated-configuration",children:"Client-Originated Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Applications declare their data access patterns in protobuf:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-protobuf",children:'message UserEvents {\n  option (prism.access_pattern) = "append_heavy";\n  option (prism.estimated_write_rps) = "10000";\n  option (prism.retention_days) = "90";\n}\n// \u2192 Prism selects Kafka, provisions 20 partitions, sets 90-day retention\n'})}),"\n",(0,s.jsx)(n.h3,{id:"pii-handling",children:"PII Handling"}),"\n",(0,s.jsx)(n.p,{children:"Protobuf field annotations drive automatic PII handling:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-protobuf",children:'message UserProfile {\n  string email = 2 [\n    (prism.pii) = "email",\n    (prism.encrypt_at_rest) = true,\n    (prism.mask_in_logs) = true\n  ];\n}\n// \u2192 Generates encryption code, masked logging, audit trails\n'})}),"\n",(0,s.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Understand the Architecture"}),": Start with ",(0,s.jsx)(n.a,{href:"/rfc/RFC-001-prism-architecture",children:"RFC-001: Prism Architecture"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Review Key Decisions"}),": Browse ",(0,s.jsx)(n.a,{href:"/adr",children:"ADRs"})," to understand architectural choices"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Explore Interfaces"}),": Read ",(0,s.jsx)(n.a,{href:"/rfc/RFC-002-data-layer-interface",children:"RFC-002: Data Layer Interface"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Set Up Locally"}),": Follow the development setup in the ",(0,s.jsx)(n.a,{href:"https://github.com/jrepp/prism-data-layer",children:"repository"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"performance-targets",children:"Performance Targets"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"P50 Latency"}),": ",(0,s.jsx)(n.code,{children:"<1ms"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"P99 Latency"}),": ",(0,s.jsx)(n.code,{children:"<10ms"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Throughput"}),": 10k+ RPS per connection"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Memory"}),": ",(0,s.jsx)(n.code,{children:"<500MB"})," per proxy instance"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"project-philosophy",children:"Project Philosophy"}),"\n",(0,s.jsx)(n.p,{children:"Prism is built on these principles:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performance First"}),": Rust-based proxy for maximum throughput and minimal latency"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Client-Originated Configuration"}),": Applications know their needs best"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Local-First Testing"}),": Real backends over mocks for realistic testing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Pluggable Backends"}),": Clean abstraction layer allows adding backends without changing application code"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"DRY via Code Generation"}),": Protobuf definitions with custom tags drive code generation across components"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["For more details on the project philosophy and development practices, see ",(0,s.jsx)(n.a,{href:"https://github.com/jrepp/prism-data-layer/blob/main/CLAUDE.md",children:"CLAUDE.md"})," in the repository."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var r=i(6540);const s={},t=r.createContext(s);function a(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);