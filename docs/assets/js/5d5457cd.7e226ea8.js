"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[65230],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>d});var i=s(96540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}},89720:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"memo-013","title":"POC 1 Infrastructure Analysis - SDK and Load Testing","description":"Executive Summary","source":"@site/../docs-cms/memos/MEMO-013-poc1-infrastructure-analysis.md","sourceDirName":".","slug":"/memo-013","permalink":"/prism-data-layer/memos/memo-013","draft":false,"unlisted":false,"editUrl":"https://github.com/jrepp/prism-data-layer/tree/main/docs-cms/../docs-cms/memos/MEMO-013-poc1-infrastructure-analysis.md","tags":[{"inline":true,"label":"poc1","permalink":"/prism-data-layer/memos/tags/poc-1"},{"inline":true,"label":"pattern-sdk","permalink":"/prism-data-layer/memos/tags/pattern-sdk"},{"inline":true,"label":"load-testing","permalink":"/prism-data-layer/memos/tags/load-testing"},{"inline":true,"label":"infrastructure","permalink":"/prism-data-layer/memos/tags/infrastructure"},{"inline":true,"label":"developer-experience","permalink":"/prism-data-layer/memos/tags/developer-experience"}],"version":"current","frontMatter":{"author":"Platform Team","created":"2025-10-11T00:00:00.000Z","doc_uuid":"1cdb6074-00e4-4203-ae16-636b93e3f995","id":"memo-013","project_id":"prism-data-layer","tags":["poc1","pattern-sdk","load-testing","infrastructure","developer-experience"],"title":"POC 1 Infrastructure Analysis - SDK and Load Testing","updated":"2025-10-11T00:00:00.000Z"},"sidebar":"memosSidebar","previous":{"title":"Developer Experience and Common Workflows \u2022 MEMO-012","permalink":"/prism-data-layer/memos/memo-012"},"next":{"title":"Pattern SDK Shared Complexity Analysis \u2022 MEMO-014","permalink":"/prism-data-layer/memos/memo-014"}}');var t=s(74848),r=s(28453);const l={author:"Platform Team",created:new Date("2025-10-11T00:00:00.000Z"),doc_uuid:"1cdb6074-00e4-4203-ae16-636b93e3f995",id:"memo-013",project_id:"prism-data-layer",tags:["poc1","pattern-sdk","load-testing","infrastructure","developer-experience"],title:"POC 1 Infrastructure Analysis - SDK and Load Testing",updated:new Date("2025-10-11T00:00:00.000Z")},d="MEMO-013: POC 1 Infrastructure Analysis - SDK and Load Testing",c={},o=[{value:"Executive Summary",id:"executive-summary",level:2},{value:"Context",id:"context",level:2},{value:"Trigger",id:"trigger",level:3},{value:"Analysis Scope",id:"analysis-scope",level:3},{value:"Goals",id:"goals",level:3},{value:"Findings",id:"findings",level:2},{value:"Finding 1: Significant Code Duplication Across Plugins",id:"finding-1-significant-code-duplication-across-plugins",level:3},{value:"Evidence",id:"evidence",level:4},{value:"Impact",id:"impact",level:4},{value:"Root Cause",id:"root-cause",level:4},{value:"Finding 2: Two Types of Load Testing Needed",id:"finding-2-two-types-of-load-testing-needed",level:3},{value:"Evidence",id:"evidence-1",level:4},{value:"Analysis",id:"analysis",level:4},{value:"Comparison",id:"comparison",level:4},{value:"Finding 3: ghz Best Tool for Integration Testing",id:"finding-3-ghz-best-tool-for-integration-testing",level:3},{value:"Framework Evaluation Results",id:"framework-evaluation-results",level:4},{value:"Recommendations",id:"recommendations",level:2},{value:"Recommendation 1: Extract Shared Complexity to SDK",id:"recommendation-1-extract-shared-complexity-to-sdk",level:3},{value:"Phase 1: Foundation (3 days)",id:"phase-1-foundation-3-days",level:4},{value:"Phase 2: Convenience (2 days)",id:"phase-2-convenience-2-days",level:4},{value:"Phase 3: Refactor Plugins (2 days)",id:"phase-3-refactor-plugins-2-days",level:4},{value:"Recommendation 2: Adopt Two-Tier Load Testing Strategy",id:"recommendation-2-adopt-two-tier-load-testing-strategy",level:3},{value:"Keep Custom Tool (prism-loadtest)",id:"keep-custom-tool-prism-loadtest",level:4},{value:"Add ghz for Integration Testing",id:"add-ghz-for-integration-testing",level:4},{value:"Recommendation 3: Implementation Order",id:"recommendation-3-implementation-order",level:3},{value:"Benefits",id:"benefits",level:2},{value:"Developer Experience",id:"developer-experience",level:3},{value:"Code Quality",id:"code-quality",level:3},{value:"Maintenance",id:"maintenance",level:3},{value:"Testing",id:"testing",level:3},{value:"Risks and Mitigations",id:"risks-and-mitigations",level:2},{value:"Risk 1: SDK Complexity",id:"risk-1-sdk-complexity",level:3},{value:"Risk 2: Schedule Impact",id:"risk-2-schedule-impact",level:3},{value:"Risk 3: Tool Proliferation",id:"risk-3-tool-proliferation",level:3},{value:"Risk 4: Performance Regression",id:"risk-4-performance-regression",level:3},{value:"Success Metrics",id:"success-metrics",level:2},{value:"Code Quality Metrics",id:"code-quality-metrics",level:3},{value:"Performance Metrics",id:"performance-metrics",level:3},{value:"Developer Experience Metrics",id:"developer-experience-metrics",level:3},{value:"Implementation Plan",id:"implementation-plan",level:2},{value:"Week 1: Foundation",id:"week-1-foundation",level:3},{value:"Week 2: Integration",id:"week-2-integration",level:3},{value:"Decision Matrix",id:"decision-matrix",level:2},{value:"When to Use Pattern-Level Testing (prism-loadtest)",id:"when-to-use-pattern-level-testing-prism-loadtest",level:3},{value:"When to Use Integration Testing (ghz)",id:"when-to-use-integration-testing-ghz",level:3},{value:"Cost-Benefit Analysis",id:"cost-benefit-analysis",level:2},{value:"Investment",id:"investment",level:3},{value:"Return",id:"return",level:3},{value:"Alternatives Considered",id:"alternatives-considered",level:2},{value:"Alternative 1: No SDK Enhancements (Status Quo)",id:"alternative-1-no-sdk-enhancements-status-quo",level:3},{value:"Alternative 2: Third-Party Libraries for Pooling/TTL",id:"alternative-2-third-party-libraries-for-poolingttl",level:3},{value:"Alternative 3: Single Tool (ghz Only or Custom Only)",id:"alternative-3-single-tool-ghz-only-or-custom-only",level:3},{value:"Next Steps",id:"next-steps",level:2},{value:"Immediate (This Week)",id:"immediate-this-week",level:3},{value:"Short-Term (Next 2 Weeks)",id:"short-term-next-2-weeks",level:3},{value:"Long-Term (POC 2+)",id:"long-term-poc-2",level:3},{value:"Related Documents",id:"related-documents",level:2},{value:"Appendix A: Code Examples",id:"appendix-a-code-examples",level:2},{value:"Before SDK (Redis Plugin)",id:"before-sdk-redis-plugin",level:3},{value:"After SDK (Redis Plugin)",id:"after-sdk-redis-plugin",level:3},{value:"Appendix B: Load Testing Example",id:"appendix-b-load-testing-example",level:2},{value:"Pattern-Level Test",id:"pattern-level-test",level:3},{value:"Integration-Level Test",id:"integration-level-test",level:3},{value:"Conclusion",id:"conclusion",level:2},{value:"Revision History",id:"revision-history",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"memo-013-poc-1-infrastructure-analysis---sdk-and-load-testing",children:"MEMO-013: POC 1 Infrastructure Analysis - SDK and Load Testing"})}),"\n",(0,t.jsx)(n.h2,{id:"executive-summary",children:"Executive Summary"}),"\n",(0,t.jsxs)(n.p,{children:["Comprehensive analysis of POC 1 infrastructure reveals two critical improvement areas: ",(0,t.jsx)(n.strong,{children:"Pattern SDK shared complexity"})," and ",(0,t.jsx)(n.strong,{children:"load testing strategy"}),". This memo synthesizes findings from MEMO-014 (SDK analysis) and RFC-029 (load testing evaluation) to provide actionable recommendations for POC 1 implementation."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Key Recommendations"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Extract shared complexity"})," to Pattern SDK (38% code reduction)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Adopt two-tier load testing"})," (custom tool + ghz)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Prioritize connection pooling, TTL management, and health checks"})," for SDK"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implement in 2-week sprint"})," alongside POC 1 plugin development"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Impact"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\ud83c\udfaf ",(0,t.jsx)(n.strong,{children:"Faster plugin development"}),": 38% less code per plugin"]}),"\n",(0,t.jsxs)(n.li,{children:["\ud83c\udfaf ",(0,t.jsx)(n.strong,{children:"Better testing"}),": Pattern-level + integration coverage"]}),"\n",(0,t.jsxs)(n.li,{children:["\ud83c\udfaf ",(0,t.jsx)(n.strong,{children:"Higher quality"}),": 85%+ test coverage in SDK"]}),"\n",(0,t.jsxs)(n.li,{children:["\ud83c\udfaf ",(0,t.jsx)(n.strong,{children:"Reduced maintenance"}),": Standardized patterns"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"context",children:"Context"}),"\n",(0,t.jsx)(n.h3,{id:"trigger",children:"Trigger"}),"\n",(0,t.jsxs)(n.p,{children:["RFC-021 defines three POC 1 plugins (MemStore, Redis, Kafka) with significant code duplication. Additionally, the current load testing tool (",(0,t.jsx)(n.code,{children:"prism-loadtest"}),") lacks integration-level testing through the Rust proxy."]}),"\n",(0,t.jsx)(n.h3,{id:"analysis-scope",children:"Analysis Scope"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"MEMO-014"}),": Pattern SDK Shared Complexity"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Analyzed all three plugin implementations"}),"\n",(0,t.jsx)(n.li,{children:"Identified 10 areas of duplication"}),"\n",(0,t.jsx)(n.li,{children:"Proposed SDK enhancements"}),"\n",(0,t.jsx)(n.li,{children:"Estimated code reduction: 38%"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"RFC-029"}),": Load Testing Framework Evaluation"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Evaluated 5 frameworks (ghz, k6, fortio, vegeta, custom)"}),"\n",(0,t.jsx)(n.li,{children:"Compared against Prism requirements"}),"\n",(0,t.jsx)(n.li,{children:"Proposed two-tier testing strategy"}),"\n",(0,t.jsx)(n.li,{children:"Recommended ghz for integration testing"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"goals",children:"Goals"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Reduce code duplication"})," in plugin implementations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Improve developer experience"})," with reusable SDK packages"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Establish comprehensive testing strategy"})," for POC 1+"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Maintain high code quality"})," (80%+ coverage)"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"findings",children:"Findings"}),"\n",(0,t.jsx)(n.h3,{id:"finding-1-significant-code-duplication-across-plugins",children:"Finding 1: Significant Code Duplication Across Plugins"}),"\n",(0,t.jsx)(n.h4,{id:"evidence",children:"Evidence"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Shared Feature"}),(0,t.jsx)(n.th,{children:"MemStore"}),(0,t.jsx)(n.th,{children:"Redis"}),(0,t.jsx)(n.th,{children:"Kafka"}),(0,t.jsx)(n.th,{children:"SDK Support"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"TTL Management"}),(0,t.jsx)(n.td,{children:"\u2705 Custom"}),(0,t.jsx)(n.td,{children:"\u2705 Redis EXPIRE"}),(0,t.jsx)(n.td,{children:"\u274c N/A"}),(0,t.jsx)(n.td,{children:"\u274c None"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Connection Pooling"}),(0,t.jsx)(n.td,{children:"\u274c N/A"}),(0,t.jsx)(n.td,{children:"\u2705 Custom"}),(0,t.jsx)(n.td,{children:"\u2705 Custom"}),(0,t.jsx)(n.td,{children:"\u274c None"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Health Checks"}),(0,t.jsx)(n.td,{children:"\u2705 Custom"}),(0,t.jsx)(n.td,{children:"\u2705 Custom"}),(0,t.jsx)(n.td,{children:"\u2705 Custom"}),(0,t.jsx)(n.td,{children:"\u274c None"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Retry Logic"}),(0,t.jsx)(n.td,{children:"\u274c N/A"}),(0,t.jsx)(n.td,{children:"\u2705 Custom"}),(0,t.jsx)(n.td,{children:"\u2705 Custom"}),(0,t.jsx)(n.td,{children:"\u2705 Basic"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Config Loading"}),(0,t.jsx)(n.td,{children:"\u2705 Custom"}),(0,t.jsx)(n.td,{children:"\u2705 Custom"}),(0,t.jsx)(n.td,{children:"\u2705 Custom"}),(0,t.jsx)(n.td,{children:"\u274c None"})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"10 of 10 features"})," have duplication across plugins."]}),"\n",(0,t.jsx)(n.h4,{id:"impact",children:"Impact"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Current State"})," (without SDK enhancements):"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"MemStore: ~600 LOC"}),"\n",(0,t.jsx)(n.li,{children:"Redis: ~700 LOC"}),"\n",(0,t.jsx)(n.li,{children:"Kafka: ~800 LOC"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Total"}),": 2,100 LOC"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Future State"})," (with SDK enhancements):"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"MemStore: ~350 LOC (42% reduction)"}),"\n",(0,t.jsx)(n.li,{children:"Redis: ~450 LOC (36% reduction)"}),"\n",(0,t.jsx)(n.li,{children:"Kafka: ~500 LOC (38% reduction)"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Total"}),": 1,300 LOC (38% reduction)"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Savings"}),": 800 lines of code across three plugins"]}),"\n",(0,t.jsx)(n.h4,{id:"root-cause",children:"Root Cause"}),"\n",(0,t.jsx)(n.p,{children:"Pattern SDK was designed as minimal skeleton (RFC-022):"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Auth stubs"}),"\n",(0,t.jsx)(n.li,{children:"Basic observability"}),"\n",(0,t.jsx)(n.li,{children:"Lifecycle hooks"}),"\n",(0,t.jsx)(n.li,{children:"Basic retry logic"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Missing"}),": Higher-level abstractions for common patterns (pooling, TTL, health)"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"finding-2-two-types-of-load-testing-needed",children:"Finding 2: Two Types of Load Testing Needed"}),"\n",(0,t.jsx)(n.h4,{id:"evidence-1",children:"Evidence"}),"\n",(0,t.jsxs)(n.p,{children:["Current ",(0,t.jsx)(n.code,{children:"prism-loadtest"})," tool:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Tests pattern logic directly"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Custom metrics (multicast delivery stats)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Production-ready (validated by MEMO-010)"}),"\n",(0,t.jsx)(n.li,{children:"\u274c Doesn't test through Rust proxy"}),"\n",(0,t.jsx)(n.li,{children:"\u274c No gRPC integration testing"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Gap"}),": Cannot validate end-to-end production path (client \u2192 proxy \u2192 plugin \u2192 backend)"]}),"\n",(0,t.jsx)(n.h4,{id:"analysis",children:"Analysis"}),"\n",(0,t.jsxs)(n.p,{children:["Prism requires ",(0,t.jsx)(n.strong,{children:"two distinct testing levels"}),":"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Pattern-Level Testing"})," (Unit Load Testing):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"prism-loadtest \u2192 Coordinator (direct) \u2192 Redis/NATS\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose"}),": Test pattern logic in isolation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Speed"}),": Fastest (no gRPC overhead)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Metrics"}),": Custom (multicast delivery)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Use Case"}),": Development, optimization"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Integration-Level Testing"})," (End-to-End):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"ghz \u2192 Rust Proxy (gRPC) \u2192 Pattern (gRPC) \u2192 Redis/NATS\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose"}),": Test production path"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Speed"}),": Realistic (includes gRPC)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Metrics"}),": Standard (gRPC)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Use Case"}),": QA, production validation"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"comparison",children:"Comparison"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Aspect"}),(0,t.jsx)(n.th,{children:"Pattern-Level"}),(0,t.jsx)(n.th,{children:"Integration-Level"}),(0,t.jsx)(n.th,{children:"Both?"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Speed"})}),(0,t.jsx)(n.td,{children:"Fastest (<1ms)"}),(0,t.jsx)(n.td,{children:"Realistic (+3-5ms gRPC)"}),(0,t.jsx)(n.td,{children:"\u2705 Different use cases"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Metrics"})}),(0,t.jsx)(n.td,{children:"Custom \u2705"}),(0,t.jsx)(n.td,{children:"Standard only"}),(0,t.jsx)(n.td,{children:"\u2705 Complementary"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Debugging"})}),(0,t.jsx)(n.td,{children:"Easiest"}),(0,t.jsx)(n.td,{children:"Harder"}),(0,t.jsx)(n.td,{children:"\u2705 Pattern-level for dev"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Production Accuracy"})}),(0,t.jsx)(n.td,{children:"No proxy"}),(0,t.jsx)(n.td,{children:"Full stack \u2705"}),(0,t.jsx)(n.td,{children:"\u2705 Integration for QA"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Coverage"})}),(0,t.jsx)(n.td,{children:"Pattern logic"}),(0,t.jsx)(n.td,{children:"Proxy + Pattern"}),(0,t.jsx)(n.td,{children:"\u2705 Both needed"})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Conclusion"}),": Both types are necessary and complementary."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"finding-3-ghz-best-tool-for-integration-testing",children:"Finding 3: ghz Best Tool for Integration Testing"}),"\n",(0,t.jsx)(n.h4,{id:"framework-evaluation-results",children:"Framework Evaluation Results"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Framework"}),(0,t.jsx)(n.th,{children:"gRPC"}),(0,t.jsx)(n.th,{children:"Custom Metrics"}),(0,t.jsx)(n.th,{children:"Learning Curve"}),(0,t.jsx)(n.th,{children:"Maintenance"}),(0,t.jsx)(n.th,{children:"Total Score"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"ghz"})}),(0,t.jsx)(n.td,{children:"5/5"}),(0,t.jsx)(n.td,{children:"2/5"}),(0,t.jsx)(n.td,{children:"4/5"}),(0,t.jsx)(n.td,{children:"5/5"}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"24/30"})," \u2705"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"k6"}),(0,t.jsx)(n.td,{children:"3/5"}),(0,t.jsx)(n.td,{children:"4/5"}),(0,t.jsx)(n.td,{children:"2/5"}),(0,t.jsx)(n.td,{children:"5/5"}),(0,t.jsx)(n.td,{children:"20/30"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"fortio"}),(0,t.jsx)(n.td,{children:"5/5"}),(0,t.jsx)(n.td,{children:"2/5"}),(0,t.jsx)(n.td,{children:"4/5"}),(0,t.jsx)(n.td,{children:"4/5"}),(0,t.jsx)(n.td,{children:"22/30"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"vegeta"}),(0,t.jsx)(n.td,{children:"0/5"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"Disqualified (no gRPC)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Custom"}),(0,t.jsx)(n.td,{children:"0/5"}),(0,t.jsx)(n.td,{children:"5/5"}),(0,t.jsx)(n.td,{children:"5/5"}),(0,t.jsx)(n.td,{children:"2/5"}),(0,t.jsx)(n.td,{children:"22/30"})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"ghz wins"})," for integration testing (24/30):"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Native gRPC support"}),"\n",(0,t.jsx)(n.li,{children:"Minimal learning curve"}),"\n",(0,t.jsx)(n.li,{children:"Zero code maintenance"}),"\n",(0,t.jsx)(n.li,{children:"Standard output formats (JSON, CSV, HTML)"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Custom tool wins"})," for pattern-level testing (22/30):"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Direct integration"}),"\n",(0,t.jsx)(n.li,{children:"Custom metrics"}),"\n",(0,t.jsx)(n.li,{children:"Fastest iteration"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Decision"}),": Use both (two-tier strategy)"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"recommendations",children:"Recommendations"}),"\n",(0,t.jsx)(n.h3,{id:"recommendation-1-extract-shared-complexity-to-sdk",children:"Recommendation 1: Extract Shared Complexity to SDK"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Priority"}),": High (POC 1 blocker)"]}),"\n",(0,t.jsx)(n.h4,{id:"phase-1-foundation-3-days",children:"Phase 1: Foundation (3 days)"}),"\n",(0,t.jsx)(n.p,{children:"Implement three critical SDK packages:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"1. Connection Pool Manager"})," (",(0,t.jsx)(n.code,{children:"plugins/core/pool/"}),")"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Generic connection pooling with health checking"}),"\n",(0,t.jsx)(n.li,{children:"~300 LOC + ~200 LOC tests"}),"\n",(0,t.jsx)(n.li,{children:"Coverage target: 90%+"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Impact"}),": Reduces Redis and Kafka by ~150 LOC each"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"2. TTL Manager"})," (",(0,t.jsx)(n.code,{children:"plugins/core/ttl/"}),")"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Heap-based key expiration (O(log n) vs O(1) per-key timers)"}),"\n",(0,t.jsx)(n.li,{children:"~250 LOC + ~150 LOC tests"}),"\n",(0,t.jsx)(n.li,{children:"Coverage target: 95%+"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Impact"}),": Reduces MemStore by ~80 LOC, 10x better scalability"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"3. Health Check Framework"})," (",(0,t.jsx)(n.code,{children:"plugins/core/health/"}),")"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Standardized health checking with composite status"}),"\n",(0,t.jsx)(n.li,{children:"~200 LOC + ~100 LOC tests"}),"\n",(0,t.jsx)(n.li,{children:"Coverage target: 90%+"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Impact"}),": Reduces all plugins by ~50 LOC each"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Total Effort"}),": 3 days (one Go expert)"]}),"\n",(0,t.jsx)(n.h4,{id:"phase-2-convenience-2-days",children:"Phase 2: Convenience (2 days)"}),"\n",(0,t.jsx)(n.p,{children:"Implement supporting packages:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"4. gRPC Middleware"})," (",(0,t.jsx)(n.code,{children:"plugins/core/server/middleware.go"}),")"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Logging interceptor"}),"\n",(0,t.jsx)(n.li,{children:"Error standardization interceptor"}),"\n",(0,t.jsx)(n.li,{children:"~150 LOC + ~80 LOC tests"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Impact"}),": Reduces all plugins by ~30 LOC each"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"5. Config Loader"})," (",(0,t.jsx)(n.code,{children:"plugins/core/config/"}),")"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Type-safe environment variable loading"}),"\n",(0,t.jsx)(n.li,{children:"~100 LOC + ~60 LOC tests"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Impact"}),": Reduces all plugins by ~20 LOC each"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"6. Circuit Breaker"})," (",(0,t.jsx)(n.code,{children:"plugins/core/storage/errors.go"}),")"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Error classification"}),"\n",(0,t.jsx)(n.li,{children:"Circuit breaker for fault tolerance"}),"\n",(0,t.jsx)(n.li,{children:"~200 LOC + ~100 LOC tests"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Impact"}),": Improves reliability (no LOC reduction)"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Total Effort"}),": 2 days"]}),"\n",(0,t.jsx)(n.h4,{id:"phase-3-refactor-plugins-2-days",children:"Phase 3: Refactor Plugins (2 days)"}),"\n",(0,t.jsx)(n.p,{children:"Refactor existing plugins to use new SDK packages:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["MemStore: Use ",(0,t.jsx)(n.code,{children:"ttl.Manager"})," instead of per-key timers"]}),"\n",(0,t.jsxs)(n.li,{children:["Redis: Use ",(0,t.jsx)(n.code,{children:"pool.Pool"})," for connection management"]}),"\n",(0,t.jsxs)(n.li,{children:["Kafka: Use ",(0,t.jsx)(n.code,{children:"pool.Pool"})," for connection management"]}),"\n",(0,t.jsxs)(n.li,{children:["All: Use ",(0,t.jsx)(n.code,{children:"health.Checker"}),", ",(0,t.jsx)(n.code,{children:"config.Loader"}),", middleware"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Total Effort"}),": 2 days"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Total Timeline"}),": ",(0,t.jsx)(n.strong,{children:"7 days"})," (1.5 weeks)"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"recommendation-2-adopt-two-tier-load-testing-strategy",children:"Recommendation 2: Adopt Two-Tier Load Testing Strategy"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Priority"}),": High (POC 1 quality gate)"]}),"\n",(0,t.jsx)(n.h4,{id:"keep-custom-tool-prism-loadtest",children:"Keep Custom Tool (prism-loadtest)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Enhancements"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Add ramp-up load profile"}),"\n",(0,t.jsx)(n.li,{children:"Add spike load profile"}),"\n",(0,t.jsx)(n.li,{children:"Add JSON output format"}),"\n",(0,t.jsx)(n.li,{children:"Document usage patterns"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Effort"}),": 2 days"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Use Cases"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Pattern development and debugging"}),"\n",(0,t.jsx)(n.li,{children:"Algorithm optimization (TTL, fan-out)"}),"\n",(0,t.jsx)(n.li,{children:"Backend benchmarking (Redis vs SQLite)"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"add-ghz-for-integration-testing",children:"Add ghz for Integration Testing"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Setup"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Install ghz (",(0,t.jsx)(n.code,{children:"go install github.com/bojand/ghz/cmd/ghz@latest"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Create test suite (",(0,t.jsx)(n.code,{children:"tests/load/ghz/"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"Add to CI/CD pipeline"}),"\n",(0,t.jsx)(n.li,{children:"Document baseline overhead (gRPC adds ~3-5ms)"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Effort"}),": 3 days"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Use Cases"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"End-to-end testing through proxy"}),"\n",(0,t.jsx)(n.li,{children:"Production validation"}),"\n",(0,t.jsx)(n.li,{children:"CI/CD regression testing"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Total Timeline"}),": ",(0,t.jsx)(n.strong,{children:"5 days"})," (1 week)"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"recommendation-3-implementation-order",children:"Recommendation 3: Implementation Order"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Week 1: SDK Foundation + Tool Enhancements"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Days 1-3: Implement SDK packages (pool, TTL, health)"}),"\n",(0,t.jsx)(n.li,{children:"Days 4-5: Enhance prism-loadtest (profiles, JSON output)"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Week 2: Integration + Validation"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Days 1-2: Refactor plugins to use SDK"}),"\n",(0,t.jsx)(n.li,{children:"Days 3-5: Add ghz integration testing + CI/CD"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parallel Work Opportunities"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"SDK development (Go expert)"}),"\n",(0,t.jsx)(n.li,{children:"Load testing setup (DevOps/QA)"}),"\n",(0,t.jsx)(n.li,{children:"Can run concurrently"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"benefits",children:"Benefits"}),"\n",(0,t.jsx)(n.h3,{id:"developer-experience",children:"Developer Experience"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Before"})," (current state):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:"// Redis plugin: ~700 LOC\n// - 150 LOC connection pooling\n// - 50 LOC health checks\n// - 40 LOC config loading\n// - 460 LOC actual Redis logic\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"After"})," (with SDK):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:"// Redis plugin: ~450 LOC\n// - 10 LOC pool setup (use sdk.Pool)\n// - 5 LOC health setup (use sdk.Health)\n// - 5 LOC config setup (use sdk.Config)\n// - 430 LOC actual Redis logic (cleaned up)\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Result"}),": ",(0,t.jsx)(n.strong,{children:"36% less boilerplate"}),", focus on business logic"]}),"\n",(0,t.jsx)(n.h3,{id:"code-quality",children:"Code Quality"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"SDK Packages"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"85-95% test coverage (enforced in CI)"}),"\n",(0,t.jsx)(n.li,{children:"Comprehensive unit tests"}),"\n",(0,t.jsx)(n.li,{children:"Race detector clean"}),"\n",(0,t.jsx)(n.li,{children:"Benchmarked performance"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Plugins"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Inherit SDK quality"}),"\n",(0,t.jsx)(n.li,{children:"Focus on integration tests"}),"\n",(0,t.jsx)(n.li,{children:"Reduced surface area for bugs"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"maintenance",children:"Maintenance"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Before"}),": 3 custom implementations \xd7 3 features = 9 code paths to maintain"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"After"}),": 1 SDK implementation \xd7 3 features = 3 code paths to maintain"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Reduction"}),": 67% fewer code paths"]}),"\n",(0,t.jsx)(n.h3,{id:"testing",children:"Testing"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Pattern-Level"})," (prism-loadtest):"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Fastest iteration (<1ms latency)"}),"\n",(0,t.jsx)(n.li,{children:"Custom metrics (multicast delivery rate)"}),"\n",(0,t.jsx)(n.li,{children:"Isolated debugging"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Integration-Level"})," (ghz):"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Production accuracy (includes gRPC)"}),"\n",(0,t.jsx)(n.li,{children:"Standard reporting (JSON, CSV, HTML)"}),"\n",(0,t.jsx)(n.li,{children:"CI/CD integration"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Result"}),": Comprehensive coverage at two levels"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"risks-and-mitigations",children:"Risks and Mitigations"}),"\n",(0,t.jsx)(n.h3,{id:"risk-1-sdk-complexity",children:"Risk 1: SDK Complexity"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Risk"}),": SDK becomes too complex and hard to understand."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Mitigation"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Keep packages focused (single responsibility)"}),"\n",(0,t.jsx)(n.li,{children:"Comprehensive documentation with examples"}),"\n",(0,t.jsx)(n.li,{children:"Code reviews for all SDK changes"}),"\n",(0,t.jsx)(n.li,{children:"Target: 85%+ test coverage"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Probability"}),": Low (packages are well-scoped)"]}),"\n",(0,t.jsx)(n.h3,{id:"risk-2-schedule-impact",children:"Risk 2: Schedule Impact"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Risk"}),": SDK work delays POC 1 plugin implementation."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Mitigation"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Parallel work streams (SDK + load testing)"}),"\n",(0,t.jsx)(n.li,{children:"Incremental adoption (plugins can start without SDK)"}),"\n",(0,t.jsx)(n.li,{children:"Total: 2 weeks (fits within POC 1 timeline)"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Probability"}),": Low (work is additive, not blocking)"]}),"\n",(0,t.jsx)(n.h3,{id:"risk-3-tool-proliferation",children:"Risk 3: Tool Proliferation"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Risk"}),": Team confused about which load testing tool to use."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Mitigation"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Clear decision matrix (pattern-level vs integration)"}),"\n",(0,t.jsx)(n.li,{children:"Documentation in RFC-029"}),"\n",(0,t.jsx)(n.li,{children:"Training/examples for both tools"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Probability"}),": Low (two tools with clear separation)"]}),"\n",(0,t.jsx)(n.h3,{id:"risk-4-performance-regression",children:"Risk 4: Performance Regression"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Risk"}),": Generic SDK code slower than custom implementations."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Mitigation"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Benchmark all SDK packages"}),"\n",(0,t.jsx)(n.li,{children:"Compare against custom implementations"}),"\n",(0,t.jsx)(n.li,{children:"Target: No regression (<5% acceptable)"}),"\n",(0,t.jsx)(n.li,{children:"Example: TTL manager 10x faster (heap vs per-key timers)"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Probability"}),": Very Low (SDK uses better algorithms)"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"success-metrics",children:"Success Metrics"}),"\n",(0,t.jsx)(n.h3,{id:"code-quality-metrics",children:"Code Quality Metrics"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Metric"}),(0,t.jsx)(n.th,{children:"Target"}),(0,t.jsx)(n.th,{children:"Measurement"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"SDK Test Coverage"}),(0,t.jsx)(n.td,{children:"85%+"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"make coverage-sdk"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Plugin Code Reduction"}),(0,t.jsx)(n.td,{children:"35%+"}),(0,t.jsx)(n.td,{children:"LOC comparison"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Bug Reduction"}),(0,t.jsx)(n.td,{children:"40%+"}),(0,t.jsx)(n.td,{children:"Bugs in connection/TTL logic"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Build Time"}),(0,t.jsx)(n.td,{children:"<30s"}),(0,t.jsx)(n.td,{children:"CI/CD pipeline"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"performance-metrics",children:"Performance Metrics"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Metric"}),(0,t.jsx)(n.th,{children:"Target"}),(0,t.jsx)(n.th,{children:"Measurement"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Pattern-Level P95"}),(0,t.jsx)(n.td,{children:"<5ms"}),(0,t.jsx)(n.td,{children:"prism-loadtest results"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Integration P95"}),(0,t.jsx)(n.td,{children:"<10ms"}),(0,t.jsx)(n.td,{children:"ghz results"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"gRPC Overhead"}),(0,t.jsx)(n.td,{children:"3-5ms"}),(0,t.jsx)(n.td,{children:"Diff between tools"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"TTL Performance"}),(0,t.jsx)(n.td,{children:"10x improvement"}),(0,t.jsx)(n.td,{children:"Benchmark: 10K keys"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"developer-experience-metrics",children:"Developer Experience Metrics"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Metric"}),(0,t.jsx)(n.th,{children:"Target"}),(0,t.jsx)(n.th,{children:"Measurement"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"New Plugin Time"}),(0,t.jsx)(n.td,{children:"-30%"}),(0,t.jsx)(n.td,{children:"Time to add plugin"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"SDK Adoption"}),(0,t.jsx)(n.td,{children:"100%"}),(0,t.jsx)(n.td,{children:"All plugins use SDK"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Tool Clarity"}),(0,t.jsx)(n.td,{children:"100%"}),(0,t.jsx)(n.td,{children:"Team knows which tool to use"})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"implementation-plan",children:"Implementation Plan"}),"\n",(0,t.jsx)(n.h3,{id:"week-1-foundation",children:"Week 1: Foundation"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Days 1-3: SDK Packages"})," (Go Expert)"]}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Implement ",(0,t.jsx)(n.code,{children:"pool.Pool"})," with tests (90%+ coverage)"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Implement ",(0,t.jsx)(n.code,{children:"ttl.Manager"})," with tests (95%+ coverage)"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Implement ",(0,t.jsx)(n.code,{children:"health.Checker"})," with tests (90%+ coverage)"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Run ",(0,t.jsx)(n.code,{children:"make coverage-sdk"})," to verify"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Days 4-5: Load Testing"})," (DevOps/QA)"]}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Enhance prism-loadtest with profiles"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Add JSON output format"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Document usage patterns"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"week-2-integration",children:"Week 2: Integration"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Days 1-2: Plugin Refactoring"})," (Go Expert)"]}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Refactor MemStore to use ",(0,t.jsx)(n.code,{children:"ttl.Manager"})]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Refactor Redis to use ",(0,t.jsx)(n.code,{children:"pool.Pool"})," and ",(0,t.jsx)(n.code,{children:"health.Checker"})]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Refactor Kafka to use ",(0,t.jsx)(n.code,{children:"pool.Pool"})," and ",(0,t.jsx)(n.code,{children:"health.Checker"})]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Verify all tests pass"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Days 3-5: ghz Integration"})," (DevOps/QA)"]}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Install ghz"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Create ghz test suite for each pattern"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Add to CI/CD pipeline"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Document baseline performance"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Day 5: Validation"})}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Run full test suite (pattern-level + integration)"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Compare results (expected: gRPC adds 3-5ms)"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," Generate final report"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"decision-matrix",children:"Decision Matrix"}),"\n",(0,t.jsx)(n.h3,{id:"when-to-use-pattern-level-testing-prism-loadtest",children:"When to Use Pattern-Level Testing (prism-loadtest)"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Scenario"}),(0,t.jsx)(n.th,{children:"Rationale"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Pattern Development"})}),(0,t.jsx)(n.td,{children:"Fast iteration, no proxy needed"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Algorithm Optimization"})}),(0,t.jsx)(n.td,{children:"Isolated testing (TTL, fan-out)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Backend Benchmarking"})}),(0,t.jsx)(n.td,{children:"Compare Redis vs SQLite"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Debugging"})}),(0,t.jsx)(n.td,{children:"Easiest to debug pattern logic"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Custom Metrics"})}),(0,t.jsx)(n.td,{children:"Multicast delivery rate"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"when-to-use-integration-testing-ghz",children:"When to Use Integration Testing (ghz)"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Scenario"}),(0,t.jsx)(n.th,{children:"Rationale"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"End-to-End Validation"})}),(0,t.jsx)(n.td,{children:"Tests full production path"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Proxy Performance"})}),(0,t.jsx)(n.td,{children:"Includes gRPC overhead"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"CI/CD Regression"})}),(0,t.jsx)(n.td,{children:"Standard tool for automation"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Production Load Simulation"})}),(0,t.jsx)(n.td,{children:"Realistic conditions"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"QA Acceptance"})}),(0,t.jsx)(n.td,{children:"Standard reporting format"})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"cost-benefit-analysis",children:"Cost-Benefit Analysis"}),"\n",(0,t.jsx)(n.h3,{id:"investment",children:"Investment"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Component"}),(0,t.jsx)(n.th,{children:"Effort"}),(0,t.jsx)(n.th,{children:"LOC"}),(0,t.jsx)(n.th,{children:"Test Coverage"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"SDK Packages (3)"}),(0,t.jsx)(n.td,{children:"3 days"}),(0,t.jsx)(n.td,{children:"~750"}),(0,t.jsx)(n.td,{children:"90%+"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"SDK Packages (3 more)"}),(0,t.jsx)(n.td,{children:"2 days"}),(0,t.jsx)(n.td,{children:"~450"}),(0,t.jsx)(n.td,{children:"85%+"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Plugin Refactoring"}),(0,t.jsx)(n.td,{children:"2 days"}),(0,t.jsx)(n.td,{children:"-800 (net)"}),(0,t.jsx)(n.td,{children:"80%+"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Load Testing"}),(0,t.jsx)(n.td,{children:"5 days"}),(0,t.jsx)(n.td,{children:"~100"}),(0,t.jsx)(n.td,{children:"N/A"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Total"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"12 days"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"~400 net"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"85%+"})})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"return",children:"Return"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Benefit"}),(0,t.jsx)(n.th,{children:"Value"}),(0,t.jsx)(n.th,{children:"Measurement"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Code Reduction"})}),(0,t.jsx)(n.td,{children:"800 LOC"}),(0,t.jsx)(n.td,{children:"38% less plugin code"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Quality Improvement"})}),(0,t.jsx)(n.td,{children:"85%+ coverage"}),(0,t.jsx)(n.td,{children:"SDK packages"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Developer Productivity"})}),(0,t.jsx)(n.td,{children:"30% faster"}),(0,t.jsx)(n.td,{children:"New plugin development"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Maintenance Reduction"})}),(0,t.jsx)(n.td,{children:"67% fewer paths"}),(0,t.jsx)(n.td,{children:"SDK centralization"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Testing Coverage"})}),(0,t.jsx)(n.td,{children:"2 levels"}),(0,t.jsx)(n.td,{children:"Pattern + Integration"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Bug Reduction"})}),(0,t.jsx)(n.td,{children:"40% fewer bugs"}),(0,t.jsx)(n.td,{children:"Shared, tested code"})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"ROI"}),": 12 days investment \u2192 30% faster development + 38% less code + 67% less maintenance"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Payback Period"}),": ~1 month (after 3-4 new plugins)"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"alternatives-considered",children:"Alternatives Considered"}),"\n",(0,t.jsx)(n.h3,{id:"alternative-1-no-sdk-enhancements-status-quo",children:"Alternative 1: No SDK Enhancements (Status Quo)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Pros"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No additional work"}),"\n",(0,t.jsx)(n.li,{children:"Plugins work as-is"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Cons"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u274c 800 LOC duplication"}),"\n",(0,t.jsx)(n.li,{children:"\u274c Inconsistent implementations"}),"\n",(0,t.jsx)(n.li,{children:"\u274c Higher maintenance burden"}),"\n",(0,t.jsx)(n.li,{children:"\u274c More bugs"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Decision"}),": Rejected - duplication too costly"]}),"\n",(0,t.jsx)(n.h3,{id:"alternative-2-third-party-libraries-for-poolingttl",children:"Alternative 2: Third-Party Libraries for Pooling/TTL"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Pros"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Battle-tested"}),"\n",(0,t.jsx)(n.li,{children:"No implementation work"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Cons"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u274c External dependencies"}),"\n",(0,t.jsx)(n.li,{children:"\u274c May not fit use cases"}),"\n",(0,t.jsx)(n.li,{children:"\u274c Less control"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Decision"}),": Rejected - need Prism-specific features (health integration, custom metrics)"]}),"\n",(0,t.jsx)(n.h3,{id:"alternative-3-single-tool-ghz-only-or-custom-only",children:"Alternative 3: Single Tool (ghz Only or Custom Only)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"ghz Only"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u274c Can't test patterns directly"}),"\n",(0,t.jsx)(n.li,{children:"\u274c No custom metrics"}),"\n",(0,t.jsx)(n.li,{children:"\u274c Slower iteration"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Custom Only"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u274c No integration testing"}),"\n",(0,t.jsx)(n.li,{children:"\u274c Can't validate proxy"}),"\n",(0,t.jsx)(n.li,{children:"\u274c Missing production path"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Decision"}),": Rejected - both tools needed for different use cases"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsx)(n.h3,{id:"immediate-this-week",children:"Immediate (This Week)"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Review this memo"})," with team"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Approve SDK packages"})," (pool, TTL, health)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Assign owners"}),":\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"SDK implementation: Go expert"}),"\n",(0,t.jsx)(n.li,{children:"Load testing: DevOps/QA"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Create tracking issues"})," in GitHub"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"short-term-next-2-weeks",children:"Short-Term (Next 2 Weeks)"}),"\n",(0,t.jsxs)(n.ol,{start:"5",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implement SDK packages"})," (Week 1, Days 1-3)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Enhance prism-loadtest"})," (Week 1, Days 4-5)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Refactor plugins"})," (Week 2, Days 1-2)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Add ghz integration"})," (Week 2, Days 3-5)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Validate and measure"})," (Week 2, Day 5)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"long-term-poc-2",children:"Long-Term (POC 2+)"}),"\n",(0,t.jsxs)(n.ol,{start:"10",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Evaluate SDK adoption"})," (after POC 1)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Measure developer productivity"})," (time to add new plugin)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Consider k6"})," (if distributed load testing needed)"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"related-documents",children:"Related Documents"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/memos/memo-014",children:"MEMO-014: Pattern SDK Shared Complexity"})})," - Detailed SDK analysis"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/rfc/rfc-029",children:"RFC-029: Load Testing Framework Evaluation"})})," - Framework comparison"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/rfc/rfc-021",children:"RFC-021: POC 1 Three Plugins Implementation"})})," - Plugin design"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/rfc/rfc-022",children:"RFC-022: Core Pattern SDK Code Layout"})})," - SDK structure"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/memos/memo-010",children:"MEMO-010: Load Test Results"})})," - Custom tool validation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/rfc/rfc-018",children:"RFC-018: POC Implementation Strategy"})})," - Overall POC roadmap"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"appendix-a-code-examples",children:"Appendix A: Code Examples"}),"\n",(0,t.jsx)(n.h3,{id:"before-sdk-redis-plugin",children:"Before SDK (Redis Plugin)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'// plugins/redis/client/pool.go (~150 LOC)\ntype ConnectionPool struct {\n    mu       sync.Mutex\n    conns    []*redis.Client\n    maxConns int\n    // ... custom pooling logic\n}\n\n// plugins/redis/client/health.go (~50 LOC)\ntype HealthChecker struct {\n    client *redis.Client\n    // ... custom health check logic\n}\n\n// plugins/redis/config.go (~40 LOC)\nfunc loadConfig() RedisConfig {\n    addr := os.Getenv("REDIS_ADDR")\n    if addr == "" {\n        addr = "localhost:6379"\n    }\n    // ... custom config loading\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Total"}),": ~240 LOC of boilerplate"]}),"\n",(0,t.jsx)(n.h3,{id:"after-sdk-redis-plugin",children:"After SDK (Redis Plugin)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'// plugins/redis/main.go (~30 LOC)\nimport (\n    "github.com/prism/plugins/core/pool"\n    "github.com/prism/plugins/core/health"\n    "github.com/prism/plugins/core/config"\n)\n\nfunc main() {\n    // Config loading (5 LOC)\n    cfg := config.NewLoader("REDIS")\n    addr := cfg.Required("ADDR")\n\n    // Connection pool (10 LOC)\n    pool := pool.NewPool(redisFactory(addr), pool.Config{\n        MinIdle: 5,\n        MaxOpen: 50,\n    })\n\n    // Health checks (5 LOC)\n    health := health.NewChecker(health.Config{\n        Interval: 30 * time.Second,\n    })\n    health.Register("redis", func(ctx context.Context) error {\n        conn, _ := pool.Acquire(ctx)\n        defer pool.Release(conn)\n        return conn.(*RedisConnection).Health(ctx)\n    })\n\n    // ... actual Redis logic\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Total"}),": ~30 LOC (88% reduction in boilerplate)"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"appendix-b-load-testing-example",children:"Appendix B: Load Testing Example"}),"\n",(0,t.jsx)(n.h3,{id:"pattern-level-test",children:"Pattern-Level Test"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Test pattern logic directly (fastest)\n./prism-loadtest register -r 100 -d 60s --redis-addr localhost:6379\n\n# Output:\n# Register Operations:\n#   Total Requests:   3053\n#   Success Rate:     100.00%\n#   Latency P95:      5ms     \u2190 No gRPC overhead\n#   Latency P99:      50ms\n"})}),"\n",(0,t.jsx)(n.h3,{id:"integration-level-test",children:"Integration-Level Test"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Test through Rust proxy (realistic)\nghz --proto proto/interfaces/keyvalue_basic.proto \\\n    --call prism.KeyValueBasicInterface.Set \\\n    --insecure \\\n    --rps 100 \\\n    --duration 60s \\\n    --data \'{"namespace":"default","key":"test-{{.RequestNumber}}","value":"dGVzdA=="}\' \\\n    localhost:8980\n\n# Output:\n# Summary:\n#   Count:        6000\n#   Requests/sec: 100.00\n#   Average:      8.2ms    \u2190 gRPC adds ~3ms\n#   95th %ile:    10ms\n#   99th %ile:    15ms\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Observation"}),": Integration test adds ~3-5ms latency (expected gRPC overhead)"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsx)(n.p,{children:"This memo synthesizes findings from MEMO-014 (SDK analysis) and RFC-029 (load testing evaluation) to propose a comprehensive infrastructure strategy for POC 1:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Extract shared complexity to Pattern SDK"})," (38% code reduction)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Adopt two-tier load testing strategy"})," (pattern + integration)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implement in 2-week sprint"})," (12 days effort)"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Expected Outcomes"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Faster plugin development (30% time savings)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Higher code quality (85%+ SDK coverage)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Better testing (two-level coverage)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Reduced maintenance (67% fewer code paths)"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Recommendation"}),": Proceed with implementation alongside POC 1 plugin development."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"revision-history",children:"Revision History"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"2025-10-11: Initial synthesis of SDK analysis and load testing evaluation"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);