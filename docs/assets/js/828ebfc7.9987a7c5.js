"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[4094],{28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var t=r(96540);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}},70667:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"adr-048","title":"Local Signoz Instance for Observability Testing","description":"Status","source":"@site/../docs-cms/adr/adr-048-local-signoz-observability.md","sourceDirName":".","slug":"/adr-048","permalink":"/prism-data-layer/adr/adr-048","draft":false,"unlisted":false,"editUrl":"https://github.com/jrepp/prism-data-layer/tree/main/docs-cms/../docs-cms/adr/adr-048-local-signoz-observability.md","tags":[{"inline":true,"label":"observability","permalink":"/prism-data-layer/adr/tags/observability"},{"inline":true,"label":"testing","permalink":"/prism-data-layer/adr/tags/testing"},{"inline":true,"label":"local-development","permalink":"/prism-data-layer/adr/tags/local-development"},{"inline":true,"label":"opentelemetry","permalink":"/prism-data-layer/adr/tags/opentelemetry"},{"inline":true,"label":"signoz","permalink":"/prism-data-layer/adr/tags/signoz"}],"version":"current","frontMatter":{"date":"2025-10-09T00:00:00.000Z","deciders":"Platform Team","doc_uuid":"117474f6-d253-4b91-a96f-298f750e9fd3","id":"adr-048","project_id":"prism-data-layer","status":"Accepted","tags":["observability","testing","local-development","opentelemetry","signoz"],"title":"Local Signoz Instance for Observability Testing"},"sidebar":"adrSidebar","previous":{"title":"OpenTelemetry Tracing Integration \u2022 ADR-047","permalink":"/prism-data-layer/adr/adr-047"},"next":{"title":"Podman and Container Optimization for Instant Testing \u2022 ADR-049","permalink":"/prism-data-layer/adr/adr-049"}}');var i=r(74848),s=r(28453);const o={date:new Date("2025-10-09T00:00:00.000Z"),deciders:"Platform Team",doc_uuid:"117474f6-d253-4b91-a96f-298f750e9fd3",id:"adr-048",project_id:"prism-data-layer",status:"Accepted",tags:["observability","testing","local-development","opentelemetry","signoz"],title:"Local Signoz Instance for Observability Testing"},l="ADR-048: Local Signoz Instance for Observability Testing",c={},a=[{value:"Status",id:"status",level:2},{value:"Context",id:"context",level:2},{value:"Problem Statement",id:"problem-statement",level:3},{value:"Why Signoz?",id:"why-signoz",level:3}];function d(e){const n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",tracer:"tracer",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"adr-048-local-signoz-instance-for-observability-testing",children:"ADR-048: Local Signoz Instance for Observability Testing"})}),"\n",(0,i.jsx)(n.h2,{id:"status",children:"Status"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Accepted"})," - 2025-10-09"]}),"\n",(0,i.jsx)(n.h2,{id:"context",children:"Context"}),"\n",(0,i.jsx)(n.h3,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,i.jsx)(n.p,{children:"Developers need comprehensive observability during local development and testing:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Traces"}),": See request flows through proxy \u2192 plugin \u2192 backend"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Metrics"}),": Monitor latency, throughput, error rates"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Logs"}),": Correlate structured logs with traces"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"OpenTelemetry"}),": Native OTLP support for Prism instrumentation"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Current Situation:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"No local observability stack"}),"\n",(0,i.jsx)(n.li,{children:"Developers rely on console logs and printf debugging"}),"\n",(0,i.jsx)(n.li,{children:"Hard to debug distributed systems issues (proxy + plugins + backends)"}),"\n",(0,i.jsx)(n.li,{children:"No way to validate OpenTelemetry instrumentation before production"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Requirements:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Full OpenTelemetry stack (traces, metrics, logs)"}),"\n",(0,i.jsx)(n.li,{children:"Runs independently from other local infrastructure"}),"\n",(0,i.jsx)(n.li,{children:"Minimal resource footprint (< 2GB RAM)"}),"\n",(0,i.jsx)(n.li,{children:"Fast startup (< 30 seconds)"}),"\n",(0,i.jsx)(n.li,{children:"Pre-configured for Prism components"}),"\n",(0,i.jsx)(n.li,{children:"Persist data across restarts"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"why-signoz",children:"Why Signoz?"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Evaluated Options:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Jaeger (traces only)"}),"\n",(0,i.jsx)(n.li,{children:"Prometheus + Grafana (metrics + visualization, complex setup)"}),"\n",(0,i.jsx)(n.li,{children:"Elastic Stack (heavy, 4GB+ RAM)"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Signoz"})," (all-in-one OpenTelemetry platform)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Signoz Advantages:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u2705 Native OpenTelemetry: OTLP gRPC/HTTP receivers built-in"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 All-in-one: Traces, metrics, logs in single UI"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Lightweight: ~1.5GB RAM with ClickHouse backend"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Fast queries: ClickHouse columnar storage"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 APM features: Service maps, dependency graphs, alerts"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Open source: Apache 2.0 license"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Docker Compose: Pre-built stack available"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Comparison:"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Feature"}),(0,i.jsx)(n.th,{children:"Signoz"}),(0,i.jsx)(n.th,{children:"Jaeger"}),(0,i.jsx)(n.th,{children:"Prometheus + Grafana"}),(0,i.jsx)(n.th,{children:"Elastic Stack"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Traces"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Metrics"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Logs"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u274c (via Loki)"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"OpenTelemetry Native"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u26a0\ufe0f (via collector)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Resource Usage"}),(0,i.jsx)(n.td,{children:"~1.5GB"}),(0,i.jsx)(n.td,{children:"~500MB"}),(0,i.jsx)(n.td,{children:"~2GB"}),(0,i.jsx)(n.td,{children:"~4GB"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Setup Complexity"}),(0,i.jsx)(n.td,{children:"Low"}),(0,i.jsx)(n.td,{children:"Low"}),(0,i.jsx)(n.td,{children:"Medium"}),(0,i.jsx)(n.td,{children:"High"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Query Performance"}),(0,i.jsx)(n.td,{children:"Fast (ClickHouse)"}),(0,i.jsx)(n.td,{children:"Medium"}),(0,i.jsx)(n.td,{children:"Fast (Prometheus)"}),(0,i.jsx)(n.td,{children:"Medium"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"APM Features"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u26a0\ufe0f Basic"}),(0,i.jsx)(n.td,{children:"\u26a0\ufe0f Manual"}),(0,i.jsx)(n.td,{children:"\u2705"})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Signoz Architecture:"}),"\nSignoz Components:\n\u251c\u2500\u2500 OTLP Receiver (gRPC :4317, HTTP :4318)\n\u251c\u2500\u2500 Query Service (API + UI :3301)\n\u251c\u2500\u2500 ClickHouse (storage :9000)\n\u2514\u2500\u2500 AlertManager (optional)"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"\n## Decision\n\n**We will provide a local Signoz instance as part of the development support tooling.**\n\n### Key Decisions\n\n1. **Signoz as Standard Observability Platform**\n   - Use Signoz for local development observability\n   - Pre-configured for Prism proxy, plugins, and backends\n   - Standardize on OpenTelemetry for all instrumentation\n\n2. **Independent Docker Compose Stack**\n   - Separate `docker-compose.signoz.yml` file\n   - Not bundled with backend testing compose files\n   - Can run independently or alongside other stacks\n   - Uses dedicated Docker network with bridge to Prism\n\n3. **Pre-configured Services**\n   - Prism proxy: Auto-configured OTLP endpoint\n   - Backend plugins: Environment variables for OTLP\n   - Admin service: Traces and metrics enabled\n   - Example applications: Sample instrumentation\n\n4. **Data Persistence**\n   - Volume mounts for ClickHouse data\n   - Survives container restarts\n   - Optional: Reset script to clear all data\n\n5. **Resource Management**\n   - Memory limit: 2GB total (1.5GB ClickHouse + 500MB services)\n   - CPU limit: 2 cores\n   - Port conflicts avoided (custom port range)\n\n## Implementation Details\n\n### Docker Compose Configuration\n\nLocation: `local-dev/signoz/docker-compose.signoz.yml`\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"version: '3.8'"}),"\n",(0,i.jsx)(n.p,{children:"services:"}),"\n",(0,i.jsx)(n.h1,{id:"clickhouse-database-for-storing-telemetry-data",children:"ClickHouse database for storing telemetry data"}),"\n",(0,i.jsx)(n.p,{children:'clickhouse:\nimage: clickhouse/clickhouse-server:23.7-alpine\ncontainer_name: prism-signoz-clickhouse\nvolumes:\n- signoz-clickhouse-data:/var/lib/clickhouse\n- ./clickhouse-config.xml:/etc/clickhouse-server/config.d/logging.xml:ro\nenvironment:\n- CLICKHOUSE_DB=signoz\nports:\n- "9001:9000"  # Avoid conflict with MinIO (9000)\n- "8124:8123"  # HTTP interface\nmem_limit: 1.5g\ncpus: 1.5\nnetworks:\n- signoz\nhealthcheck:\ntest: ["CMD", "wget", "-q", "-O-", "http://localhost:8123/ping"]\ninterval: 10s\ntimeout: 5s\nretries: 3'}),"\n",(0,i.jsx)(n.h1,{id:"signoz-query-service-api--ui",children:"Signoz Query Service (API + UI)"}),"\n",(0,i.jsx)(n.p,{children:'query-service:\nimage: signoz/query-service:0.39.0\ncontainer_name: prism-signoz-query\ncommand: ["-config=/root/config/prometheus.yml"]\nvolumes:\n- ./signoz-config.yaml:/root/config/prometheus.yml\nenvironment:\n- ClickHouseUrl=tcp://clickhouse:9000\n- STORAGE=clickhouse\nports:\n- "3301:8080"  # Query Service API + UI\ndepends_on:\nclickhouse:\ncondition: service_healthy\nmem_limit: 256m\ncpus: 0.5\nnetworks:\n- signoz\nhealthcheck:\ntest: ["CMD", "wget", "-q", "-O-", "http://localhost:8080/api/v1/health"]\ninterval: 10s\ntimeout: 5s\nretries: 3'}),"\n",(0,i.jsx)(n.h1,{id:"opentelemetry-collector-otlp-receiver",children:"OpenTelemetry Collector (OTLP receiver)"}),"\n",(0,i.jsx)(n.p,{children:'otel-collector:\nimage: signoz/signoz-otel-collector:0.79.9\ncontainer_name: prism-signoz-otel\ncommand: ["--config=/etc/otel-collector-config.yaml"]\nvolumes:\n- ./otel-collector-config.yaml:/etc/otel-collector-config.yaml\nenvironment:\n- CLICKHOUSE_URL=clickhouse:9000\nports:\n- "4317:4317"  # OTLP gRPC receiver\n- "4318:4318"  # OTLP HTTP receiver\ndepends_on:\nclickhouse:\ncondition: service_healthy\nmem_limit: 256m\ncpus: 0.5\nnetworks:\n- signoz\n- prism  # Bridge to Prism components\nhealthcheck:\ntest: ["CMD", "wget", "-q", "-O-", "http://localhost:13133/"]\ninterval: 10s\ntimeout: 5s\nretries: 3'}),"\n",(0,i.jsx)(n.h1,{id:"alertmanager-optional-for-local-alert-testing",children:"AlertManager (optional, for local alert testing)"}),"\n",(0,i.jsx)(n.p,{children:'alertmanager:\nimage: signoz/alertmanager:0.23.4\ncontainer_name: prism-signoz-alertmanager\nvolumes:\n- ./alertmanager-config.yaml:/etc/alertmanager/alertmanager.yml\nports:\n- "9093:9093"\nmem_limit: 128m\ncpus: 0.25\nnetworks:\n- signoz'}),"\n",(0,i.jsx)(n.p,{children:"volumes:\nsignoz-clickhouse-data:\ndriver: local"}),"\n",(0,i.jsx)(n.p,{children:"networks:\nsignoz:\ndriver: bridge\nprism:\nexternal: true  # Connect to Prism components"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"\n### OpenTelemetry Collector Configuration\n\nLocation: `local-dev/signoz/otel-collector-config.yaml`\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:['receivers:\notlp:\nprotocols:\ngrpc:\nendpoint: 0.0.0.0:4317\nhttp:\nendpoint: 0.0.0.0:4318\ncors:\nallowed_origins:\n- "',(0,i.jsx)(n.a,{href:"http://localhost",children:"http://localhost"}),":",(0,i.jsxs)(n.em,{children:['"\n- "',(0,i.jsx)(n.a,{href:"http://127.0.0.1",children:"http://127.0.0.1"}),":"]}),'"']}),"\n",(0,i.jsx)(n.p,{children:"processors:\nbatch:\ntimeout: 1s\nsend_batch_size: 1024"}),"\n",(0,i.jsx)(n.h1,{id:"add-resource-attributes-for-prism-components",children:"Add resource attributes for Prism components"}),"\n",(0,i.jsx)(n.p,{children:'resource:\nattributes:\n- key: deployment.environment\nvalue: "local"\naction: upsert\n- key: service.namespace\nvalue: "prism"\naction: upsert'}),"\n",(0,i.jsx)(n.h1,{id:"memory-limiter-to-prevent-oom",children:"Memory limiter to prevent OOM"}),"\n",(0,i.jsx)(n.p,{children:"memory_limiter:\ncheck_interval: 5s\nlimit_mib: 256\nspike_limit_mib: 64"}),"\n",(0,i.jsx)(n.p,{children:"exporters:\nclickhouse:\nendpoint: tcp://clickhouse:9000?database=signoz\nttl: 72h  # Keep data for 3 days in local dev"}),"\n",(0,i.jsx)(n.h1,{id:"debug-exporter-for-troubleshooting",children:"Debug exporter for troubleshooting"}),"\n",(0,i.jsx)(n.p,{children:"logging:\nloglevel: info\nsampling_initial: 5\nsampling_thereafter: 200"}),"\n",(0,i.jsx)(n.p,{children:"service:\npipelines:\ntraces:\nreceivers: [otlp]\nprocessors: [memory_limiter, resource, batch]\nexporters: [clickhouse]"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"metrics:\n  receivers: [otlp]\n  processors: [memory_limiter, resource, batch]\n  exporters: [clickhouse]\n\nlogs:\n  receivers: [otlp]\n  processors: [memory_limiter, resource, batch]\n  exporters: [clickhouse]\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"\n### Prism Proxy Integration\n\nThe proxy automatically detects and uses Signoz when available:\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"// proxy/src/observability/tracer.rs"}),"\n",(0,i.jsxs)(n.p,{children:["pub fn init_tracer(config: &ObservabilityConfig) -> Result",(0,i.jsx)(n.tracer,{children:' {\n// Check for Signoz OTLP endpoint\nlet otlp_endpoint = env::var("OTEL_EXPORTER_OTLP_ENDPOINT")\n.unwrap_or_else(|_| "http://".to_string() + "localhost:4317");'})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'let tracer = opentelemetry_otlp::new_pipeline()\n    .tracing()\n    .with_exporter(\n        opentelemetry_otlp::new_exporter()\n            .tonic()\n            .with_endpoint(otlp_endpoint)\n    )\n    .with_trace_config(\n        trace::config()\n            .with_resource(Resource::new(vec![\n                KeyValue::new("service.name", "prism-proxy"),\n                KeyValue::new("service.version", env!("CARGO_PKG_VERSION")),\n                KeyValue::new("deployment.environment", "local"),\n            ]))\n    )\n    .install_batch(opentelemetry::runtime::Tokio)?;\n\nOk(tracer)\n'})}),"\n",(0,i.jsx)(n.p,{children:"}"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"\n### Plugin Integration\n\nPlugins receive OTLP configuration via environment variables:\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"// plugins/core/observability/tracer.go"}),"\n",(0,i.jsx)(n.p,{children:'func InitTracer(serviceName string) error {\n// Reads OTEL_EXPORTER_OTLP_ENDPOINT from environment\nexporter, err := otlptracegrpc.New(\ncontext.Background(),\notlptracegrpc.WithInsecure(),\notlptracegrpc.WithEndpoint(os.Getenv("OTEL_EXPORTER_OTLP_ENDPOINT")),\n)\nif err != nil {\nreturn err\n}'}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'tp := sdktrace.NewTracerProvider(\n    sdktrace.WithBatcher(exporter),\n    sdktrace.WithResource(resource.NewWithAttributes(\n        semconv.SchemaURL,\n        semconv.ServiceName(serviceName),\n        semconv.DeploymentEnvironment("local"),\n    )),\n)\n\notel.SetTracerProvider(tp)\nreturn nil\n'})}),"\n",(0,i.jsx)(n.p,{children:"}"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"\n## Usage\n\n### Starting Signoz\n\n"})}),"\n",(0,i.jsx)(n.h1,{id:"start-signoz-stack",children:"Start Signoz stack"}),"\n",(0,i.jsx)(n.p,{children:"cd local-dev/signoz\ndocker-compose -f docker-compose.signoz.yml up -d"}),"\n",(0,i.jsx)(n.h1,{id:"wait-for-healthy-state",children:"Wait for healthy state"}),"\n",(0,i.jsx)(n.p,{children:"docker-compose -f docker-compose.signoz.yml ps"}),"\n",(0,i.jsx)(n.h1,{id:"access-ui",children:"Access UI"}),"\n",(0,i.jsxs)(n.p,{children:["open ",(0,i.jsx)(n.a,{href:"http://localhost:3301",children:"http://localhost:3301"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"\n### Starting Prism with Signoz\n\n"})}),"\n",(0,i.jsx)(n.h1,{id:"set-otlp-endpoint-environment-variable",children:"Set OTLP endpoint environment variable"}),"\n",(0,i.jsxs)(n.p,{children:["export OTEL_EXPORTER_OTLP_ENDPOINT=",(0,i.jsx)(n.a,{href:"http://localhost:4317",children:"http://localhost:4317"})]}),"\n",(0,i.jsx)(n.h1,{id:"start-prism-proxy",children:"Start Prism proxy"}),"\n",(0,i.jsx)(n.p,{children:"cd proxy\ncargo run --release"}),"\n",(0,i.jsx)(n.h1,{id:"start-plugin-with-otlp",children:"Start plugin with OTLP"}),"\n",(0,i.jsxs)(n.p,{children:["cd plugins/postgres\nOTEL_EXPORTER_OTLP_ENDPOINT=",(0,i.jsx)(n.a,{href:"http://localhost:4317",children:"http://localhost:4317"})," ",(0,i.jsx)(n.br,{}),"\ngo run ./cmd/server"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:'\n### Viewing Traces\n\n1. Open Signoz UI: http://localhost:3301\n2. Navigate to "Traces" tab\n3. Filter by service: `prism-proxy`, `prism-plugin-postgres`\n4. Click trace to see full waterfall\n\n### Resetting Data\n\n'})}),"\n",(0,i.jsx)(n.h1,{id:"stop-and-remove-volumes",children:"Stop and remove volumes"}),"\n",(0,i.jsx)(n.p,{children:"docker-compose -f docker-compose.signoz.yml down -v"}),"\n",(0,i.jsx)(n.h1,{id:"restart-fresh",children:"Restart fresh"}),"\n",(0,i.jsx)(n.p,{children:"docker-compose -f docker-compose.signoz.yml up -d"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"\n## Consequences\n\n### Positive\n\n1. **Comprehensive Observability**\n   - Full visibility into distributed request flows\n   - Correlate traces, metrics, and logs\n   - Service dependency mapping\n\n2. **Developer Productivity**\n   - Faster debugging with trace waterfalls\n   - Identify performance bottlenecks\n   - Validate instrumentation locally\n\n3. **Production Parity**\n   - Same OpenTelemetry instrumentation local and production\n   - Catch telemetry issues before deployment\n   - Test alerting rules locally\n\n4. **Low Friction**\n   - Single command to start (`docker-compose up`)\n   - Auto-discovery by Prism components\n   - Pre-configured, zero setup\n\n5. **Resource Efficient**\n   - ~1.5GB RAM total\n   - Fast queries with ClickHouse\n   - Optional: disable when not needed\n\n### Negative\n\n1. **Additional Service to Manage**\n   - One more Docker Compose stack\n   - Requires keeping Signoz updated\n   - Potential port conflicts (mitigated by custom ports)\n\n2. **Learning Curve**\n   - Developers need to understand Signoz UI\n   - Query language for advanced filtering\n   - Trace correlation concepts\n\n3. **Data Cleanup**\n   - ClickHouse data accumulates over time\n   - Manual cleanup required (or automated scripts)\n\n4. **Not a Full Production Solution**\n   - Local instance for development only\n   - Production needs scalable Signoz deployment\n   - Different configuration for production\n\n### Mitigation Strategies\n\n1. **Documentation**: Comprehensive RFC-016 for setup and usage\n2. **Scripts**: Automated start/stop/reset scripts\n3. **Resource Limits**: Docker memory/CPU limits to prevent resource exhaustion\n4. **Default Off**: Developers opt-in when needed (not running by default)\n\n## Related Decisions\n\n- [ADR-047: OpenTelemetry Tracing Integration](/adr/adr-047)\n- [ADR-046: Dex IDP for Local Identity Testing](/adr/adr-046)\n- [RFC-016: Local Development Infrastructure](/rfc/rfc-016-local-development-infrastructure) (this ADR's implementation guide)\n- [RFC-008: Proxy Plugin Architecture](/rfc/rfc-008-proxy-plugin-architecture) (instrumentation points)\n\n## References\n\n- [Signoz Documentation](https://signoz.io/docs/)\n- [OpenTelemetry Collector](https://opentelemetry.io/docs/collector/)\n- [ClickHouse](https://clickhouse.com/)\n- [OTLP Protocol Specification](https://opentelemetry.io/docs/specs/otlp/)\n\n## Revision History\n\n- 2025-10-09: Initial decision for local Signoz instance\n\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);