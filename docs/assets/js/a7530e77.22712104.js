"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[1220],{28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var s=i(96540);const t={},r=s.createContext(t);function a(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:n},e.children)}},45395:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"memo-002","title":"Admin Protocol Security Review and Improvements","description":"Purpose","source":"@site/../docs-cms/memos/memo-002-admin-protocol-review.md","sourceDirName":".","slug":"/memo-002","permalink":"/prism-data-layer/memos/memo-002","draft":false,"unlisted":false,"editUrl":"https://github.com/jrepp/prism-data-layer/tree/main/docs-cms/../docs-cms/memos/memo-002-admin-protocol-review.md","tags":[{"inline":true,"label":"security","permalink":"/prism-data-layer/memos/tags/security"},{"inline":true,"label":"admin","permalink":"/prism-data-layer/memos/tags/admin"},{"inline":true,"label":"protocol","permalink":"/prism-data-layer/memos/tags/protocol"},{"inline":true,"label":"grpc","permalink":"/prism-data-layer/memos/tags/grpc"},{"inline":true,"label":"improvements","permalink":"/prism-data-layer/memos/tags/improvements"}],"version":"current","frontMatter":{"author":"Platform Team","created":"2025-10-09T00:00:00.000Z","doc_uuid":"b10ecd0b-e765-4bd5-aa76-c063193e75f9","id":"memo-002","project_id":"prism-data-layer","tags":["security","admin","protocol","grpc","improvements"],"title":"Admin Protocol Security Review and Improvements","updated":"2025-10-09T00:00:00.000Z"},"sidebar":"memosSidebar","previous":{"title":"WAL Full Transaction Flow with Authorization and Session Management \u2022 MEMO-001","permalink":"/prism-data-layer/memos/memo-001"},"next":{"title":"Documentation-First Development Approach \u2022 MEMO-003","permalink":"/prism-data-layer/memos/memo-003"}}');var t=i(74848),r=i(28453);const a={author:"Platform Team",created:new Date("2025-10-09T00:00:00.000Z"),doc_uuid:"b10ecd0b-e765-4bd5-aa76-c063193e75f9",id:"memo-002",project_id:"prism-data-layer",tags:["security","admin","protocol","grpc","improvements"],title:"Admin Protocol Security Review and Improvements",updated:new Date("2025-10-09T00:00:00.000Z")},o="MEMO-002: Admin Protocol Security Review and Improvements",l={},d=[{value:"Purpose",id:"purpose",level:2},{value:"Status Update (2025-10-09)",id:"status-update-2025-10-09",level:2},{value:"Implementation History",id:"implementation-history",level:3},{value:"Recommendations Status",id:"recommendations-status",level:3},{value:"Summary",id:"summary",level:3},{value:"Executive Summary",id:"executive-summary",level:2},{value:"Security Analysis",id:"security-analysis",level:2},{value:"1. Authentication (\u2705 Strong)",id:"1-authentication--strong",level:3},{value:"2. Authorization (\u26a0\ufe0f Needs Improvement)",id:"2-authorization-\ufe0f-needs-improvement",level:3},{value:"3. Audit Logging (\u26a0\ufe0f Needs Improvement)",id:"3-audit-logging-\ufe0f-needs-improvement",level:3},{value:"4. Rate Limiting (\u26a0\ufe0f Needs Improvement)",id:"4-rate-limiting-\ufe0f-needs-improvement",level:3},{value:"5. Input Validation (\u26a0\ufe0f Missing)",id:"5-input-validation-\ufe0f-missing",level:3},{value:"6. API Versioning (\u274c Missing)",id:"6-api-versioning--missing",level:3},{value:"7. Request Signing (\u274c Missing)",id:"7-request-signing--missing",level:3},{value:"Simplification Recommendations",id:"simplification-recommendations",level:2},{value:"1. Consolidate Session Operations",id:"1-consolidate-session-operations",level:3},{value:"2. Unify Config Operations",id:"2-unify-config-operations",level:3},{value:"3. Standardize Pagination",id:"3-standardize-pagination",level:3},{value:"Long-Term Extensibility",id:"long-term-extensibility",level:2},{value:"1. Batch Operations",id:"1-batch-operations",level:3},{value:"2. Watch/Subscribe for Real-Time Updates",id:"2-watchsubscribe-for-real-time-updates",level:3},{value:"3. Query Language for Complex Filters",id:"3-query-language-for-complex-filters",level:3},{value:"Implementation Priority",id:"implementation-priority",level:2},{value:"Phase 1: Security Hardening (Week 1-2)",id:"phase-1-security-hardening-week-1-2",level:3},{value:"Phase 2: Simplifications (Week 3)",id:"phase-2-simplifications-week-3",level:3},{value:"Phase 3: Extensibility (Week 4-5)",id:"phase-3-extensibility-week-4-5",level:3},{value:"Phase 4: Advanced (Future)",id:"phase-4-advanced-future",level:3},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"memo-002-admin-protocol-security-review-and-improvements",children:"MEMO-002: Admin Protocol Security Review and Improvements"})}),"\n",(0,t.jsx)(n.h2,{id:"purpose",children:"Purpose"}),"\n",(0,t.jsx)(n.p,{children:"Comprehensive security and design review of RFC-010 (Admin Protocol with OIDC) to identify improvements, simplifications, and long-term extensibility concerns."}),"\n",(0,t.jsx)(n.h2,{id:"status-update-2025-10-09",children:"Status Update (2025-10-09)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"\u2705 RECOMMENDATIONS IMPLEMENTED"}),": All key recommendations from this security review have been incorporated into current RFCs and ADRs through the following commits:"]}),"\n",(0,t.jsx)(n.h3,{id:"implementation-history",children:"Implementation History"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsxs)(n.strong,{children:["Commit ",(0,t.jsx)(n.a,{href:"https://github.com/jrepp/prism-data-layer/commit/d6fb2b1",children:"d6fb2b1"}),' - "Add comprehensive documentation updates and new RFC-014"']})," (2025-10-09 10:30 AM)"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Expanded RFC-010 open questions with multi-provider OIDC support (AWS Cognito, Azure AD, Google, Okta, Auth0, Dex)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Added token caching strategies (24h default with JWKS caching and refresh token support)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Added offline access validation with cached JWKS and security trade-offs"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Added multi-tenancy mapping options (group-based, claim-based, OPA policy, tenant-scoped)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Added service account approaches with comparison table and best practices"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsxs)(n.strong,{children:["Commit ",(0,t.jsx)(n.a,{href:"https://github.com/jrepp/prism-data-layer/commit/e50feb3",children:"e50feb3"}),' - "Add documentation-first memo, expand auth RFCs"']})," (2025-10-09 12:17 PM)"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Expanded RFC-011 with comprehensive secrets provider abstraction (Vault, AWS Secrets Manager, Google Secret Manager, Azure Key Vault)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Added credential management with automatic caching and renewal"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Added provider comparison matrix (dynamic credentials, auto-rotation, versioning, audit logging, cost)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Created ADR-046 for Dex IDP as local OIDC provider for testing"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Added complete OIDC authentication section to RFC-006 with device code flow and token management"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"recommendations-status",children:"Recommendations Status"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Resource-Level Authorization"}),": RFC-010 now includes namespace ownership, tagging, and ABAC policies"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Enhanced Audit Logging"}),": Tamper-evident logging with chain hashing, signatures, and trace ID correlation documented in RFC-010"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"API Versioning"}),": Version negotiation endpoint and backward compatibility strategy added to RFC-010"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Adaptive Rate Limiting"}),": Different quotas for read/write/expensive operations with burst handling documented in RFC-010"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Input Validation"}),": Protobuf validation rules (protoc-gen-validate) added to RFC-010 with examples"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Session Management"}),": Comprehensive open questions section in RFC-010 with multi-provider support, token caching, offline validation, and multi-tenancy mapping options"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"summary",children:"Summary"}),"\n",(0,t.jsxs)(n.p,{children:["This memo now serves as a ",(0,t.jsx)(n.strong,{children:"historical record"})," of the security review process (conducted 2025-10-09 00:31 AM) that led to these improvements. All recommendations have been incorporated into RFC-010 (Admin Protocol with OIDC), RFC-011 (Data Proxy Authentication), RFC-006 (Python Admin CLI), and ADR-046 (Dex IDP for Local Testing) through commits made later the same day."]}),"\n",(0,t.jsx)(n.h2,{id:"executive-summary",children:"Executive Summary"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security Status"}),": Generally solid OIDC-based authentication with room for improvement in authorization granularity, rate limiting, and audit trail completeness."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Key Recommendations"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Add request-level resource authorization (not just method-level)"}),"\n",(0,t.jsx)(n.li,{children:"Implement structured audit logging with tamper-evident storage"}),"\n",(0,t.jsx)(n.li,{children:"Add API versioning to support long-term evolution"}),"\n",(0,t.jsx)(n.li,{children:"Simplify session management (remove ambiguity)"}),"\n",(0,t.jsx)(n.li,{children:"Add request signing for critical operations"}),"\n",(0,t.jsx)(n.li,{children:"Implement comprehensive input validation"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"security-analysis",children:"Security Analysis"}),"\n",(0,t.jsx)(n.h3,{id:"1-authentication--strong",children:"1. Authentication (\u2705 Strong)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Current State"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"OIDC with JWT validation"}),"\n",(0,t.jsx)(n.li,{children:"Device code flow for CLI"}),"\n",(0,t.jsx)(n.li,{children:"Public key validation via JWKS"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Issues"}),": None critical"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Recommendations"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-diff",children:"+ Add JWT revocation checking (check against revocation list)\n+ Add token binding to prevent token theft\n+ Implement short-lived JWTs (5-15 min) with refresh tokens\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Improvement"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"pub struct JwtValidator {\n    issuer: String,\n    audience: String,\n    jwks_client: JwksClient,\n+   revocation_checker: Arc<RevocationChecker>,  // NEW\n+   max_token_age: Duration,                     // NEW\n}\n\nimpl JwtValidator {\n    pub async fn validate_token(&self, token: &str) -> Result<Claims> {\n        let token_data = decode::<Claims>(token, &decoding_key, &validation)?;\n\n+       // Check revocation list\n+       if self.revocation_checker.is_revoked(&token_data.claims.jti).await? {\n+           return Err(Error::TokenRevoked);\n+       }\n+\n+       // Enforce max token age\n+       let token_age = Utc::now().timestamp() - token_data.claims.iat as i64;\n+       if token_age > self.max_token_age.as_secs() as i64 {\n+           return Err(Error::TokenTooOld);\n+       }\n\n        Ok(token_data.claims)\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-authorization-\ufe0f-needs-improvement",children:"2. Authorization (\u26a0\ufe0f Needs Improvement)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Current State"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Method-level RBAC (e.g., ",(0,t.jsx)(n.code,{children:"admin:write"})," for CreateNamespace)"]}),"\n",(0,t.jsx)(n.li,{children:"Three roles: admin, operator, viewer"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Issues"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"No resource-level authorization"}),": User with ",(0,t.jsx)(n.code,{children:"admin:write"})," can modify ANY namespace"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"No attribute-based access control (ABAC)"}),": Can't restrict by namespace owner, tags, etc."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Coarse-grained permissions"}),": Can't delegate specific operations"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Improvement"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-protobuf",children:'// Add resource-level authorization to requests\nmessage CreateNamespaceRequest {\n  string name = 1;\n  string description = 2;\n\n  // NEW: Resource ownership and tagging\n  string owner = 3;         // User/team that owns this namespace\n  repeated string tags = 4;  // For ABAC policies (e.g., "prod", "staging")\n  map<string, string> labels = 5;  // Key-value metadata\n}\n\n// Authorization check becomes:\n// 1. Does user have admin:write permission?\n// 2. Is user allowed to create namespaces with owner=X?\n// 3. Is user allowed to create namespaces with tags=[prod]?\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"RBAC Policy Enhancement"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"roles:\n  namespace-admin:\n    description: Can manage namespaces they own\n    permissions:\n      - admin:read\n      - admin:write:namespace:owned  # NEW: Scoped permission\n\n  team-lead:\n    description: Can manage team's namespaces\n    permissions:\n      - admin:read\n      - admin:write:namespace:team:*  # NEW: Wildcard for team namespaces\n\npolicies:\n  - name: namespace-ownership\n    effect: allow\n    principals:\n      - role:namespace-admin\n    actions:\n      - CreateNamespace\n      - UpdateNamespace\n      - DeleteNamespace\n    resources:\n      - namespace:${claims.email}/*  # Can only manage own namespaces\n\n  - name: production-lockdown\n    effect: deny\n    principals:\n      - role:developer\n    actions:\n      - DeleteNamespace\n    resources:\n      - namespace:*/tags:prod  # Cannot delete prod namespaces\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-audit-logging-\ufe0f-needs-improvement",children:"3. Audit Logging (\u26a0\ufe0f Needs Improvement)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Current State"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Basic audit log with actor, operation, resource"}),"\n",(0,t.jsx)(n.li,{children:"Stored in Postgres"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Issues"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Not tamper-evident"}),": Admin with DB access can modify audit log"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"No log signing"}),": Can't verify log integrity"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Missing context"}),": No client IP, user agent, request ID correlation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"No retention policy"}),": Logs could grow unbounded"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Improvement"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"#[derive(Debug, Serialize)]\npub struct AuditLogEntry {\n    pub id: Uuid,\n    pub timestamp: DateTime<Utc>,\n\n    // Identity\n    pub actor: String,\n    pub actor_groups: Vec<String>,\n+   pub actor_ip: IpAddr,           // NEW\n+   pub user_agent: Option<String>,  // NEW\n\n    // Operation\n    pub operation: String,\n    pub resource_type: String,\n    pub resource_id: String,\n    pub namespace: Option<String>,\n    pub request_id: Option<String>,\n+   pub trace_id: Option<String>,   // NEW: OpenTelemetry trace ID\n\n    // Result\n    pub success: bool,\n    pub error: Option<String>,\n+   pub duration_ms: u64,           // NEW\n+   pub status_code: u32,           // NEW: gRPC status code\n\n    // Security\n    pub metadata: serde_json::Value,\n+   pub signature: String,          // NEW: HMAC signature\n+   pub chain_hash: String,         // NEW: Hash of previous log entry\n}\n\nimpl AuditLogger {\n    pub async fn log_entry(&self, entry: AuditLogEntry) -> Result<()> {\n        // Sign the entry\n        let signature = self.sign_entry(&entry)?;\n\n        // Chain to previous entry (tamper-evident)\n        let prev_hash = self.get_last_entry_hash().await?;\n        let chain_hash = self.compute_chain_hash(&entry, &prev_hash)?;\n\n        let signed_entry = SignedAuditLogEntry {\n            entry,\n            signature,\n            chain_hash,\n        };\n\n        // Write to append-only log\n        self.store.append(signed_entry).await?;\n\n        // Also send to external SIEM (defense in depth)\n        self.siem_exporter.export(signed_entry).await?;\n\n        Ok(())\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Storage"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE admin_audit_log (\n    id UUID PRIMARY KEY,\n    timestamp TIMESTAMPTZ NOT NULL,\n    actor VARCHAR(255) NOT NULL,\n    actor_groups TEXT[] NOT NULL,\n+   actor_ip INET NOT NULL,\n+   user_agent TEXT,\n    operation VARCHAR(255) NOT NULL,\n    resource_type VARCHAR(100) NOT NULL,\n    resource_id VARCHAR(255) NOT NULL,\n    namespace VARCHAR(255),\n    request_id VARCHAR(100),\n+   trace_id VARCHAR(100),\n    success BOOLEAN NOT NULL,\n    error TEXT,\n+   duration_ms BIGINT NOT NULL,\n+   status_code INT NOT NULL,\n    metadata JSONB,\n+   signature VARCHAR(512) NOT NULL,\n+   chain_hash VARCHAR(128) NOT NULL,\n\n    INDEX idx_audit_timestamp ON admin_audit_log(timestamp DESC),\n    INDEX idx_audit_actor ON admin_audit_log(actor),\n    INDEX idx_audit_operation ON admin_audit_log(operation),\n    INDEX idx_audit_namespace ON admin_audit_log(namespace),\n+   INDEX idx_audit_trace_id ON admin_audit_log(trace_id)\n);\n\n-- Append-only table (prevent updates/deletes)\nCREATE TRIGGER audit_log_immutable\nBEFORE UPDATE OR DELETE ON admin_audit_log\nFOR EACH ROW\nEXECUTE FUNCTION prevent_modification();\n"})}),"\n",(0,t.jsx)(n.h3,{id:"4-rate-limiting-\ufe0f-needs-improvement",children:"4. Rate Limiting (\u26a0\ufe0f Needs Improvement)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Current State"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"100 requests per minute per user"}),"\n",(0,t.jsx)(n.li,{children:"No distinction between read/write operations"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Issues"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Too coarse"}),": Should differentiate between expensive and cheap operations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"No burst handling"}),": 100 req/min = ~1.6 req/sec, doesn't allow bursts"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"No per-operation limits"}),": Can spam expensive operations"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Improvement"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'pub struct AdaptiveRateLimiter {\n    // Different quotas for different operation types\n    read_limiter: RateLimiter<String>,     // 1000 req/min\n    write_limiter: RateLimiter<String>,    // 100 req/min\n    expensive_limiter: RateLimiter<String>, // 10 req/min (e.g., ListSessions)\n\n    // Burst allowance\n    burst_quota: NonZeroU32,\n}\n\nimpl AdaptiveRateLimiter {\n    pub async fn check(&self, claims: &Claims, operation: &str) -> Result<(), Status> {\n        let key = &claims.email;\n\n        let limiter = match operation {\n            // Expensive operations (database scans, aggregations)\n            "ListSessions" | "GetMetrics" | "ExportMetrics" => &self.expensive_limiter,\n\n            // Write operations (create, update, delete)\n            op if op.starts_with("Create") || op.starts_with("Update")\n                || op.starts_with("Delete") => &self.write_limiter,\n\n            // Read operations (get, list, describe)\n            _ => &self.read_limiter,\n        };\n\n        if limiter.check_key(key).is_err() {\n            return Err(Status::resource_exhausted(format!(\n                "Rate limit exceeded for {} (operation: {})",\n                claims.email, operation\n            )));\n        }\n\n        Ok(())\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"5-input-validation-\ufe0f-missing",children:"5. Input Validation (\u26a0\ufe0f Missing)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Current State"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No explicit validation in protobuf"}),"\n",(0,t.jsx)(n.li,{children:"Relies on application logic"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Issues"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"No length limits"}),": Namespace names, descriptions could be arbitrarily long"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"No format validation"}),": Email, URLs, identifiers unchecked"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"No sanitization"}),": Potential for injection attacks in metadata"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Improvement"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-protobuf",children:'message CreateNamespaceRequest {\n  string name = 1 [\n    (validate.rules).string = {\n      min_len: 3\n      max_len: 63\n      pattern: "^[a-z0-9]([a-z0-9-]*[a-z0-9])?$"  // DNS-like naming\n    }\n  ];\n\n  string description = 2 [\n    (validate.rules).string = {\n      max_len: 500\n    }\n  ];\n\n  string owner = 3 [\n    (validate.rules).string = {\n      email: true  // Validate email format\n    }\n  ];\n\n  repeated string tags = 4 [\n    (validate.rules).repeated = {\n      max_items: 10\n      items: {\n        string: {\n          min_len: 1\n          max_len: 50\n          pattern: "^[a-z0-9-]+$"\n        }\n      }\n    }\n  ];\n\n  map<string, string> labels = 5 [\n    (validate.rules).map = {\n      max_pairs: 20\n      keys: {\n        string: {\n          min_len: 1\n          max_len: 63\n          pattern: "^[a-z0-9]([a-z0-9-]*[a-z0-9])?$"\n        }\n      }\n      values: {\n        string: {\n          max_len: 255\n        }\n      }\n    }\n  ];\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Validation middleware"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'use validator::Validate;\n\npub struct ValidationInterceptor;\n\nimpl ValidationInterceptor {\n    pub async fn intercept<T: Validate>(&self, req: Request<T>) -> Result<Request<T>, Status> {\n        // Validate request using protoc-gen-validate\n        req.get_ref().validate()\n            .map_err(|e| Status::invalid_argument(format!("Validation error: {}", e)))?;\n\n        Ok(req)\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"6-api-versioning--missing",children:"6. API Versioning (\u274c Missing)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Current State"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["No versioning in package name: ",(0,t.jsx)(n.code,{children:"prism.admin.v1"})]}),"\n",(0,t.jsx)(n.li,{children:"No version negotiation"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Issues"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Breaking changes"}),": How to evolve protocol without breaking clients?"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Deprecation"}),": No way to deprecate old endpoints"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Feature flags"}),": No way to opt-in to new features"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Improvement"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-protobuf",children:'// Package with explicit version\npackage prism.admin.v2;\n\n// Version negotiation\nmessage GetVersionRequest {}\n\nmessage GetVersionResponse {\n  int32 api_version = 1;        // Current version: 2\n  int32 min_supported = 2;       // Minimum supported: 1\n  repeated int32 supported = 3;  // Supported versions: [1, 2]\n\n  // Feature flags for gradual rollout\n  map<string, bool> features = 4;  // e.g., {"shadow-traffic": true}\n}\n\nservice AdminService {\n  // Version negotiation\n  rpc GetVersion(GetVersionRequest) returns (GetVersionResponse);\n\n  // Versioned operations (with backward compatibility)\n  rpc CreateNamespace(CreateNamespaceRequest) returns (CreateNamespaceResponse);\n  rpc CreateNamespaceV2(CreateNamespaceV2Request) returns (CreateNamespaceV2Response);\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"7-request-signing--missing",children:"7. Request Signing (\u274c Missing)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Current State"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No request integrity protection beyond TLS"}),"\n",(0,t.jsx)(n.li,{children:"No replay attack prevention"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Issues"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Token theft"}),": Stolen JWT can be used until expiry"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Replay attacks"}),": Captured requests can be replayed"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Man-in-the-middle"}),": TLS protects transport, but not request integrity"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Improvement"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-protobuf",children:"message RequestMetadata {\n  string timestamp = 1;     // ISO 8601 timestamp\n  string nonce = 2;          // Random nonce for replay prevention\n  string signature = 3;      // HMAC-SHA256(timestamp + nonce + request_body, jwt_secret)\n}\n\n// All requests include metadata\nmessage CreateNamespaceRequest {\n  RequestMetadata metadata = 1;\n\n  string name = 2;\n  string description = 3;\n  // ... other fields\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Signature verification"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"pub struct SignatureVerifier {\n    nonce_cache: Arc<NonceCache>,  // Redis-based cache\n    max_request_age: Duration,     // 5 minutes\n}\n\nimpl SignatureVerifier {\n    pub async fn verify(&self, req: &CreateNamespaceRequest, claims: &Claims) -> Result<()> {\n        let metadata = req.metadata.as_ref()\n            .ok_or(Error::MissingMetadata)?;\n\n        // Check timestamp freshness\n        let timestamp = DateTime::parse_from_rfc3339(&metadata.timestamp)?;\n        let age = Utc::now() - timestamp;\n        if age > self.max_request_age {\n            return Err(Error::RequestTooOld);\n        }\n\n        // Check nonce uniqueness (prevent replay)\n        if self.nonce_cache.exists(&metadata.nonce).await? {\n            return Err(Error::NonceReused);\n        }\n        self.nonce_cache.insert(&metadata.nonce, age).await?;\n\n        // Verify signature\n        let expected_signature = self.compute_signature(\n            &metadata.timestamp,\n            &metadata.nonce,\n            req,\n            &claims.sub,\n        )?;\n\n        if metadata.signature != expected_signature {\n            return Err(Error::InvalidSignature);\n        }\n\n        Ok(())\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"simplification-recommendations",children:"Simplification Recommendations"}),"\n",(0,t.jsx)(n.h3,{id:"1-consolidate-session-operations",children:"1. Consolidate Session Operations"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Current"}),": Separate GetSession, DescribeSession, ListSessions"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Simplified"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-protobuf",children:"message GetSessionsRequest {\n  // Filters (all optional)\n  string namespace = 1;\n  string session_id = 2;        // If specified, returns single session\n  SessionStatus status = 3;\n\n  // Pagination\n  int32 page_size = 10;\n  string page_token = 11;\n\n  // Include detailed info?\n  bool include_details = 20;\n}\n\nmessage GetSessionsResponse {\n  repeated Session sessions = 1;\n  string next_page_token = 2;\n}\n\nservice AdminService {\n  // Single endpoint replaces GetSession, DescribeSession, ListSessions\n  rpc GetSessions(GetSessionsRequest) returns (GetSessionsResponse);\n  rpc TerminateSession(TerminateSessionRequest) returns (TerminateSessionResponse);\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-unify-config-operations",children:"2. Unify Config Operations"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Current"}),": ListConfigs, GetConfig, CreateConfig, UpdateConfig, DeleteConfig"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Simplified"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-protobuf",children:"service AdminService {\n  // Read configs (supports filtering, pagination)\n  rpc GetConfigs(GetConfigsRequest) returns (GetConfigsResponse);\n\n  // Write config (upsert: create or update)\n  rpc PutConfig(PutConfigRequest) returns (PutConfigResponse);\n\n  // Delete config\n  rpc DeleteConfig(DeleteConfigRequest) returns (DeleteConfigResponse);\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-standardize-pagination",children:"3. Standardize Pagination"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Current"}),": Inconsistent pagination across endpoints"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Improved"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-protobuf",children:"// Standard pagination pattern for all list operations\nmessage PaginationRequest {\n  int32 page_size = 1 [\n    (validate.rules).int32 = {\n      gte: 1\n      lte: 1000\n    }\n  ];\n  string page_token = 2;\n}\n\nmessage PaginationResponse {\n  string next_page_token = 1;\n  int32 total_count = 2;      // Optional: total count for UI\n}\n\n// Apply to all list operations\nmessage ListNamespacesRequest {\n  PaginationRequest pagination = 1;\n  // ... filters\n}\n\nmessage ListNamespacesResponse {\n  repeated Namespace namespaces = 1;\n  PaginationResponse pagination = 2;\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"long-term-extensibility",children:"Long-Term Extensibility"}),"\n",(0,t.jsx)(n.h3,{id:"1-batch-operations",children:"1. Batch Operations"}),"\n",(0,t.jsx)(n.p,{children:"For automation and efficiency:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-protobuf",children:"message BatchCreateNamespacesRequest {\n  repeated CreateNamespaceRequest requests = 1 [\n    (validate.rules).repeated = {\n      min_items: 1\n      max_items: 100\n    }\n  ];\n\n  // Fail fast or continue on error?\n  bool atomic = 2;  // If true, rollback all on any failure\n}\n\nmessage BatchCreateNamespacesResponse {\n  repeated CreateNamespaceResponse responses = 1;\n  repeated Error errors = 2;  // Errors for failed requests\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-watchsubscribe-for-real-time-updates",children:"2. Watch/Subscribe for Real-Time Updates"}),"\n",(0,t.jsx)(n.p,{children:"For UI and automation:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-protobuf",children:"message WatchNamespacesRequest {\n  // Filters\n  string namespace_prefix = 1;\n  repeated string tags = 2;\n\n  // Watch from specific point\n  string resource_version = 3;  // Resume from last seen version\n}\n\nmessage WatchNamespacesResponse {\n  enum EventType {\n    ADDED = 0;\n    MODIFIED = 1;\n    DELETED = 2;\n  }\n\n  EventType type = 1;\n  Namespace namespace = 2;\n  string resource_version = 3;  // For resuming watch\n}\n\nservice AdminService {\n  // Server streaming for real-time updates\n  rpc WatchNamespaces(WatchNamespacesRequest) returns (stream WatchNamespacesResponse);\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-query-language-for-complex-filters",children:"3. Query Language for Complex Filters"}),"\n",(0,t.jsx)(n.p,{children:"For advanced filtering:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-protobuf",children:"message QueryRequest {\n  // SQL-like or JMESPath query\n  string query = 1 [\n    (validate.rules).string = {\n      max_len: 1000\n    }\n  ];\n\n  // Example: \"SELECT * FROM namespaces WHERE tags CONTAINS 'prod' AND created_at > '2025-01-01'\"\n  // Or: \"namespaces[?tags.contains('prod') && created_at > '2025-01-01']\"\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"implementation-priority",children:"Implementation Priority"}),"\n",(0,t.jsx)(n.h3,{id:"phase-1-security-hardening-week-1-2",children:"Phase 1: Security Hardening (Week 1-2)"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Add input validation with protoc-gen-validate"}),"\n",(0,t.jsx)(n.li,{children:"Implement resource-level authorization"}),"\n",(0,t.jsx)(n.li,{children:"Add audit log signing and tamper-evidence"}),"\n",(0,t.jsx)(n.li,{children:"Implement adaptive rate limiting"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"phase-2-simplifications-week-3",children:"Phase 2: Simplifications (Week 3)"}),"\n",(0,t.jsxs)(n.ol,{start:"5",children:["\n",(0,t.jsx)(n.li,{children:"Consolidate session and config operations"}),"\n",(0,t.jsx)(n.li,{children:"Standardize pagination across all endpoints"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"phase-3-extensibility-week-4-5",children:"Phase 3: Extensibility (Week 4-5)"}),"\n",(0,t.jsxs)(n.ol,{start:"7",children:["\n",(0,t.jsx)(n.li,{children:"Add API versioning support"}),"\n",(0,t.jsx)(n.li,{children:"Implement batch operations"}),"\n",(0,t.jsx)(n.li,{children:"Add watch/subscribe for real-time updates"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"phase-4-advanced-future",children:"Phase 4: Advanced (Future)"}),"\n",(0,t.jsxs)(n.ol,{start:"10",children:["\n",(0,t.jsx)(n.li,{children:"Add request signing for critical operations"}),"\n",(0,t.jsx)(n.li,{children:"Implement query language for complex filters"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security Grade"}),": B+ (Good, with room for improvement)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Key Wins"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Strong OIDC-based authentication"}),"\n",(0,t.jsx)(n.li,{children:"Proper JWT validation"}),"\n",(0,t.jsx)(n.li,{children:"Audit logging foundation"}),"\n",(0,t.jsx)(n.li,{children:"Rate limiting baseline"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Must-Fix"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Add resource-level authorization"}),"\n",(0,t.jsx)(n.li,{children:"Implement tamper-evident audit logging"}),"\n",(0,t.jsx)(n.li,{children:"Add input validation"}),"\n",(0,t.jsx)(n.li,{children:"Implement API versioning"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Nice-to-Have"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Request signing"}),"\n",(0,t.jsx)(n.li,{children:"Batch operations"}),"\n",(0,t.jsx)(n.li,{children:"Watch/Subscribe"}),"\n",(0,t.jsx)(n.li,{children:"Query language"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Next Steps"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Review this memo with team"}),"\n",(0,t.jsx)(n.li,{children:"Prioritize improvements"}),"\n",(0,t.jsx)(n.li,{children:"Create implementation ADRs for each phase"}),"\n",(0,t.jsx)(n.li,{children:"Update RFC-010 with accepted improvements"}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);