"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[1415],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var i=s(96540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}},96603:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"memos-index","title":"Technical Memos","description":"Technical memos provide visual documentation, flow diagrams, and detailed implementation guides for Prism patterns and workflows. MEMOs are companion documents to RFCs and ADRs, focusing on \\"how\\" with diagrams and concrete examples.","source":"@site/../docs-cms/memos/index.md","sourceDirName":".","slug":"/","permalink":"/prism-data-layer/memos/","draft":false,"unlisted":false,"editUrl":"https://github.com/jrepp/prism-data-layer/tree/main/docs-cms/../docs-cms/memos/index.md","tags":[],"version":"current","frontMatter":{"id":"memos-index","title":"Technical Memos","slug":"/"},"sidebar":"memosSidebar","next":{"title":"WAL Full Transaction Flow with Authorization and Session Management \u2022 MEMO-001","permalink":"/prism-data-layer/memos/memo-001"}}');var r=s(74848),t=s(28453);const o={id:"memos-index",title:"Technical Memos",slug:"/"},l="Technical Memos",a={},c=[{value:"\ud83c\udfaf New to Prism? Start Here",id:"-new-to-prism-start-here",level:2},{value:"\ud83d\udcda Reading Paths by Need",id:"-reading-paths-by-need",level:2},{value:"I Want to Implement a Backend Plugin",id:"i-want-to-implement-a-backend-plugin",level:3},{value:"I Need to Understand a Specific Pattern",id:"i-need-to-understand-a-specific-pattern",level:3},{value:"I&#39;m Setting Up Local Development",id:"im-setting-up-local-development",level:3},{value:"I&#39;m Working on Testing and CI/CD",id:"im-working-on-testing-and-cicd",level:3},{value:"\ud83d\udcd6 MEMOs by Category",id:"-memos-by-category",level:2},{value:"\ud83c\udfd7\ufe0f Implementation Guides",id:"\ufe0f-implementation-guides",level:3},{value:"\ud83d\udd04 Architecture Flows &amp; Patterns",id:"-architecture-flows--patterns",level:3},{value:"\ud83e\uddea Testing Frameworks",id:"-testing-frameworks",level:3},{value:"\ud83d\udd10 Security &amp; Operations",id:"-security--operations",level:3},{value:"\ud83d\udd2c POC Results &amp; Analysis",id:"-poc-results--analysis",level:3},{value:"\ud83d\udcdd Documentation &amp; Process",id:"-documentation--process",level:3},{value:"\ud83c\udfa8 Design Philosophy",id:"-design-philosophy",level:3},{value:"\ud83d\udca1 What Makes a Good MEMO?",id:"-what-makes-a-good-memo",level:2},{value:"\u270d\ufe0f Contributing MEMOs",id:"\ufe0f-contributing-memos",level:2},{value:"MEMO Naming Convention",id:"memo-naming-convention",level:3},{value:"\ud83d\udd17 Related Documentation",id:"-related-documentation",level:2}];function d(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"technical-memos",children:"Technical Memos"})}),"\n",(0,r.jsx)(n.p,{children:'Technical memos provide visual documentation, flow diagrams, and detailed implementation guides for Prism patterns and workflows. MEMOs are companion documents to RFCs and ADRs, focusing on "how" with diagrams and concrete examples.'}),"\n",(0,r.jsx)(n.h2,{id:"-new-to-prism-start-here",children:"\ud83c\udfaf New to Prism? Start Here"}),"\n",(0,r.jsx)(n.p,{children:"If you're looking for visual explanations and implementation details:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-001",children:"MEMO-001: WAL Full Transaction Flow"})})," - See a complete transaction end-to-end"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-004",children:"MEMO-004: Backend Plugin Implementation Guide"})})," - Compare backends and choose one"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-012",children:"MEMO-012: Developer Experience"})})," - Learn common workflows"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-reading-paths-by-need",children:"\ud83d\udcda Reading Paths by Need"}),"\n",(0,r.jsx)(n.h3,{id:"i-want-to-implement-a-backend-plugin",children:"I Want to Implement a Backend Plugin"}),"\n",(0,r.jsx)(n.p,{children:"Follow this path to build a new backend integration:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-004",children:"MEMO-004: Backend Implementation Guide"})})," - Backend comparison and ranking"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-014",children:"MEMO-014: Pattern SDK Shared Complexity"})})," - Reusable SDK components"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-015",children:"MEMO-015: Cross-Backend Acceptance Tests"})})," - Test your plugin"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-007",children:"MEMO-007: Podman Scratch Containers"})})," - Package for deployment"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"i-need-to-understand-a-specific-pattern",children:"I Need to Understand a Specific Pattern"}),"\n",(0,r.jsx)(n.p,{children:"Dive deep into pattern implementations with visual guides:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-001",children:"MEMO-001: WAL Full Transaction Flow"})})," - Write-Ahead Log pattern"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-018",children:"MEMO-018: POC4 Multicast Registry"})})," - Service discovery pattern"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-006",children:"MEMO-006: Backend Interface Decomposition"})})," - Capability-based interfaces"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"im-setting-up-local-development",children:"I'm Setting Up Local Development"}),"\n",(0,r.jsx)(n.p,{children:"Get your dev environment running smoothly:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-012",children:"MEMO-012: Developer Experience"})})," - Common commands and workflows"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-009",children:"MEMO-009: Topaz Local Authorizer"})})," - Set up local authorization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-008",children:"MEMO-008: Vault Token Exchange"})})," - Configure credential management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-016",children:"MEMO-016: Observability Lifecycle"})})," - Set up tracing and metrics"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"im-working-on-testing-and-cicd",children:"I'm Working on Testing and CI/CD"}),"\n",(0,r.jsx)(n.p,{children:"Improve test speed and quality:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-020",children:"MEMO-020: Parallel Testing"})})," - 40% faster tests"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-021",children:"MEMO-021: Parallel Linting"})})," - 54-90x faster linting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-015",children:"MEMO-015: Cross-Backend Acceptance Tests"})})," - Comprehensive test coverage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-030",children:"MEMO-030: Pattern-Based Acceptance Testing"})})," - New testing framework"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-031",children:"MEMO-031: RFC-031 Security Review"})})," - Security and performance analysis"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-memos-by-category",children:"\ud83d\udcd6 MEMOs by Category"}),"\n",(0,r.jsx)(n.h3,{id:"\ufe0f-implementation-guides",children:"\ud83c\udfd7\ufe0f Implementation Guides"}),"\n",(0,r.jsx)(n.p,{children:"Step-by-step guides for building Prism components:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-004",children:"MEMO-004: Backend Plugin Implementation Guide"})}),"\nComprehensive rubric comparing 8 backends (MemStore, Redis, SQLite, PostgreSQL, Kafka, NATS, S3/MinIO, ClickHouse) ranked by implementability score (0-100)"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-014",children:"MEMO-014: Pattern SDK Shared Complexity"})}),"\nSDK refactoring strategy eliminating boilerplate: 200+ lines \u2192 ~50 lines per pattern with config parsing, health checks, lifecycle management"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-007",children:"MEMO-007: Podman Scratch Container Demo"})}),"\nMinimal scratch-based containers with Podman: 87% size reduction (45MB \u2192 6MB for Go, 15MB \u2192 6MB for Rust) with native runtime"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-031",children:"MEMO-031: RFC-031 Security and Performance Review"})}),"\nComprehensive security and performance analysis of message envelope protocol: 13x parsing speedup, 40% serialization improvement, security recommendations"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-architecture-flows--patterns",children:"\ud83d\udd04 Architecture Flows & Patterns"}),"\n",(0,r.jsx)(n.p,{children:"Visual sequence diagrams and architecture patterns:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-001",children:"MEMO-001: WAL Full Transaction Flow"})}),"\nComplete Write-Ahead Log transaction lifecycle showing authentication, authorization, async DB application, session management, crash recovery"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-005",children:"MEMO-005: Client Protocol Design Philosophy"})}),"\nClient library design emphasizing simplicity, explicit errors, connection pooling, and idiomatic patterns (Python, Go, Rust examples)"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-006",children:"MEMO-006: Backend Interface Decomposition Schema Registry"})}),"\nProposal for decomposing monolithic backends into granular capabilities (Get, Set, Scan, TTL, Atomic) with schema registry"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-testing-frameworks",children:"\ud83e\uddea Testing Frameworks"}),"\n",(0,r.jsx)(n.p,{children:"Comprehensive testing strategies and infrastructure:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-015",children:"MEMO-015: Cross-Backend Acceptance Test Framework"})}),"\nWorld-class acceptance testing: ~50 lines of integration code \u2192 comprehensive coverage across all supported patterns with capability declarations"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-020",children:"MEMO-020: Parallel Testing and Build Hygiene"})}),"\nParallel test execution achieving 40% speed improvement (17min \u2192 10min), hygienic out-of-source builds, comprehensive test organization"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-021",children:"MEMO-021: Parallel Linting System"})}),"\nParallel linting infrastructure: 54-90x speed improvement (45+ min \u2192 3-4 sec) running 45+ linters across 10 categories concurrently"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-030",children:"MEMO-030: Pattern-Based Acceptance Testing Framework"})}),"\nPattern-based testing framework replacing backend-specific tests: 87% code reduction, write once run everywhere, auto-discovery"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-security--operations",children:"\ud83d\udd10 Security & Operations"}),"\n",(0,r.jsx)(n.p,{children:"Security flows and operational procedures:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-008",children:"MEMO-008: Vault Token Exchange Flow"})}),"\nComplete flow for secure credential management with HashiCorp Vault: token exchange patterns, rotation strategies, Prism integration"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-009",children:"MEMO-009: Topaz Local Authorizer Configuration"})}),"\nConfiguration guide for Topaz (OpenPolicyAgent) local authorizer: ABAC/RBAC policy setup, decision caching, authorization layer integration"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-016",children:"MEMO-016: Observability Lifecycle Implementation"})}),"\nOpenTelemetry-based observability: trace context propagation, metric collection, structured logging, Signoz integration for local dev"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-poc-results--analysis",children:"\ud83d\udd2c POC Results & Analysis"}),"\n",(0,r.jsx)(n.p,{children:"Proof-of-concept results and performance analysis:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-018",children:"MEMO-018: POC4 Complete Summary"})}),"\nPOC4 (Multicast Registry pattern) results: schematized backend slots, registry + messaging composition, Redis+NATS implementation with benchmarks"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-019",children:"MEMO-019: Load Test Results 100RPS"})}),"\nLoad testing results: Prism proxy handling 100 RPS with <10ms p99 latency, bottleneck analysis, memory patterns, production recommendations"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-010",children:"MEMO-010: POC1 Edge Case Analysis"})}),"\nPOC1 (MemStore KeyValue) edge cases: connection handling, error recovery, TTL precision, concurrency issues with proposed solutions"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-013",children:"MEMO-013: POC1 Infrastructure Analysis"})}),"\nInfrastructure analysis: Pattern SDK shared complexity (38% code reduction), load testing framework evaluation"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-documentation--process",children:"\ud83d\udcdd Documentation & Process"}),"\n",(0,r.jsx)(n.p,{children:"Development workflows and best practices:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-003",children:"MEMO-003: Documentation-First Development"})}),"\nDocumentation-first workflow requiring ADRs before implementation: ensures decisions captured, reviewed, rationale preserved"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-002",children:"MEMO-002: Admin Protocol Review"})}),"\nAdmin protocol design review: namespace management, health checks, metrics endpoints, operator experience improvements"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-012",children:"MEMO-012: Developer Experience"})}),"\nDeveloper workflow analysis: common commands, testing strategies, debugging patterns, speed optimization techniques"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-design-philosophy",children:"\ud83c\udfa8 Design Philosophy"}),"\n",(0,r.jsx)(n.p,{children:"High-level design thinking and trade-offs:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-005",children:"MEMO-005: Client Protocol Design Philosophy"})}),"\nResolves architectural tension between composable primitives (RFC-014) and use-case-specific protocols (RFC-017) with layered API approach"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/memos/memo-006",children:"MEMO-006: Backend Interface Decomposition"})}),"\nDesign decision: explicit interface flavors (not capability flags) for type safety with 45 thin interfaces across 10 data models"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-what-makes-a-good-memo",children:"\ud83d\udca1 What Makes a Good MEMO?"}),"\n",(0,r.jsx)(n.p,{children:"MEMOs excel when they:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Show, Don't Tell"}),": Use Mermaid diagrams, flowcharts, sequence diagrams"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Provide Context"}),": Link to related RFCs and ADRs for background"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Include Examples"}),": Concrete code snippets and configurations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cover Edge Cases"}),": Document error scenarios and recovery paths"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Add Metrics"}),": Include performance numbers and resource usage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Stay Focused"}),": One pattern or workflow per MEMO"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-contributing-memos",children:"\u270d\ufe0f Contributing MEMOs"}),"\n",(0,r.jsx)(n.p,{children:"When creating a new MEMO:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Visual First"}),": Start with diagrams showing the flow or architecture"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Concrete Examples"}),": Use real code snippets from the codebase"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Link to Decisions"}),": Reference relevant RFCs and ADRs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Show Error Paths"}),": Don't just show the happy path"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Include Metrics"}),": Add performance data when relevant"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"memo-naming-convention",children:"MEMO Naming Convention"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MEMO-XXX"}),": Sequential numbering"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Title"}),': Descriptive and specific (e.g., "Vault Token Exchange Flow" not "Security")']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tags"}),": Add relevant tags in frontmatter for discoverability"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-related-documentation",children:"\ud83d\udd17 Related Documentation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/rfc/",children:"RFCs"})}),' - Detailed technical specifications (the "what")']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/adr/",children:"ADRs"})}),' - Architecture decisions (the "why")']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/changelog",children:"Changelog"})})," - Recent documentation updates"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Total MEMOs"}),": 30+ implementation guides, flows, and analysis documents"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Latest Updates"}),": See the ",(0,r.jsx)(n.a,{href:"/docs/changelog",children:"Changelog"})," for recent MEMOs"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);