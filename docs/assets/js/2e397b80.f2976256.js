"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[28623],{28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var i=s(96540);const t={},a=i.createContext(t);function r(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(a.Provider,{value:n},e.children)}},63475:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"rfc-006","title":"Admin CLI (prismctl)","description":"Author: System","source":"@site/../docs-cms/rfcs/rfc-006-python-admin-cli.md","sourceDirName":".","slug":"/rfc-006","permalink":"/prism-data-layer/rfc/rfc-006","draft":false,"unlisted":false,"editUrl":"https://github.com/jrepp/prism-data-layer/tree/main/docs-cms/../docs-cms/rfcs/rfc-006-python-admin-cli.md","tags":[],"version":"current","frontMatter":{"author":"System","created":"2025-10-08T00:00:00.000Z","doc_uuid":"51c75a8b-c635-49f2-9c4c-a078ef110d48","id":"rfc-006","project_id":"prism-data-layer","sidebar_label":"RFC-006 Admin CLI","status":"Superseded","title":"Admin CLI (prismctl)"},"sidebar":"rfcSidebar","previous":{"title":"ClickHouse Integration for Time Series Analytics \u2022 RFC-005","permalink":"/prism-data-layer/rfc/rfc-005"},"next":{"title":"RFC-007 Cache Strategies","permalink":"/prism-data-layer/rfc/rfc-007"}}');var t=s(74848),a=s(28453);const r={author:"System",created:new Date("2025-10-08T00:00:00.000Z"),doc_uuid:"51c75a8b-c635-49f2-9c4c-a078ef110d48",id:"rfc-006",project_id:"prism-data-layer",sidebar_label:"RFC-006 Admin CLI",status:"Superseded",title:"Admin CLI (prismctl)"},c="RFC-006: Admin CLI (prismctl)",o={},l=[{value:"Abstract",id:"abstract",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Why CLI First?",id:"why-cli-first",level:3},{value:"Real-World Use Cases",id:"real-world-use-cases",level:3},{value:"Goals",id:"goals",level:2},{value:"Non-Goals",id:"non-goals",level:2},{value:"Architecture",id:"architecture",level:2},{value:"High-Level Design",id:"high-level-design",level:3},{value:"Authentication",id:"authentication",level:2},{value:"Device Code Flow (OAuth 2.0)",id:"device-code-flow-oauth-20",level:3},{value:"Login Command",id:"login-command",level:3},{value:"Token Storage",id:"token-storage",level:3},{value:"Logout Command",id:"logout-command",level:3},{value:"Authentication Modes",id:"authentication-modes",level:3},{value:"Service Account Authentication",id:"service-account-authentication",level:3},{value:"Authentication Flow Implementation",id:"authentication-flow-implementation",level:3},{value:"Local Development with Dex",id:"local-development-with-dex",level:3},{value:"Command Structure",id:"command-structure",level:3},{value:"List Namespaces",id:"list-namespaces",level:4},{value:"Backend Management",id:"backend-management",level:3},{value:"Health Check",id:"health-check",level:4},{value:"Trace Session",id:"trace-session",level:4},{value:"Metrics and Monitoring",id:"metrics-and-monitoring",level:3},{value:"Metrics Summary",id:"metrics-summary",level:4},{value:"Shadow Status",id:"shadow-status",level:4},{value:"Install Plugin",id:"install-plugin",level:4},{value:"Enable/Disable Plugin",id:"enabledisable-plugin",level:4},{value:"Hot-Reload Plugin",id:"hot-reload-plugin",level:4},{value:"Plugin Development Workflow",id:"plugin-development-workflow",level:3},{value:"Protobuf Integration",id:"protobuf-integration",level:2},{value:"Implementation",id:"implementation",level:2},{value:"Technology Stack (Go Implementation - see ADR-040)",id:"technology-stack-go-implementation---see-adr-040",level:3},{value:"Project Structure (Go Implementation)",id:"project-structure-go-implementation",level:3}];function d(e){const n={a:"a",backend:"backend",blockquote:"blockquote",br:"br",code:"code",file:"file",format:"format",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",name:"name",namespace:"namespace",ol:"ol",p:"p",pre:"pre","session-id":"session-id",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",url:"url",...(0,a.R)(),...e.components},s=n["session-id"];return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"rfc-006-admin-cli-prismctl",children:"RFC-006: Admin CLI (prismctl)"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Author"}),": System\n",(0,t.jsx)(n.strong,{children:"Created"}),": 2025-10-08\n",(0,t.jsx)(n.strong,{children:"Updated"}),": 2025-10-09\n",(0,t.jsx)(n.strong,{children:"Superseded By"}),": ADR-040 (Go Binary for Admin CLI)"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note"}),": This RFC originally proposed a Python-based CLI. The implementation has shifted to ",(0,t.jsx)(n.strong,{children:"Go"})," for better performance, single-binary distribution, and consistency with backend plugins. See ",(0,t.jsx)(n.a,{href:"/adr/adr-040",children:"ADR-040: Go Binary for Admin CLI"})," for the accepted implementation approach. The functional specifications below remain valid regardless of implementation language."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"abstract",children:"Abstract"}),"\n",(0,t.jsxs)(n.p,{children:["This RFC proposes a comprehensive command-line interface (CLI) for administering Prism data access gateway, now implemented as ",(0,t.jsx)(n.strong,{children:"prismctl"})," (a Go binary). The CLI provides operational visibility, configuration management, and troubleshooting capabilities before building a full web-based admin UI. By delivering CLI-first tooling, we enable automation, scripting, and CI/CD integration while validating the admin API design."]}),"\n",(0,t.jsx)(n.p,{children:"The CLI will interact with Prism's admin gRPC services (RFC-003) to manage namespaces, monitor sessions, inspect backend health, and configure data access patterns across all supported backends (Kafka, NATS, PostgreSQL, Redis, ClickHouse)."}),"\n",(0,t.jsx)(n.h2,{id:"motivation",children:"Motivation"}),"\n",(0,t.jsx)(n.h3,{id:"why-cli-first",children:"Why CLI First?"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Faster Time to Value"}),": CLI tools can be developed and iterated faster than full UIs"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Automation Ready"}),": Enable scripting and CI/CD integration from day one"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"API Validation"}),": Using the CLI validates admin API design before UI investment"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"DevOps Friendly"}),": Operators prefer CLI tools for troubleshooting and automation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Low Barrier"}),": Python + Click/Typer = rapid development with excellent UX"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"real-world-use-cases",children:"Real-World Use Cases"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Namespace Management"}),": Create, configure, and delete namespaces"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Health Monitoring"}),": Check backend connectivity and performance metrics"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Session Inspection"}),": Debug active client sessions and connection pools"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Configuration Changes"}),": Update backend settings, capacity limits, consistency levels"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Traffic Analysis"}),": Inspect request rates, latency distributions, error rates"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Migration Support"}),": Shadow traffic configuration, backend switching, rollback"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"goals",children:"Goals"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Provide complete admin functionality via CLI before building web UI"}),"\n",(0,t.jsx)(n.li,{children:"Support all operations defined in RFC-003 Admin gRPC API"}),"\n",(0,t.jsx)(n.li,{children:"Enable automation and scripting for operational workflows"}),"\n",(0,t.jsx)(n.li,{children:"Deliver excellent developer experience with rich formatting and feedback"}),"\n",(0,t.jsx)(n.li,{children:"Support YAML-first configuration with automatic config file discovery"}),"\n",(0,t.jsx)(n.li,{children:"Integrate with existing Python tooling ecosystem (uv, pytest)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"non-goals",children:"Non-Goals"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Not replacing web UI"}),": CLI is a stepping stone and complementary tool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Not a data client"}),": Use language-specific client SDKs for data access"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Not a full TUI"}),": Keep it simple; use Rich for formatting, not full-screen apps"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,t.jsx)(n.h3,{id:"high-level-design",children:"High-Level Design"}),"\n",(0,t.jsx)(n.mermaid,{value:'graph TB\n    subgraph "Admin CLI"\n        CLI[prismctl CLI<br/>Cobra/Viper]\n        Formatter[Rich Formatter<br/>Tables/Trees/JSON]\n        Client[gRPC Client<br/>Admin Service]\n    end\n\n    subgraph "Prism Proxy"\n        AdminAPI[Admin gRPC API<br/>RFC-003]\n        ConfigMgr[Config Manager]\n        Metrics[Metrics Collector]\n        Health[Health Checker]\n    end\n\n    subgraph "Backends"\n        Kafka[Kafka]\n        Redis[Redis]\n        ClickHouse[ClickHouse]\n        Postgres[PostgreSQL]\n        NATS[NATS]\n    end\n\n    CLI --\x3e Formatter\n    CLI --\x3e Client\n    Client --\x3e|gRPC| AdminAPI\n    AdminAPI --\x3e ConfigMgr\n    AdminAPI --\x3e Metrics\n    AdminAPI --\x3e Health\n    Health --\x3e Kafka\n    Health --\x3e Redis\n    Health --\x3e ClickHouse\n    Health --\x3e Postgres\n    Health --\x3e NATS'}),"\n",(0,t.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,t.jsxs)(n.p,{children:["The Admin CLI requires authentication to access the Prism Admin API. We use ",(0,t.jsx)(n.strong,{children:"OIDC (OpenID Connect)"})," with the ",(0,t.jsx)(n.strong,{children:"device code flow"})," for command-line SSO authentication."]}),"\n",(0,t.jsx)(n.h3,{id:"device-code-flow-oauth-20",children:"Device Code Flow (OAuth 2.0)"}),"\n",(0,t.jsx)(n.p,{children:"The device code flow is designed for CLI applications and devices without browsers. The user authenticates via a web browser while the CLI polls for completion."}),"\n",(0,t.jsx)(n.mermaid,{value:'sequenceDiagram\n    participant User as Administrator\n    participant CLI as prismctl\n    participant OIDC as OIDC Provider<br/>(Okta/Auth0/Dex)\n    participant API as Admin API\n\n    Note over User,API: Initial Login\n\n    User->>CLI: prismctl login\n    CLI->>OIDC: POST /oauth/device/code<br/>{client_id, scope}\n\n    OIDC--\x3e>CLI: {<br/>  device_code,<br/>  user_code: "ABCD-1234",<br/>  verification_uri,<br/>  interval: 5<br/>}\n\n    CLI->>User: Please visit:<br/>https://idp.example.com/activate<br/>and enter code: ABCD-1234\n\n    User->>OIDC: Navigate to verification_uri\n    OIDC->>User: Show login page\n    User->>OIDC: Enter user_code: ABCD-1234\n    OIDC->>User: Show consent screen<br/>(Scopes: admin:read, admin:write)\n    User->>OIDC: Approve\n\n    loop Poll every 5 seconds (max 5 minutes)\n        CLI->>OIDC: POST /oauth/token<br/>{device_code, grant_type}\n\n        alt User approved\n            OIDC--\x3e>CLI: {<br/>  access_token (JWT),<br/>  refresh_token,<br/>  expires_in: 3600<br/>}\n            CLI->>CLI: Save to ~/.prism/token\n            CLI--\x3e>User: \u2713 Authenticated as alice@company.com\n        else Still pending\n            OIDC--\x3e>CLI: {error: "authorization_pending"}\n        else User denied\n            OIDC--\x3e>CLI: {error: "access_denied"}\n        end\n    end\n\n    Note over User,API: Authenticated Requests\n\n    User->>CLI: prismctl namespace list\n    CLI->>CLI: Load ~/.prism/token\n\n    alt Token valid\n        CLI->>API: gRPC: ListNamespaces()<br/>metadata: authorization: Bearer <jwt>\n        API->>API: Validate JWT signature<br/>Check expiry<br/>Extract claims (email, groups, scopes)\n        API--\x3e>CLI: NamespacesResponse\n        CLI--\x3e>User: Display namespaces\n    else Token expired\n        CLI->>OIDC: POST /oauth/token<br/>{refresh_token, grant_type}\n        OIDC--\x3e>CLI: New access_token\n        CLI->>CLI: Update ~/.prism/token\n        CLI->>API: Retry with new token\n    end'}),"\n",(0,t.jsx)(n.h3,{id:"login-command",children:"Login Command"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Interactive login (device code flow)\nprismctl login\n\n# Or specify OIDC issuer explicitly\nprismctl login --issuer https://idp.example.com\n\n# Local development with Dex (see ADR-046)\nprismctl login --local\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Output"}),":\nOpening browser for authentication..."]}),"\n",(0,t.jsxs)(n.p,{children:["Visit: ",(0,t.jsx)(n.a,{href:"https://idp.example.com/activate",children:"https://idp.example.com/activate"}),"\nEnter code: WXYZ-1234"]}),"\n",(0,t.jsx)(n.p,{children:"Waiting for authentication..."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n*Browser opens automatically to verification URL*\n\n\u2713 Authenticated as alice@company.com\nToken expires in 1 hour\nToken cached to ~/.prism/token\n\nYou can now use prismctl commands:\n  prismctl namespace list\n  prismctl backend health\n  prismctl session list\n"})}),"\n",(0,t.jsx)(n.h3,{id:"token-storage",children:"Token Storage"}),"\n",(0,t.jsxs)(n.p,{children:["Tokens are securely stored in ",(0,t.jsx)(n.code,{children:"~/.prism/token"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "access_token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9...",\n  "refresh_token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9...",\n  "token_type": "Bearer",\n  "expires_at": "2025-10-09T15:30:00Z",\n  "issued_at": "2025-10-09T14:30:00Z",\n  "issuer": "https://idp.example.com",\n  "principal": "alice@company.com",\n  "groups": ["platform-team", "admins"]\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["File permissions: ",(0,t.jsx)(n.code,{children:"0600"})," (owner read/write only)"]}),"\n",(0,t.jsx)(n.li,{children:"Tokens expire after 1 hour"}),"\n",(0,t.jsx)(n.li,{children:"Refresh tokens extend session to 7 days"}),"\n",(0,t.jsx)(n.li,{children:"Automatic refresh on expiry"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"logout-command",children:"Logout Command"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Logout (delete cached token)\nprismctl logout\n\n# Verify logged out\nprismctl namespace list\n# \u2192 Error: Not authenticated. Run 'prismctl login' to authenticate.\n"})}),"\n",(0,t.jsx)(n.h3,{id:"authentication-modes",children:"Authentication Modes"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Mode"}),(0,t.jsx)(n.th,{children:"Use Case"}),(0,t.jsx)(n.th,{children:"Command"}),(0,t.jsx)(n.th,{children:"Token Source"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Interactive"})}),(0,t.jsx)(n.td,{children:"Developer workstation"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"prismctl login"})}),(0,t.jsx)(n.td,{children:"Device code flow"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Service Account"})}),(0,t.jsx)(n.td,{children:"CI/CD, automation"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"PRISM_TOKEN=<jwt> prismctl ..."})}),(0,t.jsx)(n.td,{children:"Environment variable"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Local (Dex)"})}),(0,t.jsx)(n.td,{children:"Local development"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"prismctl login --local"})}),(0,t.jsx)(n.td,{children:"Dex IDP (see ADR-046)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Custom Issuer"})}),(0,t.jsx)(n.td,{children:"Enterprise SSO"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"prismctl login --issuer <url>"})}),(0,t.jsx)(n.td,{children:"Custom OIDC provider"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"service-account-authentication",children:"Service Account Authentication"}),"\n",(0,t.jsx)(n.p,{children:"For automation (CI/CD pipelines, cron jobs), use service account tokens:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Export token from secret manager\nexport PRISM_TOKEN=$(vault kv get -field=token prism/ci-service)\n\n# Use prismctl with service account token\nprismctl namespace list\n# CLI detects PRISM_TOKEN and uses it instead of cached token\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Service Account Token Claims"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "iss": "https://idp.example.com",\n  "sub": "service:prism-ci",\n  "aud": "prismctl-api",\n  "exp": 1696867200,\n  "iat": 1696863600,\n  "email": "ci-service@prism.local",\n  "groups": ["ci-automation"],\n  "scope": "admin:read admin:write"\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"authentication-flow-implementation",children:"Authentication Flow Implementation"}),"\n",(0,t.jsx)(n.p,{children:"The CLI authentication is implemented in the Admin gRPC client wrapper:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'// internal/client/auth.go\npackage client\n\nimport (\n    "context"\n    "encoding/json"\n    "fmt"\n    "os"\n    "path/filepath"\n    "time"\n\n    "golang.org/x/oauth2"\n)\n\ntype TokenCache struct {\n    AccessToken  string    `json:"access_token"`\n    RefreshToken string    `json:"refresh_token"`\n    TokenType    string    `json:"token_type"`\n    ExpiresAt    time.Time `json:"expires_at"`\n    IssuedAt     time.Time `json:"issued_at"`\n    Issuer       string    `json:"issuer"`\n    Principal    string    `json:"principal"`\n    Groups       []string  `json:"groups"`\n}\n\nfunc LoadToken() (*TokenCache, error) {\n    // Check environment variable first\n    if token := os.Getenv("PRISM_TOKEN"); token != "" {\n        return &TokenCache{\n            AccessToken: token,\n            TokenType:   "Bearer",\n        }, nil\n    }\n\n    // Load from cache file\n    home, err := os.UserHomeDir()\n    if err != nil {\n        return nil, err\n    }\n\n    tokenPath := filepath.Join(home, ".prism", "token")\n    data, err := os.ReadFile(tokenPath)\n    if err != nil {\n        return nil, fmt.Errorf("not authenticated: %w", err)\n    }\n\n    var cache TokenCache\n    if err := json.Unmarshal(data, &cache); err != nil {\n        return nil, err\n    }\n\n    // Check if token expired\n    if time.Now().After(cache.ExpiresAt) {\n        // Try to refresh\n        return refreshToken(&cache)\n    }\n\n    return &cache, nil\n}\n\nfunc SaveToken(cache *TokenCache) error {\n    home, err := os.UserHomeDir()\n    if err != nil {\n        return err\n    }\n\n    prismDir := filepath.Join(home, ".prism")\n    if err := os.MkdirAll(prismDir, 0700); err != nil {\n        return err\n    }\n\n    tokenPath := filepath.Join(prismDir, "token")\n    data, err := json.MarshalIndent(cache, "", "  ")\n    if err != nil {\n        return err\n    }\n\n    // Write with restricted permissions (0600)\n    return os.WriteFile(tokenPath, data, 0600)\n}\n\nfunc refreshToken(cache *TokenCache) (*TokenCache, error) {\n    if cache.RefreshToken == "" {\n        return nil, fmt.Errorf("no refresh token available")\n    }\n\n    // Use oauth2 library to refresh\n    config := &oauth2.Config{\n        ClientID: "prismctl",\n        Endpoint: oauth2.Endpoint{\n            TokenURL: cache.Issuer + "/oauth/token",\n        },\n    }\n\n    token := &oauth2.Token{\n        RefreshToken: cache.RefreshToken,\n    }\n\n    src := config.TokenSource(context.Background(), token)\n    newToken, err := src.Token()\n    if err != nil {\n        return nil, fmt.Errorf("failed to refresh token: %w", err)\n    }\n\n    cache.AccessToken = newToken.AccessToken\n    cache.ExpiresAt = newToken.Expiry\n    cache.IssuedAt = time.Now()\n\n    // Save updated token\n    if err := SaveToken(cache); err != nil {\n        return nil, err\n    }\n\n    return cache, nil\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"local-development-with-dex",children:"Local Development with Dex"}),"\n",(0,t.jsx)(n.p,{children:"For local testing without cloud OIDC providers, use Dex (see ADR-046):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Start Dex in Docker Compose\ndocker-compose up -d dex\n\n# Login with local Dex\nprismctl login --local\n# Opens: http://localhost:5556/auth\n\n# Login with test user\n# Email: admin@prism.local\n# Password: password\n\n# Token cached, ready to use\nprismctl namespace list\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"References"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"RFC-010: Admin Protocol with OIDC Authentication (complete OIDC specification)"}),"\n",(0,t.jsx)(n.li,{children:"ADR-046: Dex IDP for Local Identity Testing (local development setup)"}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://datatracker.ietf.org/doc/html/rfc8628",children:"OAuth 2.0 Device Authorization Grant (RFC 8628)"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"command-structure",children:"Command Structure"}),"\n",(0,t.jsx)(n.p,{children:"prism\n\u251c\u2500\u2500 namespace\n\u2502   \u251c\u2500\u2500 create      # Create new namespace\n\u2502   \u251c\u2500\u2500 list        # List all namespaces\n\u2502   \u251c\u2500\u2500 describe    # Show namespace details\n\u2502   \u251c\u2500\u2500 update      # Update namespace config\n\u2502   \u2514\u2500\u2500 delete      # Delete namespace\n\u251c\u2500\u2500 backend\n\u2502   \u251c\u2500\u2500 list        # List configured backends\n\u2502   \u251c\u2500\u2500 health      # Check backend health\n\u2502   \u251c\u2500\u2500 stats       # Show backend statistics\n\u2502   \u2514\u2500\u2500 test        # Test backend connectivity\n\u251c\u2500\u2500 session\n\u2502   \u251c\u2500\u2500 list        # List active sessions\n\u2502   \u251c\u2500\u2500 describe    # Show session details\n\u2502   \u251c\u2500\u2500 kill        # Terminate session\n\u2502   \u2514\u2500\u2500 trace       # Trace session requests\n\u251c\u2500\u2500 config\n\u2502   \u251c\u2500\u2500 show        # Display current config\n\u2502   \u251c\u2500\u2500 validate    # Validate config file\n\u2502   \u2514\u2500\u2500 apply       # Apply config changes\n\u251c\u2500\u2500 metrics\n\u2502   \u251c\u2500\u2500 summary     # Overall metrics summary\n\u2502   \u251c\u2500\u2500 namespace   # Namespace-level metrics\n\u2502   \u2514\u2500\u2500 export      # Export metrics (Prometheus format)\n\u251c\u2500\u2500 shadow\n\u2502   \u251c\u2500\u2500 enable      # Enable shadow traffic\n\u2502   \u251c\u2500\u2500 disable     # Disable shadow traffic\n\u2502   \u2514\u2500\u2500 status      # Show shadow traffic status\n\u2514\u2500\u2500 plugin\n\u251c\u2500\u2500 list        # List installed plugins\n\u251c\u2500\u2500 install     # Install plugin from registry\n\u251c\u2500\u2500 update      # Update plugin version\n\u251c\u2500\u2500 enable      # Enable plugin\n\u251c\u2500\u2500 disable     # Disable plugin\n\u251c\u2500\u2500 status      # Show plugin health and metrics\n\u251c\u2500\u2500 reload      # Hot-reload plugin code\n\u2514\u2500\u2500 logs        # View plugin logs"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n## Command Specifications\n\n### Namespace Management\n\n#### Create Namespace\n\n"})}),"\n",(0,t.jsx)(n.h1,{id:"preferred-declarative-mode-from-config-file",children:"Preferred: Declarative mode from config file"}),"\n",(0,t.jsx)(n.p,{children:"prismctl namespace create --config namespace.yaml"}),"\n",(0,t.jsx)(n.h1,{id:"config-file-discovery-searches--and-parent-dirs-for-configyaml",children:"Config file discovery (searches . and parent dirs for .config.yaml)"}),"\n",(0,t.jsx)(n.p,{children:"prismctl namespace create my-app  # Uses .config.yaml from current or parent dir"}),"\n",(0,t.jsx)(n.h1,{id:"inline-configuration-for-simple-cases-or-scripting",children:"Inline configuration (for simple cases or scripting)"}),"\n",(0,t.jsxs)(n.p,{children:["prismctl namespace create my-app ",(0,t.jsx)(n.br,{}),"\n--backend postgres ",(0,t.jsx)(n.br,{}),"\n--pattern keyvalue ",(0,t.jsx)(n.br,{}),"\n--consistency strong ",(0,t.jsx)(n.br,{}),"\n--cache-ttl 300"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n**Output (Rich table)**:\n\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n\u2503 Namespace  \u2503 Backend  \u2503 Pattern    \u2503 Status       \u2503\n\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n\u2502 my-app     \u2502 postgres \u2502 keyvalue   \u2502 \u2713 Created    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\nCreated namespace 'my-app' successfully\ngRPC endpoint: localhost:50051\nAdmin endpoint: localhost:50052\n"})}),"\n",(0,t.jsx)(n.h4,{id:"list-namespaces",children:"List Namespaces"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Default table view\nprismctl namespace list\n\n# JSON output for scripting\nprismctl namespace list --output json\n\n# Filter by backend\nprismctl namespace list --backend redis\n\n# Show inactive namespaces\nprismctl namespace list --include-inactive\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Output"}),":\n\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n\u2503 Namespace      \u2503 Backend    \u2503 Pattern    \u2503 Sessions \u2503 RPS        \u2503\n\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n\u2502 user-profiles  \u2502 postgres   \u2502 keyvalue   \u2502 24       \u2502 1,234      \u2502\n\u2502 event-stream   \u2502 kafka      \u2502 stream     \u2502 8        \u2502 45,678     \u2502\n\u2502 session-cache  \u2502 redis      \u2502 cache      \u2502 156      \u2502 89,012     \u2502\n\u2502 metrics-olap   \u2502 clickhouse \u2502 timeseries \u2502 4        \u2502 12,345     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n#### Describe Namespace\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"prismctl namespace describe my-app"}),"\n",(0,t.jsx)(n.h1,{id:"include-recent-errors",children:"Include recent errors"}),"\n",(0,t.jsx)(n.p,{children:"prismctl namespace describe my-app --show-errors"}),"\n",(0,t.jsx)(n.h1,{id:"include-configuration",children:"Include configuration"}),"\n",(0,t.jsx)(n.p,{children:"prismctl namespace describe my-app --show-config"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n**Output**:\nNamespace: my-app\nStatus: Active\nCreated: 2025-10-01 14:23:45 UTC\nUpdated: 2025-10-08 09:12:34 UTC\n\nBackend Configuration:\n  Type: PostgreSQL\n  Pattern: KeyValue\n  Connection: postgres://prism-pg-1:5432/prism_my_app\n  Consistency: Strong\n  Connection Pool: 20 max connections\n\nPerformance:\n  Current RPS: 1,234\n  P50 Latency: 2.3ms\n  P99 Latency: 12.7ms\n  Error Rate: 0.02%\n\nActive Sessions: 24\n  \u251c\u2500 session-abc123: 2 connections, 45 RPS\n  \u251c\u2500 session-def456: 5 connections, 234 RPS\n  \u2514\u2500 ... (22 more)\n\nRecent Errors (last 10):\n  [2025-10-08 09:05:12] Connection timeout (1 occurrence)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"backend-management",children:"Backend Management"}),"\n",(0,t.jsx)(n.h4,{id:"health-check",children:"Health Check"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Check all backends\nprismctl backend health\n\n# Check specific backend\nprismctl backend health --backend postgres\n\n# Detailed health check with diagnostics\nprismctl backend health --detailed\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Output"}),":\nBackend Health Status\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501"]}),"\n",(0,t.jsx)(n.p,{children:"\u2713 PostgreSQL (postgres-1)\nStatus: Healthy\nLatency: 1.2ms\nConnections: 45/100 used\nLast Check: 2s ago"}),"\n",(0,t.jsx)(n.p,{children:"\u2713 Redis (redis-cache-1)\nStatus: Healthy\nLatency: 0.3ms\nMemory: 2.1GB / 8GB\nLast Check: 2s ago"}),"\n",(0,t.jsx)(n.p,{children:"\u2713 ClickHouse (clickhouse-1)\nStatus: Healthy\nLatency: 3.4ms\nQueries: 234 active\nLast Check: 2s ago"}),"\n",(0,t.jsx)(n.p,{children:"\u2717 Kafka (kafka-1)\nStatus: Degraded\nError: Connection refused to broker-3\nLast Success: 5m ago\nAction: Check broker-3 connectivity"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n#### Backend Statistics\n\n"})}),"\n",(0,t.jsx)(n.h1,{id:"show-stats-for-all-backends",children:"Show stats for all backends"}),"\n",(0,t.jsx)(n.p,{children:"prismctl backend stats"}),"\n",(0,t.jsx)(n.h1,{id:"stats-for-specific-namespace",children:"Stats for specific namespace"}),"\n",(0,t.jsx)(n.p,{children:"prismctl backend stats --namespace my-app"}),"\n",(0,t.jsx)(n.h1,{id:"export-to-json",children:"Export to JSON"}),"\n",(0,t.jsx)(n.p,{children:"prismctl backend stats --output json"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### Session Management\n\n#### List Sessions\n\n"})}),"\n",(0,t.jsx)(n.h1,{id:"list-all-active-sessions-across-all-namespaces",children:"List all active sessions across all namespaces"}),"\n",(0,t.jsx)(n.p,{children:"prismctl session list"}),"\n",(0,t.jsx)(n.h1,{id:"scope-to-specific-namespace-preferred-for-focused-inspection",children:"Scope to specific namespace (preferred for focused inspection)"}),"\n",(0,t.jsx)(n.p,{children:"prismctl session list --namespace my-app"}),"\n",(0,t.jsx)(n.h1,{id:"scope-using-config-file-configyaml-must-specify-namespace",children:"Scope using config file (.config.yaml must specify namespace)"}),"\n",(0,t.jsx)(n.p,{children:"prismctl session list  # Auto-scopes if .config.yaml has namespace set"}),"\n",(0,t.jsx)(n.h1,{id:"show-long-running-sessions",children:"Show long-running sessions"}),"\n",(0,t.jsx)(n.p,{children:'prismctl session list --duration ">1h"'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n**Output**:\n\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n\u2503 Session ID    \u2503 Principal            \u2503 Namespace      \u2503 Duration   \u2503 Requests   \u2503 RPS        \u2503\n\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n\u2502 sess-abc123   \u2502 alice@company.com    \u2502 user-profiles  \u2502 2h 34m     \u2502 456,789    \u2502 45         \u2502\n\u2502 sess-def456   \u2502 user-api.prod (svc)  \u2502 event-stream   \u2502 45m        \u2502 123,456    \u2502 234        \u2502\n\u2502 sess-ghi789   \u2502 bob@company.com      \u2502 session-cache  \u2502 12m        \u2502 89,012     \u2502 567        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,t.jsx)(n.h4,{id:"trace-session",children:"Trace Session"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Live trace of session requests\nprismctl session trace sess-abc123\n\n# Trace with filtering\nprismctl session trace sess-abc123 --min-latency 100ms\n\n# Export trace to file\nprismctl session trace sess-abc123 --duration 60s --output trace.json\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Output (live streaming)"}),":\nTracing session sess-abc123 (Ctrl+C to stop)\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501"]}),"\n",(0,t.jsx)(n.p,{children:"09:15:23.456 | GET    | user_profiles:user:12345    | 2.3ms  | \u2713\n09:15:23.489 | SET    | user_profiles:user:12345    | 3.1ms  | \u2713\n09:15:23.512 | GET    | user_profiles:user:67890    | 1.8ms  | \u2713\n09:15:23.534 | DELETE | user_profiles:user:11111    | 145ms  | \u2717 Not Found"}),"\n",(0,t.jsx)(n.p,{children:"Statistics:\nRequests: 4\nSuccess: 3 (75%)\nAvg Latency: 38.05ms\nP99 Latency: 145ms"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### Configuration Management\n\n#### Show Configuration\n\n"})}),"\n",(0,t.jsx)(n.h1,{id:"show-proxy-wide-configuration",children:"Show proxy-wide configuration"}),"\n",(0,t.jsx)(n.p,{children:"prismctl config show"}),"\n",(0,t.jsx)(n.h1,{id:"show-namespace-specific-config-scoped-view",children:"Show namespace-specific config (scoped view)"}),"\n",(0,t.jsx)(n.p,{children:"prismctl config show --namespace my-app"}),"\n",(0,t.jsx)(n.h1,{id:"auto-scope-using-configyaml-if-namespace-specified-in-config",children:"Auto-scope using .config.yaml (if namespace specified in config)"}),"\n",(0,t.jsx)(n.p,{children:"prismctl config show  # Uses namespace from .config.yaml if present"}),"\n",(0,t.jsx)(n.h1,{id:"export-configuration",children:"Export configuration"}),"\n",(0,t.jsx)(n.p,{children:"prismctl config show --output yaml > prism-config.yaml"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n#### Validate Configuration\n\n"})}),"\n",(0,t.jsx)(n.h1,{id:"validate-config-file-before-applying",children:"Validate config file before applying"}),"\n",(0,t.jsx)(n.p,{children:"prismctl config validate prism-config.yaml"}),"\n",(0,t.jsx)(n.h1,{id:"dry-run-mode",children:"Dry-run mode"}),"\n",(0,t.jsx)(n.p,{children:"prismctl config validate prism-config.yaml --dry-run"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n**Output**:\nValidating configuration: prism-config.yaml\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n\n\u2713 YAML syntax valid\n\u2713 Schema validation passed\n\u2713 Backend connections verified (3/3)\n\u2713 Namespace uniqueness verified\n\u2713 Capacity limits within bounds\n\u2717 Warning: Redis memory limit (16GB) exceeds available (12GB)\n\nValidation: PASSED (1 warning)\nSafe to apply: Yes (with warnings)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"metrics-and-monitoring",children:"Metrics and Monitoring"}),"\n",(0,t.jsx)(n.h4,{id:"metrics-summary",children:"Metrics Summary"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Overall metrics across all namespaces\nprismctl metrics summary\n\n# Namespace-specific metrics (scoped view)\nprismctl metrics summary --namespace my-app\n\n# Auto-scope using .config.yaml\nprismctl metrics summary  # Uses namespace from .config.yaml if present\n\n# Time range filtering\nprismctl metrics summary --since "1h ago" --namespace my-app\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Output"}),":\nPrism Metrics Summary (Last 1 hour)\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501"]}),"\n",(0,t.jsx)(n.p,{children:"Request Volume:\nTotal Requests: 12,456,789\nSuccess Rate: 99.98%\nError Rate: 0.02%"}),"\n",(0,t.jsx)(n.p,{children:"Performance:\nP50 Latency: 2.3ms\nP95 Latency: 8.7ms\nP99 Latency: 23.4ms"}),"\n",(0,t.jsx)(n.p,{children:"Top Namespaces by RPS:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"event-stream      45,678 RPS"}),"\n",(0,t.jsx)(n.li,{children:"session-cache     12,345 RPS"}),"\n",(0,t.jsx)(n.li,{children:"user-profiles      1,234 RPS"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Backend Health:\n\u2713 PostgreSQL    (5 instances)\n\u2713 Redis         (3 instances)\n\u2713 ClickHouse    (2 instances)\n\u2717 Kafka         (1 degraded)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n#### Export Metrics\n\n"})}),"\n",(0,t.jsx)(n.h1,{id:"prometheus-format",children:"Prometheus format"}),"\n",(0,t.jsx)(n.p,{children:"prismctl metrics export --format prometheus > metrics.prom"}),"\n",(0,t.jsx)(n.h1,{id:"json-format-with-metadata",children:"JSON format with metadata"}),"\n",(0,t.jsx)(n.p,{children:"prismctl metrics export --format json --include-metadata > metrics.json"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### Shadow Traffic\n\n#### Enable Shadow Traffic\n\n"})}),"\n",(0,t.jsx)(n.h1,{id:"enable-shadow-traffic-for-postgres-version-upgrade-14--16",children:"Enable shadow traffic for Postgres version upgrade (14 \u2192 16)"}),"\n",(0,t.jsxs)(n.p,{children:["prismctl shadow enable user-profiles ",(0,t.jsx)(n.br,{}),"\n--source postgres-14-primary ",(0,t.jsx)(n.br,{}),"\n--target postgres-16-replica ",(0,t.jsx)(n.br,{}),"\n--percentage 10"]}),"\n",(0,t.jsx)(n.h1,{id:"gradual-rollout-with-automatic-ramp-up",children:"Gradual rollout with automatic ramp-up"}),"\n",(0,t.jsxs)(n.p,{children:["prismctl shadow enable user-profiles ",(0,t.jsx)(n.br,{}),"\n--source postgres-14-primary ",(0,t.jsx)(n.br,{}),"\n--target postgres-16-replica ",(0,t.jsx)(n.br,{}),'\n--ramp-up "10%,25%,50%,100%" ',(0,t.jsx)(n.br,{}),"\n--interval 1h"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n**Output**:\nEnabling shadow traffic for namespace 'user-profiles'\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n\nMigration: Postgres 14 \u2192 Postgres 16 upgrade\n\nConfiguration:\n  Source: postgres-14-primary (current production)\n  Target: postgres-16-replica (upgrade candidate)\n  Initial Percentage: 10%\n  Ramp-up Schedule:\n    \u2022 10% at 09:15:00 (now)\n    \u2022 25% at 10:15:00 (+1h)\n    \u2022 50% at 11:15:00 (+2h)\n    \u2022 100% at 12:15:00 (+3h)\n\n\u2713 Shadow traffic enabled\n  Monitor: prismctl shadow status user-profiles\n  Disable: prismctl shadow disable user-profiles\n"})}),"\n",(0,t.jsx)(n.h4,{id:"shadow-status",children:"Shadow Status"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"prismctl shadow status user-profiles\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Output"}),":\nShadow Traffic Status: user-profiles\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501"]}),"\n",(0,t.jsx)(n.p,{children:"Migration: Postgres 14 \u2192 Postgres 16 upgrade"}),"\n",(0,t.jsx)(n.p,{children:"Status: Active\nCurrent Stage: 25% traffic to target\nNext Stage: 50% at 11:15:00 (+45m)"}),"\n",(0,t.jsx)(n.p,{children:"Backends:\nSource: postgres-14-primary (Postgres 14.10)\nTarget: postgres-16-replica (Postgres 16.1)"}),"\n",(0,t.jsx)(n.p,{children:"Traffic Distribution:\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588           \u2502 75% \u2192 postgres-14-primary\n\u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                               \u2502 25% \u2192 postgres-16-replica\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"}),"\n",(0,t.jsx)(n.p,{children:"Comparison Metrics:\n\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n\u2503 Metric     \u2503 PG 14 (Source)     \u2503 PG 16 (Target)     \u2503 Delta      \u2503\n\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n\u2502 P50        \u2502 2.3ms              \u2502 2.1ms              \u2502 -9%        \u2502\n\u2502 P99        \u2502 12.7ms             \u2502 11.8ms             \u2502 -7%        \u2502\n\u2502 Error Rate \u2502 0.02%              \u2502 0.01%              \u2502 -50%       \u2502\n\u2502 QPS        \u2502 1,234              \u2502 1,234              \u2502 0%         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"}),"\n",(0,t.jsx)(n.p,{children:"Query Compatibility:\n\u2713 All queries compatible with PG 16\n\u2713 No deprecated features detected\n\u2713 Performance parity achieved"}),"\n",(0,t.jsx)(n.p,{children:"\u2713 Target performing well, ready for next stage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### Plugin Management\n\nPlugin commands manage backend plugins (installation, updates, health monitoring, hot-reload).\n\nFor complete plugin development guide, see [RFC-008: Plugin Development Experience](/rfc/rfc-008.md#plugin-development-experience).\n\n#### List Plugins\n\n"})}),"\n",(0,t.jsx)(n.h1,{id:"list-all-installed-plugins",children:"List all installed plugins"}),"\n",(0,t.jsx)(n.p,{children:"prismctl plugin list"}),"\n",(0,t.jsx)(n.h1,{id:"filter-by-status",children:"Filter by status"}),"\n",(0,t.jsx)(n.p,{children:"prismctl plugin list --status enabled\nprismctl plugin list --status disabled"}),"\n",(0,t.jsx)(n.h1,{id:"show-plugin-versions",children:"Show plugin versions"}),"\n",(0,t.jsx)(n.p,{children:"prismctl plugin list --show-versions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n**Output**:\n\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n\u2503 Plugin       \u2503 Version \u2503 Status   \u2503 Namespaces       \u2503 Health     \u2503\n\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n\u2502 postgres     \u2502 1.2.0   \u2502 enabled  \u2502 45 namespaces    \u2502 \u2713 Healthy  \u2502\n\u2502 redis        \u2502 2.1.3   \u2502 enabled  \u2502 123 namespaces   \u2502 \u2713 Healthy  \u2502\n\u2502 kafka        \u2502 3.0.1   \u2502 enabled  \u2502 18 namespaces    \u2502 \u26a0 Degraded \u2502\n\u2502 clickhouse   \u2502 1.5.0   \u2502 disabled \u2502 0 namespaces     \u2502 - Disabled \u2502\n\u2502 mongodb      \u2502 0.9.0   \u2502 enabled  \u2502 7 namespaces     \u2502 \u2713 Healthy  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,t.jsx)(n.h4,{id:"install-plugin",children:"Install Plugin"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Install from registry (default: latest version)\nprismctl plugin install mongodb\n\n# Install specific version\nprismctl plugin install mongodb --version 1.0.0\n\n# Install from local path (development)\nprismctl plugin install --local /path/to/mongodb-plugin.so\n\n# Install with custom config\nprismctl plugin install mongodb --config plugin-config.yaml\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Output"}),":\nInstalling plugin: mongodb\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501"]}),"\n",(0,t.jsx)(n.p,{children:"\u2713 Downloaded mongodb-plugin v1.0.0 (5.2 MB)\n\u2713 Verified plugin signature\n\u2713 Loaded plugin library\n\u2713 Initialized plugin\n\u2713 Health check passed"}),"\n",(0,t.jsx)(n.p,{children:"Plugin 'mongodb' installed successfully\nSupported operations: get, set, query, aggregate\nReady to create namespaces with backend: mongodb"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n#### Update Plugin\n\n"})}),"\n",(0,t.jsx)(n.h1,{id:"update-to-latest-version",children:"Update to latest version"}),"\n",(0,t.jsx)(n.p,{children:"prismctl plugin update mongodb"}),"\n",(0,t.jsx)(n.h1,{id:"update-to-specific-version",children:"Update to specific version"}),"\n",(0,t.jsx)(n.p,{children:"prismctl plugin update mongodb --version 1.1.0"}),"\n",(0,t.jsx)(n.h1,{id:"dry-run-mode-check-compatibility-without-applying",children:"Dry-run mode (check compatibility without applying)"}),"\n",(0,t.jsx)(n.p,{children:"prismctl plugin update mongodb --dry-run"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n**Output (with warnings)**:\nUpdating plugin: mongodb (1.0.0 \u2192 1.1.0)\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n\n\u26a0 Warning: 7 namespaces using this plugin will be restarted\n  - mongodb-cache\n  - user-sessions\n  - product-catalog\n  - (4 more...)\n\n\u2713 Downloaded mongodb-plugin v1.1.0 (5.3 MB)\n\u2713 Verified plugin signature\n\nProceed with update? [y/N]: y\n\n\u2713 Stopped old plugin instances\n\u2713 Loaded new plugin version\n\u2713 Migrated plugin state\n\u2713 Restarted namespaces (7/7 healthy)\n\nPlugin 'mongodb' updated successfully (1.0.0 \u2192 1.1.0)\n"})}),"\n",(0,t.jsx)(n.h4,{id:"enabledisable-plugin",children:"Enable/Disable Plugin"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Disable plugin (prevent new namespaces, keep existing running)\nprismctl plugin disable kafka\n\n# Enable previously disabled plugin\nprismctl plugin enable kafka\n\n# Force disable (stop all namespaces using this plugin)\nprismctl plugin disable kafka --force\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Output"}),":\nDisabling plugin: kafka\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501"]}),"\n",(0,t.jsx)(n.p,{children:"\u26a0 18 namespaces currently using this plugin"}),"\n",(0,t.jsx)(n.p,{children:"Actions:\n\u2713 Prevent new namespaces from using kafka backend\n\u2713 Existing namespaces will continue running\n\u26a0 Use --force to stop all kafka namespaces"}),"\n",(0,t.jsx)(n.p,{children:"Plugin 'kafka' disabled successfully"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n#### Plugin Status\n\n"})}),"\n",(0,t.jsx)(n.h1,{id:"view-plugin-health-and-detailed-metrics",children:"View plugin health and detailed metrics"}),"\n",(0,t.jsx)(n.p,{children:"prismctl plugin status mongodb"}),"\n",(0,t.jsx)(n.h1,{id:"include-recent-errors-1",children:"Include recent errors"}),"\n",(0,t.jsx)(n.p,{children:"prismctl plugin status mongodb --show-errors"}),"\n",(0,t.jsx)(n.h1,{id:"live-monitoring-mode",children:"Live monitoring mode"}),"\n",(0,t.jsx)(n.p,{children:"prismctl plugin status mongodb --watch"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n**Output**:\nPlugin Status: mongodb (v1.0.0)\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n\nHealth: \u2713 Healthy\nStatus: Enabled\nDeployment: Sidecar (gRPC: localhost:50105)\n\nNamespaces Using Plugin: 7\n  \u251c\u2500 mongodb-cache (active, 1234 RPS)\n  \u251c\u2500 user-sessions (active, 567 RPS)\n  \u2514\u2500 ... (5 more)\n\nPerformance Metrics (Last 5 minutes):\n  Requests: 456,789 total (98.5% success rate)\n  Latency:\n    P50: 2.1ms\n    P99: 8.3ms\n    P999: 24.7ms\n  Connections: 45 active, 12 idle\n\nResource Usage:\n  CPU: 1.2 cores (30% of limit)\n  Memory: 1.8 GB (22% of limit)\n  Network: 245 MB/s in, 312 MB/s out\n\nRecent Errors (last 10):\n  [09:15:23] Connection timeout to mongodb-1 (1 occurrence)\n  [09:12:45] Query timeout for aggregate operation (3 occurrences)\n"})}),"\n",(0,t.jsx)(n.h4,{id:"hot-reload-plugin",children:"Hot-Reload Plugin"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Reload plugin code without restarting namespaces\nprismctl plugin reload mongodb\n\n# Reload with validation\nprismctl plugin reload mongodb --validate\n\n# Reload and tail logs\nprismctl plugin reload mongodb --tail\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Output"}),":\nReloading plugin: mongodb\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501"]}),"\n",(0,t.jsx)(n.p,{children:"\u2713 Built new plugin binary\n\u2713 Verified plugin signature\n\u2713 Validated plugin compatibility\n\u2713 Loaded new plugin instance\n\u2713 Migrated active connections (45 connections)\n\u2713 Switched traffic to new instance\n\u2713 Drained old instance"}),"\n",(0,t.jsx)(n.p,{children:"Plugin 'mongodb' reloaded successfully\nNamespaces affected: 7 (all healthy)\nReload time: 2.3s (zero downtime)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n#### View Plugin Logs\n\n"})}),"\n",(0,t.jsx)(n.h1,{id:"view-recent-logs",children:"View recent logs"}),"\n",(0,t.jsx)(n.p,{children:"prismctl plugin logs mongodb"}),"\n",(0,t.jsx)(n.h1,{id:"follow-logs-live-tail",children:"Follow logs (live tail)"}),"\n",(0,t.jsx)(n.p,{children:"prismctl plugin logs mongodb --follow"}),"\n",(0,t.jsx)(n.h1,{id:"filter-by-log-level",children:"Filter by log level"}),"\n",(0,t.jsx)(n.p,{children:"prismctl plugin logs mongodb --level error"}),"\n",(0,t.jsx)(n.h1,{id:"show-logs-from-specific-time-range",children:"Show logs from specific time range"}),"\n",(0,t.jsx)(n.p,{children:'prismctl plugin logs mongodb --since "1h ago"'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'\n**Output**:\nTailing logs: mongodb (Ctrl+C to stop)\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n\n09:15:23.456 INFO  Initialized connection pool (size: 20)\n09:15:23.789 INFO  Health check passed\n09:15:24.123 DEBUG Executing query: {"op": "find", "collection": "users"}\n09:15:24.156 DEBUG Query completed in 33ms\n09:15:25.234 WARN  Connection to mongodb-1 timeout, retrying...\n09:15:25.567 INFO  Connection re-established\n'})}),"\n",(0,t.jsx)(n.h3,{id:"plugin-development-workflow",children:"Plugin Development Workflow"}),"\n",(0,t.jsx)(n.p,{children:"For developers creating new plugins, the CLI provides scaffolding and testing tools:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create new plugin from template\nprism-plugin-init --name mybackend --language rust\n\n# Test plugin locally (without Prism proxy)\ncd mybackend-plugin\nprismctl plugin test --config test-config.yaml\n\n# Build and package plugin\nprismctl plugin build\n\n# Publish to registry (for distribution)\nprismctl plugin publish --registry https://plugins.prism.io\n"})}),"\n",(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.a,{href:"/rfc/rfc-008#plugin-development-experience",children:"RFC-008: Plugin Development Experience"})," for complete development guide."]}),"\n",(0,t.jsx)(n.h2,{id:"protobuf-integration",children:"Protobuf Integration"}),"\n",(0,t.jsx)(n.p,{children:"The CLI communicates with Prism via the Admin gRPC API defined in RFC-003:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-protobuf",children:"// CLI uses these services from RFC-003\nservice AdminService {\n  // Namespace operations\n  rpc CreateNamespace(CreateNamespaceRequest) returns (Namespace);\n  rpc ListNamespaces(ListNamespacesRequest) returns (ListNamespacesResponse);\n  rpc DescribeNamespace(DescribeNamespaceRequest) returns (Namespace);\n  rpc UpdateNamespace(UpdateNamespaceRequest) returns (Namespace);\n  rpc DeleteNamespace(DeleteNamespaceRequest) returns (DeleteNamespaceResponse);\n\n  // Backend operations\n  rpc ListBackends(ListBackendsRequest) returns (ListBackendsResponse);\n  rpc CheckBackendHealth(HealthCheckRequest) returns (HealthCheckResponse);\n  rpc GetBackendStats(BackendStatsRequest) returns (BackendStatsResponse);\n\n  // Session operations\n  rpc ListSessions(ListSessionsRequest) returns (ListSessionsResponse);\n  rpc DescribeSession(DescribeSessionRequest) returns (Session);\n  rpc KillSession(KillSessionRequest) returns (KillSessionResponse);\n  rpc TraceSession(TraceSessionRequest) returns (stream TraceEvent);\n\n  // Configuration operations\n  rpc GetConfig(GetConfigRequest) returns (Config);\n  rpc ValidateConfig(ValidateConfigRequest) returns (ValidationResult);\n  rpc ApplyConfig(ApplyConfigRequest) returns (ApplyConfigResponse);\n\n  // Metrics operations\n  rpc GetMetrics(MetricsRequest) returns (MetricsResponse);\n  rpc ExportMetrics(ExportMetricsRequest) returns (ExportMetricsResponse);\n\n  // Shadow traffic operations\n  rpc EnableShadowTraffic(ShadowTrafficRequest) returns (ShadowTrafficResponse);\n  rpc DisableShadowTraffic(DisableShadowTrafficRequest) returns (ShadowTrafficResponse);\n  rpc GetShadowStatus(ShadowStatusRequest) returns (ShadowStatus);\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note"}),": The implementation details below were from the original Python proposal. The actual implementation uses ",(0,t.jsx)(n.strong,{children:"Go"})," with Cobra/Viper framework. See ",(0,t.jsx)(n.a,{href:"/adr/adr-040",children:"ADR-040"})," for Go-specific implementation details."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"technology-stack-go-implementation---see-adr-040",children:"Technology Stack (Go Implementation - see ADR-040)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CLI Framework"}),": Cobra (command structure) + Viper (configuration)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"gRPC Client"}),": google.golang.org/grpc + protobuf-generated stubs"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Formatting"}),": Custom table rendering (or external library like pterm)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Configuration"}),": YAML via gopkg.in/yaml.v3"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Testing"}),": testscript for acceptance tests (see ADR-039)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Distribution"}),": Single binary via GitHub releases"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"project-structure-go-implementation",children:"Project Structure (Go Implementation)"}),"\n",(0,t.jsx)(n.p,{children:"tools/\n\u251c\u2500\u2500 cmd/\n\u2502   \u2514\u2500\u2500 prismctl/\n\u2502       \u251c\u2500\u2500 main.go          # CLI entry point\n\u2502       \u251c\u2500\u2500 root.go          # Root command + config\n\u2502       \u251c\u2500\u2500 namespace.go     # Namespace commands\n\u2502       \u251c\u2500\u2500 backend.go       # Backend commands\n\u2502       \u251c\u2500\u2500 session.go       # Session commands\n\u2502       \u251c\u2500\u2500 config.go        # Config commands\n\u2502       \u251c\u2500\u2500 metrics.go       # Metrics commands\n\u2502       \u251c\u2500\u2500 shadow.go        # Shadow traffic commands\n\u2502       \u2514\u2500\u2500 plugin.go        # Plugin management commands\n\u251c\u2500\u2500 internal/\n\u2502   \u251c\u2500\u2500 client/\n\u2502   \u2502   \u251c\u2500\u2500 admin.go         # Admin gRPC client wrapper\n\u2502   \u2502   \u2514\u2500\u2500 auth.go          # Authentication helpers\n\u2502   \u251c\u2500\u2500 formatters/\n\u2502   \u2502   \u251c\u2500\u2500 table.go         # Table formatters\n\u2502   \u2502   \u251c\u2500\u2500 tree.go          # Tree formatters\n\u2502   \u2502   \u2514\u2500\u2500 json.go          # JSON output\n\u2502   \u2514\u2500\u2500 proto/               # Generated protobuf stubs\n\u2502       \u2514\u2500\u2500 admin.pb.go\n\u251c\u2500\u2500 testdata/\n\u2502   \u2514\u2500\u2500 script/              # testscript acceptance tests\n\u2502       \u251c\u2500\u2500 namespace_create.txtar\n\u2502       \u251c\u2500\u2500 session_list.txtar\n\u2502       \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 acceptance_test.go       # testscript runner\n\u251c\u2500\u2500 go.mod\n\u2514\u2500\u2500 go.sum"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### Example Implementation (Namespace Commands)\n\n"})}),"\n",(0,t.jsx)(n.h1,{id:"srcprism_clicommandsnamespacepy",children:"src/prism_cli/commands/namespace.py"}),"\n",(0,t.jsx)(n.p,{children:"import typer\nfrom rich.console import Console\nfrom rich.table import Table\nfrom typing import Optional\nfrom ..client.admin import AdminClient\nfrom ..formatters.table import format_namespace_table"}),"\n",(0,t.jsx)(n.p,{children:'app = typer.Typer(help="Namespace management commands")\nconsole = Console()'}),"\n",(0,t.jsx)(n.p,{children:'@app.command()\ndef create(\nname: str = typer.Argument(..., help="Namespace name"),\nbackend: str = typer.Option(None, help="Backend type (postgres, redis, etc.)"),\npattern: str = typer.Option(None, help="Data access pattern"),\nconsistency: str = typer.Option("eventual", help="Consistency level"),\ncache_ttl: Optional[int] = typer.Option(None, help="Cache TTL in seconds"),\nconfig: Optional[str] = typer.Option(None, help="Path to config file (or .config.yaml)"),\n):\n"""Create a new namespace.'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'Prefers YAML configuration. If --config not specified, searches for .config.yaml\nin current directory and parent directories.\n"""\nclient = AdminClient()\n\n# Load config from file (explicit or discovered)\nif config:\n    config_data = load_yaml_config(config)\nelse:\n    config_data = discover_config()  # Search for .config.yaml\n\n# Override with CLI args if provided\nconfig_data.update({\n    k: v for k, v in {\n        \'backend\': backend,\n        \'pattern\': pattern,\n        \'consistency\': consistency,\n        \'cache_ttl\': cache_ttl,\n    }.items() if v is not None\n})\n\ntry:\n    namespace = client.create_namespace(name=name, **config_data)\n\n    # Display result\n    table = Table(title="Namespace Created")\n    table.add_column("Namespace", style="cyan")\n    table.add_column("Backend", style="green")\n    table.add_column("Pattern", style="yellow")\n    table.add_column("Status", style="green")\n\n    table.add_row(\n        namespace.name,\n        namespace.backend,\n        namespace.pattern,\n        "\u2713 Created"\n    )\n\n    console.print(table)\n    console.print(f"\\nCreated namespace \'{name}\' successfully")\n    console.print(f"gRPC endpoint: {namespace.grpc_endpoint}")\n    console.print(f"Admin endpoint: {namespace.admin_endpoint}")\n\nexcept Exception as e:\n    console.print(f"[red]Error creating namespace: {e}[/red]")\n    raise typer.Exit(1)\n'})}),"\n",(0,t.jsx)(n.p,{children:'@app.command()\ndef list(\noutput: str = typer.Option("table", help="Output format (table, json)"),\nbackend: Optional[str] = typer.Option(None, help="Filter by backend"),\ninclude_inactive: bool = typer.Option(False, help="Include inactive namespaces"),\n):\n"""List all namespaces."""\nclient = AdminClient()'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'try:\n    namespaces = client.list_namespaces(\n        backend=backend,\n        include_inactive=include_inactive,\n    )\n\n    if output == "json":\n        console.print_json([ns.to_dict() for ns in namespaces])\n    else:\n        table = format_namespace_table(namespaces)\n        console.print(table)\n\nexcept Exception as e:\n    console.print(f"[red]Error listing namespaces: {e}[/red]")\n    raise typer.Exit(1)\n'})}),"\n",(0,t.jsx)(n.p,{children:'@app.command()\ndef describe(\nname: str = typer.Argument(..., help="Namespace name"),\nshow_errors: bool = typer.Option(False, help="Show recent errors"),\nshow_config: bool = typer.Option(False, help="Show configuration"),\n):\n"""Describe a namespace in detail."""\nclient = AdminClient()'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'try:\n    namespace = client.describe_namespace(\n        name=name,\n        include_errors=show_errors,\n        include_config=show_config,\n    )\n\n    # Rich formatted output\n    console.print(f"\\n[bold cyan]Namespace: {namespace.name}[/bold cyan]")\n    console.print(f"Status: [green]{namespace.status}[/green]")\n    console.print(f"Created: {namespace.created_at}")\n    console.print(f"Updated: {namespace.updated_at}")\n\n    console.print("\\n[bold]Backend Configuration:[/bold]")\n    console.print(f"  Type: {namespace.backend}")\n    console.print(f"  Pattern: {namespace.pattern}")\n    console.print(f"  Connection: {namespace.connection_string}")\n    console.print(f"  Consistency: {namespace.consistency}")\n\n    console.print("\\n[bold]Performance:[/bold]")\n    console.print(f"  Current RPS: {namespace.current_rps:,}")\n    console.print(f"  P50 Latency: {namespace.p50_latency}ms")\n    console.print(f"  P99 Latency: {namespace.p99_latency}ms")\n    console.print(f"  Error Rate: {namespace.error_rate:.2%}")\n\n    if namespace.sessions:\n        console.print(f"\\n[bold]Active Sessions: {len(namespace.sessions)}[/bold]")\n        for session in namespace.sessions[:3]:\n            console.print(f"  \u251c\u2500 {session.id}: {session.connections} connections, {session.rps} RPS")\n        if len(namespace.sessions) > 3:\n            console.print(f"  \u2514\u2500 ... ({len(namespace.sessions) - 3} more)")\n\n    if show_errors and namespace.errors:\n        console.print("\\n[bold]Recent Errors (last 10):[/bold]")\n        for error in namespace.errors[:10]:\n            console.print(f"  [{error.timestamp}] {error.message} ({error.count} occurrence(s))")\n\nexcept Exception as e:\n    console.print(f"[red]Error describing namespace: {e}[/red]")\n    raise typer.Exit(1)\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### Admin gRPC Client Wrapper\n\n"})}),"\n",(0,t.jsx)(n.h1,{id:"srcprism_cliclientadminpy",children:"src/prism_cli/client/admin.py"}),"\n",(0,t.jsx)(n.p,{children:"import grpc\nfrom typing import List, Optional\nfrom ..proto import admin_pb2, admin_pb2_grpc\nfrom .auth import get_credentials"}),"\n",(0,t.jsx)(n.p,{children:'class AdminClient:\n"""Wrapper around Admin gRPC client for CLI operations."""'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'def __init__(self, endpoint: str = "localhost:50052"):\n    self.endpoint = endpoint\n    self.credentials = get_credentials()\n    self.channel = grpc.secure_channel(\n        endpoint,\n        self.credentials,\n    )\n    self.stub = admin_pb2_grpc.AdminServiceStub(self.channel)\n\ndef create_namespace(\n    self,\n    name: str,\n    backend: str,\n    pattern: str,\n    consistency: str = "eventual",\n    cache_ttl: Optional[int] = None,\n) -> Namespace:\n    """Create a new namespace."""\n    request = admin_pb2.CreateNamespaceRequest(\n        name=name,\n        backend=backend,\n        pattern=pattern,\n        consistency=consistency,\n        cache_ttl=cache_ttl,\n    )\n    response = self.stub.CreateNamespace(request)\n    return Namespace.from_proto(response)\n\ndef list_namespaces(\n    self,\n    backend: Optional[str] = None,\n    include_inactive: bool = False,\n) -> List[Namespace]:\n    """List all namespaces."""\n    request = admin_pb2.ListNamespacesRequest(\n        backend=backend,\n        include_inactive=include_inactive,\n    )\n    response = self.stub.ListNamespaces(request)\n    return [Namespace.from_proto(ns) for ns in response.namespaces]\n\ndef describe_namespace(\n    self,\n    name: str,\n    include_errors: bool = False,\n    include_config: bool = False,\n) -> Namespace:\n    """Get detailed namespace information."""\n    request = admin_pb2.DescribeNamespaceRequest(\n        name=name,\n        include_errors=include_errors,\n        include_config=include_config,\n    )\n    response = self.stub.DescribeNamespace(request)\n    return Namespace.from_proto(response)\n\ndef check_backend_health(\n    self,\n    backend: Optional[str] = None,\n) -> List[BackendHealth]:\n    """Check health of backends."""\n    request = admin_pb2.HealthCheckRequest(backend=backend)\n    response = self.stub.CheckBackendHealth(request)\n    return [BackendHealth.from_proto(h) for h in response.backends]\n\ndef trace_session(\n    self,\n    session_id: str,\n    min_latency_ms: Optional[int] = None,\n):\n    """Stream trace events for a session."""\n    request = admin_pb2.TraceSessionRequest(\n        session_id=session_id,\n        min_latency_ms=min_latency_ms,\n    )\n    for event in self.stub.TraceSession(request):\n        yield TraceEvent.from_proto(event)\n\ndef __enter__(self):\n    return self\n\ndef __exit__(self, *args):\n    self.channel.close()\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n## Use-Case Recommendations\n\n### \u2705 When to Use CLI\n\n- **Operational Tasks**: Health checks, session management, troubleshooting\n- **Automation**: CI/CD pipelines, infrastructure-as-code, scripting\n- **Quick Checks**: Rapid inspection without opening web UI\n- **SSH Sessions**: Remote administration without GUI requirements\n- **Development**: Local testing and debugging during development\n\n### \u274c When CLI is Less Suitable\n\n- **Complex Visualizations**: Graphs, charts, time-series plots (use web UI)\n- **Interactive Exploration**: Clicking through related entities (web UI better)\n- **Long-Running Monitoring**: Real-time dashboards (use web UI or Grafana)\n- **Non-Technical Users**: Prefer graphical interfaces\n\n### Migration to Web UI\n\nThe CLI validates the admin API design and provides immediate value. Web UI development can proceed in parallel:\n\n1. **Phase 1**: CLI delivers all admin functionality\n2. **Phase 2**: Web UI built using same Admin gRPC API\n3. **Phase 3**: Both CLI and Web UI coexist (CLI for automation, UI for exploration)\n\n## Configuration\n\n### Configuration File Discovery\n\nThe CLI follows a hierarchical configuration search strategy:\n\n1. **Explicit `--config` flag**: Highest priority, direct path to config file\n2. **`.config.yaml` in current directory**: Checked first for project-specific config\n3. **`.config.yaml` in parent directories**: Walks up the tree to find inherited config\n4. **`~/.prism/config.yaml`**: User-level global configuration\n5. **Command-line arguments**: Override any config file settings\n\n**Example `.config.yaml` (project-level)**:\n"})}),"\n",(0,t.jsx)(n.h1,{id:"configyaml---project-configuration-for-my-app-namespace",children:".config.yaml - Project configuration for my-app namespace"}),"\n",(0,t.jsx)(n.p,{children:"namespace: my-app  # Default namespace for scoped commands\nendpoint: localhost:50052"}),"\n",(0,t.jsx)(n.p,{children:"backend:\ntype: postgres\npattern: keyvalue\nconsistency: strong\ncache_ttl: 300"}),"\n",(0,t.jsx)(n.h1,{id:"sessions-config-metrics-will-auto-scope-to-this-namespace-unless---namespace-specified",children:"Sessions, config, metrics will auto-scope to this namespace unless --namespace specified"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n**Example `~/.prism/config.yaml` (user-level)**:\n"})}),"\n",(0,t.jsx)(n.h1,{id:"prismconfigyaml---global-cli-configuration",children:"~/.prism/config.yaml - Global CLI configuration"}),"\n",(0,t.jsx)(n.p,{children:"default_endpoint: localhost:50052\nauth:\nmethod: mtls\ncert_path: ~/.prism/client.crt\nkey_path: ~/.prism/client.key\nca_path: ~/.prism/ca.crt"}),"\n",(0,t.jsx)(n.p,{children:"output:\nformat: table  # table, json, yaml\ncolor: auto    # auto, always, never"}),"\n",(0,t.jsx)(n.p,{children:"timeouts:\nconnect: 5s\nrequest: 30s"}),"\n",(0,t.jsx)(n.p,{children:"logging:\nlevel: info\nfile: ~/.prism/cli.log"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n**Usage pattern**:\n"})}),"\n",(0,t.jsx)(n.h1,{id:"in-project-directory-with-configyaml-namespace-my-app",children:"In project directory with .config.yaml (namespace: my-app):"}),"\n",(0,t.jsx)(n.p,{children:"cd ~/projects/my-app\nprismctl session list          # Auto-scopes to my-app namespace\nprismctl metrics summary       # Shows metrics for my-app\nprismctl config show           # Shows my-app configuration"}),"\n",(0,t.jsx)(n.h1,{id:"override-with---namespace-flag",children:"Override with --namespace flag:"}),"\n",(0,t.jsx)(n.p,{children:"prismctl session list --namespace other-app"}),"\n",(0,t.jsx)(n.h1,{id:"parent-directory-search",children:"Parent directory search:"}),"\n",(0,t.jsx)(n.p,{children:"cd ~/projects/my-app/src/handlers\nprismctl session list          # Finds .config.yaml in ~/projects/my-app/"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### Environment Variables\n\n"})}),"\n",(0,t.jsx)(n.h1,{id:"override-config-file-settings",children:"Override config file settings"}),"\n",(0,t.jsx)(n.p,{children:'export PRISM_ENDPOINT="prism.example.com:50052"\nexport PRISM_AUTH_METHOD="oauth2"\nexport PRISM_OUTPUT_FORMAT="json"'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n## Performance and UX\n\n### Performance Targets\n\n- **Command Startup**: &lt;100ms cold start, &lt;50ms warm start\n- **gRPC Calls**: &lt;10ms for simple queries, &lt;100ms for complex operations\n- **Streaming**: Live trace output with &lt;10ms latency\n- **Large Lists**: Pagination and streaming for 1000+ items\n\n### UX Enhancements\n\n- **Rich Formatting**: Colors, tables, trees, progress bars\n- **Config File Discovery**: Automatic `.config.yaml` lookup in current and parent directories\n- **Smart Defaults**: Sensible defaults for all optional parameters\n- **Helpful Errors**: Clear error messages with suggested fixes\n- **Autocomplete**: Shell completion for commands and options\n- **Aliases**: Common shortcuts (e.g., `ns` for `namespace`, `be` for `backend`)\n\n## Testing Strategy\n\n### Unit Tests\n\n"})}),"\n",(0,t.jsx)(n.h1,{id:"teststest_namespacepy",children:"tests/test_namespace.py"}),"\n",(0,t.jsx)(n.p,{children:"from typer.testing import CliRunner\nfrom prism_cli.main import app\nfrom .fixtures.mock_grpc import MockAdminService"}),"\n",(0,t.jsx)(n.p,{children:"runner = CliRunner()"}),"\n",(0,t.jsx)(n.p,{children:'def test_namespace_create():\nwith MockAdminService() as mock:\nmock.set_response("CreateNamespace", Namespace(\nname="test-ns",\nbackend="postgres",\npattern="keyvalue",\n))'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'    result = runner.invoke(app, [\n        "namespace", "create", "test-ns",\n        "--backend", "postgres",\n        "--pattern", "keyvalue",\n    ])\n\n    assert result.exit_code == 0\n    assert "Created namespace \'test-ns\'" in result.stdout\n'})}),"\n",(0,t.jsx)(n.p,{children:'def test_namespace_list_json():\nwith MockAdminService() as mock:\nmock.set_response("ListNamespaces", ListNamespacesResponse(\nnamespaces=[\nNamespace(name="ns1", backend="postgres"),\nNamespace(name="ns2", backend="redis"),\n]\n))'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'    result = runner.invoke(app, ["namespace", "list", "--output", "json"])\n\n    assert result.exit_code == 0\n    data = json.loads(result.stdout)\n    assert len(data) == 2\n    assert data[0]["name"] == "ns1"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### Integration Tests\n\n"})}),"\n",(0,t.jsx)(n.h1,{id:"testsintegrationtest_admin_clientpy",children:"tests/integration/test_admin_client.py"}),"\n",(0,t.jsx)(n.p,{children:"import pytest\nfrom prism_cli.client.admin import AdminClient"}),"\n",(0,t.jsx)(n.p,{children:'@pytest.fixture\ndef admin_client():\n"""Connect to local test proxy."""\nreturn AdminClient(endpoint="localhost:50052")'}),"\n",(0,t.jsx)(n.p,{children:'def test_create_and_list_namespace(admin_client):\n# Create namespace\nns = admin_client.create_namespace(\nname="test-integration",\nbackend="sqlite",\npattern="keyvalue",\n)\nassert ns.name == "test-integration"'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'# List and verify\nnamespaces = admin_client.list_namespaces()\nnames = [ns.name for ns in namespaces]\nassert "test-integration" in names\n\n# Cleanup\nadmin_client.delete_namespace("test-integration")\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n## Deployment\n\n### Installation\n\n"})}),"\n",(0,t.jsx)(n.h1,{id:"install-via-uv-development",children:"Install via uv (development)"}),"\n",(0,t.jsx)(n.p,{children:"cd prism-cli\nuv pip install -e ."}),"\n",(0,t.jsx)(n.h1,{id:"install-from-package-production",children:"Install from package (production)"}),"\n",(0,t.jsx)(n.p,{children:"uv pip install prism-cli"}),"\n",(0,t.jsx)(n.h1,{id:"verify-installation",children:"Verify installation"}),"\n",(0,t.jsx)(n.p,{children:"prismctl --version\nprismctl --help"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### Shell Completion\n\n"})}),"\n",(0,t.jsx)(n.h1,{id:"bash",children:"Bash"}),"\n",(0,t.jsx)(n.p,{children:"prismctl --install-completion bash"}),"\n",(0,t.jsx)(n.h1,{id:"zsh",children:"Zsh"}),"\n",(0,t.jsx)(n.p,{children:"prismctl --install-completion zsh"}),"\n",(0,t.jsx)(n.h1,{id:"fish",children:"Fish"}),"\n",(0,t.jsx)(n.p,{children:"prismctl --install-completion fish"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n## Migration Path\n\n### Phase 1: Core CLI (Week 1-2)\n\n- Namespace CRUD operations\n- Backend health checks\n- Session listing\n- Basic metrics\n\n**Deliverable**: Functional CLI covering 80% of admin use cases\n\n### Phase 2: Advanced Features (Week 3-4)\n\n- Session tracing (streaming)\n- Shadow traffic management\n- Configuration validation\n- Metrics export\n\n**Deliverable**: Complete feature parity with Admin gRPC API\n\n### Phase 3: Polish and Documentation (Week 5-6)\n\n- Comprehensive tests (unit + integration)\n- Shell completion\n- Man pages and documentation\n- CI/CD integration examples\n\n**Deliverable**: Production-ready CLI with excellent docs\n\n### Phase 4: Web UI Development (Parallel)\n\n- RFC-007: Web Admin UI specification\n- Ember.js application using same Admin gRPC API\n- CLI and web UI coexist and complement each other\n\n## Monitoring and Observability\n\n### CLI Usage Metrics\n\nTrack CLI adoption and usage patterns:\n\n- **Command Usage**: Which commands are most popular\n- **Error Rates**: Which commands fail most often\n- **Latency**: gRPC call latency from CLI\n- **Authentication**: Success/failure rates for auth\n\n### Logging\n\nCLI logs structured events:\n\n"})}),"\n",(0,t.jsx)(n.p,{children:'{\n"timestamp": "2025-10-08T09:15:23.456Z",\n"level": "info",\n"command": "namespace create",\n"args": {"name": "my-app", "backend": "postgres"},\n"duration_ms": 234,\n"status": "success"\n}'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n## Security Considerations\n\n- **mTLS by Default**: All gRPC connections use mutual TLS\n- **Credential Storage**: Secure storage for certificates and tokens\n- **Audit Logging**: All admin operations logged server-side\n- **Least Privilege**: Role-based access control (RBAC) enforced by proxy\n- **No Secrets in Logs**: Sanitize sensitive data from CLI logs\n\n## Open Questions\n\n1. **OAuth2 Integration**: Should CLI support OAuth2 device flow for cloud deployments?\n2. **Plugin System**: Allow third-party commands to extend CLI?\n3. **TUI Mode**: Add full-screen TUI for real-time monitoring?\n4. **Multi-Proxy**: Manage multiple Prism proxies from single CLI?\n\n## References\n\n- RFC-003: Admin gRPC API specification\n- Typer Documentation: https://typer.tiangolo.com/\n- Rich Documentation: https://rich.readthedocs.io/\n- Click Documentation: https://click.palletsprojects.com/\n\n## Appendix: Command Reference\n\n### All Commands\n\n"})}),"\n",(0,t.jsxs)(n.p,{children:["prismctl namespace create ",(0,t.jsxs)(n.name,{children:[" [options]\nprismctl namespace list [options]\nprismctl namespace describe ",(0,t.jsxs)(n.name,{children:[" [options]\nprismctl namespace update ",(0,t.jsxs)(n.name,{children:[" [options]\nprismctl namespace delete ",(0,t.jsx)(n.name,{children:" [options]"})]})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:["prismctl backend list [options]\nprismctl backend health [options]\nprismctl backend stats [options]\nprismctl backend test ",(0,t.jsx)(n.backend,{children:" [options]"})]}),"\n",(0,t.jsxs)(n.p,{children:["prismctl session list [options]\nprismctl session describe ",(0,t.jsxs)(s,{children:["\nprismctl session kill ",(0,t.jsxs)(s,{children:["\nprismctl session trace ",(0,t.jsx)(s,{children:" [options]"})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:["prismctl config show [options]\nprismctl config validate ",(0,t.jsxs)(n.file,{children:[" [options]\nprismctl config apply ",(0,t.jsx)(n.file,{children:" [options]"})]})]}),"\n",(0,t.jsxs)(n.p,{children:["prismctl metrics summary [options]\nprismctl metrics namespace ",(0,t.jsx)(n.name,{children:" [options]\nprismctl metrics export [options]"})]}),"\n",(0,t.jsxs)(n.p,{children:["prismctl shadow enable ",(0,t.jsxs)(n.namespace,{children:[" [options]\nprismctl shadow disable ",(0,t.jsxs)(n.namespace,{children:["\nprismctl shadow status ",(0,t.jsx)(n.namespace,{})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"prismctl version\nprismctl help [command]"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n### Global Options\n\n"})}),"\n",(0,t.jsxs)(n.p,{children:["--endpoint ",(0,t.jsxs)(n.url,{children:["        # Proxy endpoint (default: localhost:50052)\n--output ",(0,t.jsxs)(n.format,{children:["       # Output format: table, json, yaml\n--no-color              # Disable colored output\n--verbose, -v           # Verbose logging\n--quiet, -q             # Suppress non-error output\n--config ",(0,t.jsx)(n.file,{children:"         # CLI config file\n--help, -h              # Show help"})]})]})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\n---\n\n**Status**: Ready for Implementation\n**Next Steps**:\n1. Implement core CLI structure with Typer\n2. Add namespace commands as proof-of-concept\n3. Test against local Prism proxy\n4. Iterate based on user feedback\n\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);