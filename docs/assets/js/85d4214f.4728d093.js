"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[30183],{28453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>l});var s=i(96540);const r={},t=s.createContext(r);function d(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(t.Provider,{value:n},e.children)}},35930:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"key-documents","title":"Foundations","description":"Get up to speed on Prism fundamentals through this curated reading path. Each section builds on the previous, taking you from vision to implementation in ~45 minutes of focused reading.","source":"@site/docs/key.md","sourceDirName":".","slug":"/key-documents","permalink":"/prism-data-layer/docs/key-documents","draft":false,"unlisted":false,"editUrl":"https://github.com/jrepp/prism-data-layer/tree/main/docusaurus/docs/key.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Foundations","sidebar_position":2,"id":"key-documents","project_id":"prism-data-layer","doc_uuid":"939d9f73-b542-4d3c-8cd3-43cc04222098"},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/prism-data-layer/docs/intro"},"next":{"title":"Architecture","permalink":"/prism-data-layer/docs/architecture"}}');var r=i(74848),t=i(28453);const d={title:"Foundations",sidebar_position:2,id:"key-documents",project_id:"prism-data-layer",doc_uuid:"939d9f73-b542-4d3c-8cd3-43cc04222098"},l="Essential Reading Guide",a={},c=[{value:"TL;DR: What is Prism?",id:"tldr-what-is-prism",level:2},{value:"The Learning Journey",id:"the-learning-journey",level:2},{value:"Phase 1: The Vision (10 min)",id:"phase-1-the-vision-10-min",level:3},{value:"Phase 2: Core Decisions (15 min)",id:"phase-2-core-decisions-15-min",level:3},{value:"ADR-001: Why Rust for the Proxy (4 min)",id:"adr-001-why-rust-for-the-proxy-4-min",level:4},{value:"ADR-002: Client-Originated Configuration (4 min)",id:"adr-002-client-originated-configuration-4-min",level:4},{value:"ADR-003: Protobuf as Single Source of Truth (4 min)",id:"adr-003-protobuf-as-single-source-of-truth-4-min",level:4},{value:"ADR-004: Local-First Testing Strategy (3 min)",id:"adr-004-local-first-testing-strategy-3-min",level:4},{value:"Phase 3: System Architecture (10 min)",id:"phase-3-system-architecture-10-min",level:3},{value:"Phase 4: Implementation Roadmap (10 min)",id:"phase-4-implementation-roadmap-10-min",level:3},{value:"RFC-018: POC Implementation Strategy (7 min)",id:"rfc-018-poc-implementation-strategy-7-min",level:4},{value:"MEMO-004: Backend Plugin Implementation Guide (3 min)",id:"memo-004-backend-plugin-implementation-guide-3-min",level:4},{value:"Development Practices (5 min)",id:"development-practices-5-min",level:2},{value:"CLAUDE.md (Repository Root)",id:"claudemd-repository-root",level:3},{value:"Your Reading Path",id:"your-reading-path",level:2},{value:"New to Prism? (35 min)",id:"new-to-prism-35-min",level:3},{value:"Implementing a Feature? (20 min)",id:"implementing-a-feature-20-min",level:3},{value:"Writing an ADR/RFC? (10 min)",id:"writing-an-adrrfc-10-min",level:3},{value:"Quick Reference",id:"quick-reference",level:2},{value:"Most Referenced Documents",id:"most-referenced-documents",level:3},{value:"Additional Deep Dives",id:"additional-deep-dives",level:3},{value:"Document Evolution",id:"document-evolution",level:2}];function o(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"essential-reading-guide",children:"Essential Reading Guide"})}),"\n",(0,r.jsx)(n.p,{children:"Get up to speed on Prism fundamentals through this curated reading path. Each section builds on the previous, taking you from vision to implementation in ~45 minutes of focused reading."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"tldr-what-is-prism",children:"TL;DR: What is Prism?"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"The Problem"}),": Netflix-scale organizations need a unified data access layer, but existing solutions (Netflix's Data Gateway) are too slow and hard to self-service."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"The Solution"}),": A Rust-based proxy that's 10-100x faster, with client-originated configuration that enables team self-service while maintaining policy guardrails."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"The Key Insight"}),": Separate ",(0,r.jsx)(n.strong,{children:"what"})," (client APIs), ",(0,r.jsx)(n.strong,{children:"how"})," (patterns), and ",(0,r.jsx)(n.strong,{children:"where"})," (backends) into three layers. Applications declare needs; Prism handles backend selection, provisioning, and reliability patterns."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Performance"}),": P50 <1ms, P99 <10ms, 200k+ RPS per proxy instance."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"the-learning-journey",children:"The Learning Journey"}),"\n",(0,r.jsx)(n.h3,{id:"phase-1-the-vision-10-min",children:"Phase 1: The Vision (10 min)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Read"}),": ",(0,r.jsx)(n.a,{href:"/prds/prd-001",children:"Product Requirements Document (PRD)"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Why start here"}),": Understand the problem Prism solves, who it's for, and what success looks like."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key takeaways"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"50x team scaling"}),": Infrastructure team of 10 supports 500+ app teams"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Zero-downtime migrations"}),": Swap backends without client changes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Self-service provisioning"}),": Teams declare needs; platform provisions resources"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Success metrics"}),": <1ms P50 latency, 10k+ RPS, 99.99% uptime"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"After reading"}),": You'll understand ",(0,r.jsx)(n.em,{children:"why"})," Prism exists and ",(0,r.jsx)(n.em,{children:"who"})," benefits."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"phase-2-core-decisions-15-min",children:"Phase 2: Core Decisions (15 min)"}),"\n",(0,r.jsx)(n.p,{children:"Read these four ADRs in order - they establish Prism's technical foundation:"}),"\n",(0,r.jsxs)(n.h4,{id:"adr-001-why-rust-for-the-proxy-4-min",children:[(0,r.jsx)(n.a,{href:"/adr/adr-001",children:"ADR-001: Why Rust for the Proxy"})," (4 min)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"The choice"}),": Rust instead of JVM (Go/Java/Scala)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"The rationale"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"10-100x performance improvement (P50: 1ms vs 5-50ms)"}),"\n",(0,r.jsx)(n.li,{children:"Memory safety without GC pauses"}),"\n",(0,r.jsx)(n.li,{children:"20MB idle memory vs 500MB+ JVM"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key quote"}),': "Performance is a feature. Users perceive <100ms as instant; every millisecond counts."']}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h4,{id:"adr-002-client-originated-configuration-4-min",children:[(0,r.jsx)(n.a,{href:"/adr/adr-002",children:"ADR-002: Client-Originated Configuration"})," (4 min)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"The choice"}),": Applications declare requirements; Prism provisions infrastructure"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"The rationale"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Applications know their needs best (RPS, consistency, latency)"}),"\n",(0,r.jsx)(n.li,{children:"Platform team sets policy boundaries (approved backends, cost limits)"}),"\n",(0,r.jsx)(n.li,{children:"Self-service scales to hundreds of teams"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-protobuf",children:'message UserEvents {\n  option (prism.access_pattern) = "append_heavy";\n  option (prism.estimated_write_rps) = "10000";\n  option (prism.retention_days) = "90";\n}\n// Prism selects: Kafka with 20 partitions\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h4,{id:"adr-003-protobuf-as-single-source-of-truth-4-min",children:[(0,r.jsx)(n.a,{href:"/adr/adr-003",children:"ADR-003: Protobuf as Single Source of Truth"})," (4 min)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"The choice"}),": Protobuf definitions with custom tags drive all code generation"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"The rationale"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"DRY principle: Define once, generate everywhere"}),"\n",(0,r.jsx)(n.li,{children:"Type safety across languages"}),"\n",(0,r.jsx)(n.li,{children:"Custom tags drive: indexing, PII handling, backend selection"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-protobuf",children:'message UserProfile {\n  string email = 2 [\n    (prism.pii) = "email",\n    (prism.encrypt_at_rest) = true,\n    (prism.mask_in_logs) = true\n  ];\n}\n// Generates: Encryption, masked logging, audit trails\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h4,{id:"adr-004-local-first-testing-strategy-3-min",children:[(0,r.jsx)(n.a,{href:"/adr/adr-004",children:"ADR-004: Local-First Testing Strategy"})," (3 min)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"The choice"}),": Real local backends (SQLite, Docker Postgres) instead of mocks"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"The rationale"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Mocks hide backend-specific behavior"}),"\n",(0,r.jsx)(n.li,{children:"Local backends catch integration bugs early"}),"\n",(0,r.jsx)(n.li,{children:"Testcontainers make this practical"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key practice"}),": If you can't test it locally, you can't test it in CI."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"phase-3-system-architecture-10-min",children:"Phase 3: System Architecture (10 min)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Read"}),": ",(0,r.jsx)(n.a,{href:"/memos/memo-006",children:"MEMO-006: Backend Interface Decomposition & Schema Registry"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Why read this"}),": Understand the three-layer architecture that makes backend swapping possible."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"The three layers"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"Layer 3: Client Protocols (Application APIs)\n         \u2193\nLayer 2: Proxy DAL Patterns (KeyValue, Entity, TimeSeries, Graph)\n         \u2193\nLayer 1: Backend Capabilities (45 thin interfaces)\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key insight"}),": Patterns compose backend interfaces to provide higher-level abstractions."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": Multicast Registry pattern uses:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"keyvalue_basic"})," (for registration storage)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pubsub_basic"})," (for event distribution)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"queue_basic"})," (for durability)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Same pattern works with Redis+NATS+Postgres OR DynamoDB+SNS+SQS by swapping Layer 1 backends."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"phase-4-implementation-roadmap-10-min",children:"Phase 4: Implementation Roadmap (10 min)"}),"\n",(0,r.jsxs)(n.h4,{id:"rfc-018-poc-implementation-strategy-7-min",children:[(0,r.jsx)(n.a,{href:"/rfc/rfc-018",children:"RFC-018: POC Implementation Strategy"})," (7 min)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Why read this"}),": See how we're building Prism incrementally with Walking Skeleton approach."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"The 5 POCs"}),":"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"KeyValue + MemStore"})," (2 weeks) - Simplest possible end-to-end"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"KeyValue + Redis"})," (2 weeks) - Real backend + acceptance testing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PubSub + NATS"})," (2 weeks) - Messaging pattern"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multicast Registry"})," (3 weeks) - Composite pattern (KeyValue + PubSub + Queue)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authentication"})," (2 weeks) - Security + multi-tenancy"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key principle"}),": Build thinnest possible slice end-to-end, then iterate."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h4,{id:"memo-004-backend-plugin-implementation-guide-3-min",children:[(0,r.jsx)(n.a,{href:"/memos/memo-004",children:"MEMO-004: Backend Plugin Implementation Guide"})," (3 min)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Why skim this"}),": See backend priorities and implementability rankings."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Quick reference"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Highest priority"}),": MemStore, Kafka, NATS, PostgreSQL (internal needs)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"External priorities"}),": Redis, SQLite, S3/MinIO, ClickHouse"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Implementability ranking"}),": MemStore (easiest) \u2192 Neptune (hardest)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Use this when"}),": Choosing which backend to implement next."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"development-practices-5-min",children:"Development Practices (5 min)"}),"\n",(0,r.jsx)(n.h3,{id:"claudemd-repository-root",children:(0,r.jsx)(n.a,{href:"https://github.com/jrepp/prism-data-layer/blob/main/CLAUDE.md",children:"CLAUDE.md (Repository Root)"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Why read this"}),": Your guide to contributing to Prism."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Essential sections"}),":"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Documentation Validation"})," - Mandatory before committing docs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TDD Workflow"})," - Red/Green/Refactor with coverage requirements"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Git Commit Format"})," - Concise messages with user prompts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Monorepo Structure"})," - Where things live"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Coverage requirements"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Core Plugin SDK: 85% minimum, 90% target"}),"\n",(0,r.jsx)(n.li,{children:"Plugins (complex): 80% minimum, 85% target"}),"\n",(0,r.jsx)(n.li,{children:"Plugins (simple): 85% minimum, 90% target"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key quote"}),": \"Write tests first. If you can't test it locally, you can't test it in CI.\""]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"your-reading-path",children:"Your Reading Path"}),"\n",(0,r.jsx)(n.h3,{id:"new-to-prism-35-min",children:"New to Prism? (35 min)"}),"\n",(0,r.jsx)(n.p,{children:"Follow this sequence to build complete understanding:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Vision"})," (10 min): ",(0,r.jsx)(n.a,{href:"/prds/prd-001",children:"PRD"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Decisions"})," (15 min): ",(0,r.jsx)(n.a,{href:"/adr/adr-001",children:"ADR-001"}),", ",(0,r.jsx)(n.a,{href:"/adr/adr-002",children:"ADR-002"}),", ",(0,r.jsx)(n.a,{href:"/adr/adr-003",children:"ADR-003"}),", ",(0,r.jsx)(n.a,{href:"/adr/adr-004",children:"ADR-004"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Architecture"})," (10 min): ",(0,r.jsx)(n.a,{href:"/memos/memo-006",children:"MEMO-006"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Development"})," (5 min): ",(0,r.jsx)(n.a,{href:"https://github.com/jrepp/prism-data-layer/blob/main/CLAUDE.md",children:"CLAUDE.md"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"After this"}),": You'll understand Prism's vision, technical foundation, architecture, and development practices."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"implementing-a-feature-20-min",children:"Implementing a Feature? (20 min)"}),"\n",(0,r.jsx)(n.p,{children:"Start with implementation context:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"POC Strategy"})," (7 min): ",(0,r.jsx)(n.a,{href:"/rfc/rfc-018",children:"RFC-018"})," - Which POC phase are we in?"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend Guide"})," (3 min): ",(0,r.jsx)(n.a,{href:"/memos/memo-004",children:"MEMO-004"})," - Backend-specific guidance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Testing Framework"})," (5 min): ",(0,r.jsx)(n.a,{href:"/memos/memo-015",children:"MEMO-015"})," - How to write acceptance tests"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Observability"})," (5 min): ",(0,r.jsx)(n.a,{href:"/memos/memo-016",children:"MEMO-016"})," - Add tracing/metrics"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Then"}),": Follow TDD workflow from ",(0,r.jsx)(n.a,{href:"https://github.com/jrepp/prism-data-layer/blob/main/CLAUDE.md",children:"CLAUDE.md"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"writing-an-adrrfc-10-min",children:"Writing an ADR/RFC? (10 min)"}),"\n",(0,r.jsx)(n.p,{children:"Understand the decision-making context:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Read existing ADRs"}),": See ",(0,r.jsx)(n.a,{href:"/adr",children:"ADR Index"})," for past decisions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Check RFC precedents"}),": See ",(0,r.jsx)(n.a,{href:"/rfc",children:"RFC Index"})," for design patterns"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use templates"}),": ",(0,r.jsx)(n.code,{children:"docs-cms/adr/ADR-000-template.md"})," for ADRs"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key principle"}),": Every significant architectural decision gets an ADR. Every feature design gets an RFC."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"quick-reference",children:"Quick Reference"}),"\n",(0,r.jsx)(n.h3,{id:"most-referenced-documents",children:"Most Referenced Documents"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Document"}),(0,r.jsx)(n.th,{children:"Purpose"}),(0,r.jsx)(n.th,{children:"When to Read"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/prds/prd-001",children:"PRD"})}),(0,r.jsx)(n.td,{children:"Product vision"}),(0,r.jsx)(n.td,{children:"Onboarding, strategic decisions"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.a,{href:"/adr/adr-001",children:"ADR-001"})," - ",(0,r.jsx)(n.a,{href:"/adr/adr-004",children:"ADR-004"})]}),(0,r.jsx)(n.td,{children:"Core decisions"}),(0,r.jsx)(n.td,{children:"Understanding technical foundation"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/memos/memo-006",children:"MEMO-006"})}),(0,r.jsx)(n.td,{children:"Three-layer architecture"}),(0,r.jsx)(n.td,{children:"Designing patterns, understanding backend abstraction"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/rfc/rfc-018",children:"RFC-018"})}),(0,r.jsx)(n.td,{children:"POC roadmap"}),(0,r.jsx)(n.td,{children:"Planning implementation work"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://github.com/jrepp/prism-data-layer/blob/main/CLAUDE.md",children:"CLAUDE.md"})}),(0,r.jsx)(n.td,{children:"Development guide"}),(0,r.jsx)(n.td,{children:"Daily development, code reviews"})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"additional-deep-dives",children:"Additional Deep Dives"}),"\n",(0,r.jsx)(n.p,{children:"Once you're comfortable with foundations, explore these for deeper understanding:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Testing"}),": ",(0,r.jsx)(n.a,{href:"/memos/memo-015",children:"MEMO-015"})," - Cross-backend acceptance testing, ",(0,r.jsx)(n.a,{href:"/memos/memo-030",children:"MEMO-030"})," - Pattern-based test migration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Security"}),": ",(0,r.jsx)(n.a,{href:"/memos/memo-031",children:"MEMO-031"})," - RFC-031 security review, ",(0,r.jsx)(n.a,{href:"/adr/adr-050",children:"ADR-050"})," - Authentication strategy"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance"}),": ",(0,r.jsx)(n.a,{href:"/memos/memo-007",children:"MEMO-007"})," - Podman container optimization, ",(0,r.jsx)(n.a,{href:"/adr/adr-049",children:"ADR-049"})," - Container strategy"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Observability"}),": ",(0,r.jsx)(n.a,{href:"/memos/memo-016",children:"MEMO-016"})," - OpenTelemetry integration, ",(0,r.jsx)(n.a,{href:"/rfc/rfc-016",children:"RFC-016"})," - Local dev infrastructure"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"document-evolution",children:"Document Evolution"}),"\n",(0,r.jsx)(n.p,{children:"This guide evolves as the project grows. When adding foundational documents:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Place in narrative"}),": Where does it fit in the learning journey?"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Add time estimate"}),": How long to read/understand?"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:'Explain "Why read this"'}),": What understanding does it unlock?"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Update reading paths"}),": Does it change the recommended sequence?"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Principle"}),": Every document should have a clear purpose in someone's learning journey."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Reading time estimates assume focused reading with note-taking. Skim faster if reviewing familiar concepts."})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Last updated: 2025-10-14"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);