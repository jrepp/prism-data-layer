"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[83976],{2053:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"intro","title":"Overview","description":"Unify your data access. One API, any backend. Blazing fast.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/prism-data-layer/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/jrepp/prism-data-layer/tree/main/docusaurus/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Overview","sidebar_position":1,"project_id":"prism-data-layer","doc_uuid":"029df111-6f17-42db-8782-facb1eef6d94"},"sidebar":"tutorialSidebar","previous":{"title":"Changelog","permalink":"/prism-data-layer/docs/changelog"},"next":{"title":"Foundations","permalink":"/prism-data-layer/docs/key-documents"}}');var r=s(74848),t=s(28453);const a={title:"Overview",sidebar_position:1,project_id:"prism-data-layer",doc_uuid:"029df111-6f17-42db-8782-facb1eef6d94"},c="Prism Documentation",d={},l=[{value:"\ud83c\udd95 What&#39;s New",id:"-whats-new",level:2},{value:"Core Idea",id:"core-idea",level:2},{value:"Why Prism?",id:"why-prism",level:2},{value:"Unified Interface",id:"unified-interface",level:3},{value:"Self-Service Configuration",id:"self-service-configuration",level:3},{value:"Rust Performance",id:"rust-performance",level:3},{value:"Interface-Based Capabilities",id:"interface-based-capabilities",level:3},{value:"Docs",id:"docs",level:2},{value:"Decisions",id:"decisions",level:3},{value:"Designs",id:"designs",level:3},{value:"Guides",id:"guides",level:3},{value:"Core Concepts",id:"core-concepts",level:2},{value:"Patterns vs Pattern Providers",id:"patterns-vs-pattern-providers",level:3},{value:"Data Models",id:"data-models",level:3},{value:"PII Handling",id:"pii-handling",level:3},{value:"Start Here",id:"start-here",level:2},{value:"Performance",id:"performance",level:2},{value:"Philosophy",id:"philosophy",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"prism-documentation",children:"Prism Documentation"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Unify your data access. One API, any backend. Blazing fast."})}),"\n",(0,r.jsx)(n.p,{children:"Prism is a high-performance data access gateway providing a unified interface to heterogeneous backends (Kafka, Postgres, Redis, NATS). Applications declare requirements; Prism handles provisioning, optimization, and reliability patterns."}),"\n",(0,r.jsx)(n.h2,{id:"-whats-new",children:"\ud83c\udd95 What's New"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/changelog",children:"View Recent Changes \u2192"})})}),"\n",(0,r.jsx)(n.p,{children:"Recent highlights:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Architecture Guide"}),": Comprehensive technical overview with system diagrams"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Three-Layer Design"}),": Separates client API, patterns, and backends"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authorization Boundaries"}),": Policy-driven configuration for team self-service"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"45 Thin Interfaces"}),": Type-safe backend composition across 10 data models"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"core-idea",children:"Core Idea"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Three layers separate what, how, and where"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Client API (What)                \u2502  Applications use stable APIs\n\u2502   KeyValue | PubSub | Queue        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n               \u2193\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Patterns (How)                   \u2502  Prism applies reliability patterns\n\u2502   Outbox | CDC | Claim Check       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n               \u2193\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Backends (Where)                 \u2502  Data stored in optimal backend\n\u2502   Kafka | Postgres | Redis | NATS  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Benefits"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend Migration"}),": Swap Redis \u2192 DynamoDB without client changes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pattern Evolution"}),": Add CDC without API breakage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Configuration-Driven"}),": Declare needs; Prism selects patterns"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Organizational Scale"}),": Teams self-service with policy guardrails"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"why-prism",children:"Why Prism?"}),"\n",(0,r.jsx)(n.h3,{id:"unified-interface",children:"Unified Interface"}),"\n",(0,r.jsx)(n.p,{children:"Single gRPC/HTTP API across all backends. Write once, run anywhere."}),"\n",(0,r.jsx)(n.h3,{id:"self-service-configuration",children:"Self-Service Configuration"}),"\n",(0,r.jsx)(n.p,{children:"Applications declare requirements in protobuf:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-protobuf",children:'message UserEvents {\n  option (prism.access_pattern) = "append_heavy";\n  option (prism.estimated_write_rps) = "10000";\n  option (prism.retention_days) = "90";\n}\n// \u2192 Prism selects Kafka, provisions 20 partitions\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Authorization boundaries"})," prevent misconfigurations:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Guided"}),": Pre-approved backends for all teams (Postgres, Kafka, Redis)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Advanced"}),": Backend-specific tuning with approval"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Expert"}),": Platform team unrestricted access"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Result"}),": Infrastructure team of 10 supports 500+ application teams (50x improvement over manual provisioning)."]}),"\n",(0,r.jsx)(n.h3,{id:"rust-performance",children:"Rust Performance"}),"\n",(0,r.jsx)(n.p,{children:"10-100x faster than JVM alternatives:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"P50"}),": ",(0,r.jsx)(n.code,{children:"<1ms"})," (vs ~5ms JVM)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"P99"}),": ",(0,r.jsx)(n.code,{children:"<10ms"})," (vs ~50ms JVM)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Throughput"}),": 200k+ RPS (vs ~20k JVM)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Memory"}),": 20MB idle (vs ~500MB JVM)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"interface-based-capabilities",children:"Interface-Based Capabilities"}),"\n",(0,r.jsxs)(n.p,{children:["Backends implement ",(0,r.jsx)(n.strong,{children:"thin interfaces"})," (not capability flags):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Redis implements:\n  - keyvalue_basic   (Set, Get, Delete)\n  - keyvalue_scan    (Scan, Count)\n  - keyvalue_ttl     (Expire, GetTTL)\n  - pubsub_basic     (Publish, Subscribe)\n  - stream_basic     (Append, Read)\n  \u2192 16 interfaces total\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Type-safe"}),": Compiler enforces contracts (no runtime surprises)."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"docs",children:"Docs"}),"\n",(0,r.jsx)(n.h3,{id:"decisions",children:"Decisions"}),"\n",(0,r.jsx)(n.p,{children:"Architecture Decision Records (ADRs) capture why technical choices were made."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"When to read"}),": Understanding project philosophy, evaluating alternatives, onboarding."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Start with"}),": ",(0,r.jsx)(n.a,{href:"/adr/adr-001",children:"Why Rust?"})," | ",(0,r.jsx)(n.a,{href:"/adr/adr-002",children:"Client Configuration"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"designs",children:"Designs"}),"\n",(0,r.jsx)(n.p,{children:"Request for Comments (RFCs) provide detailed specifications before implementation."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"When to read"}),": Understanding system designs, implementing features, reviewing proposals."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Start with"}),": ",(0,r.jsx)(n.a,{href:"/rfc/rfc-001",children:"Architecture"})," | ",(0,r.jsx)(n.a,{href:"/rfc/rfc-014",children:"Layered Patterns"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"guides",children:"Guides"}),"\n",(0,r.jsx)(n.p,{children:"Tutorials, references, and troubleshooting for using and developing Prism."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"When to read"}),": Getting started, learning features, debugging issues."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Start with"}),": ",(0,r.jsx)(n.a,{href:"/docs/architecture",children:"Architecture Guide"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"core-concepts",children:"Core Concepts"}),"\n",(0,r.jsx)(n.h3,{id:"patterns-vs-pattern-providers",children:"Patterns vs Pattern Providers"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pattern"}),": Abstract concept (KeyValue, Outbox, Multicast Registry)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pattern Provider"}),": Runtime process implementing pattern"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend Driver"}),": Connection code for specific backends (Kafka, Redis, Postgres)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Pattern Providers"})," use ",(0,r.jsx)(n.strong,{children:"Backend Drivers"})," configured via ",(0,r.jsx)(n.strong,{children:"slots"}),". Backends are configured separately, and slots bind backend interfaces to pattern requirements:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# Backend configuration (connection details)\nbackends:\n  redis-cache:\n    type: redis\n    connection: "redis://localhost:6379/0"\n  nats-messaging:\n    type: nats\n    connection: "nats://localhost:4222"\n  postgres-queue:\n    type: postgres\n    connection: "postgresql://localhost:5432/prism"\n\n# Pattern configuration (slot bindings)\npattern: multicast-registry\nslots:\n  registry:\n    backend: redis-cache      # References backend config\n    interface: keyvalue_basic # Required interface\n  messaging:\n    backend: nats-messaging\n    interface: pubsub_basic\n  durability:\n    backend: postgres-queue\n    interface: queue_basic\n'})}),"\n",(0,r.jsx)(n.p,{children:"Same application code works with different backend combinations (Redis+NATS+Postgres or DynamoDB+SNS+SQS) by changing backend configuration."}),"\n",(0,r.jsx)(n.h3,{id:"data-models",children:"Data Models"}),"\n",(0,r.jsx)(n.p,{children:"Prism provides 10 data models with 45 interfaces:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Model"}),(0,r.jsx)(n.th,{children:"Interfaces"}),(0,r.jsx)(n.th,{children:"Backends"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"KeyValue"})}),(0,r.jsx)(n.td,{children:"6 (basic, scan, ttl, transactional, batch, cas)"}),(0,r.jsx)(n.td,{children:"Redis, Postgres, DynamoDB, MemStore"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"PubSub"})}),(0,r.jsx)(n.td,{children:"5 (basic, wildcards, persistent, filtering, ordering)"}),(0,r.jsx)(n.td,{children:"NATS, Redis, Kafka"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Stream"})}),(0,r.jsx)(n.td,{children:"5 (basic, consumer_groups, replay, retention, partitioning)"}),(0,r.jsx)(n.td,{children:"Kafka, Redis, NATS"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Queue"})}),(0,r.jsx)(n.td,{children:"5 (basic, visibility, dead_letter, priority, delayed)"}),(0,r.jsx)(n.td,{children:"Postgres, SQS, RabbitMQ"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"TimeSeries"})}),(0,r.jsx)(n.td,{children:"4 (basic, aggregation, retention, interpolation)"}),(0,r.jsx)(n.td,{children:"ClickHouse, TimescaleDB, InfluxDB"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"pii-handling",children:"PII Handling"}),"\n",(0,r.jsx)(n.p,{children:"Protobuf annotations drive automatic PII handling:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-protobuf",children:'message UserProfile {\n  string email = 2 [\n    (prism.pii) = "email",\n    (prism.encrypt_at_rest) = true,\n    (prism.mask_in_logs) = true\n  ];\n}\n// \u2192 Generates encryption, masked logging, audit trails\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"start-here",children:"Start Here"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Architecture"}),": Read ",(0,r.jsx)(n.a,{href:"/docs/architecture",children:"Architecture Guide"})," for system overview"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Decisions"}),": Browse ADRs to understand technical choices"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Designs"}),": Review key RFCs (",(0,r.jsx)(n.a,{href:"/rfc/rfc-001",children:"Architecture"}),", ",(0,r.jsx)(n.a,{href:"/rfc/rfc-014",children:"Layered Patterns"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Setup"}),": Follow ",(0,r.jsx)(n.a,{href:"https://github.com/jrepp/prism-data-layer",children:"repository instructions"})]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"performance",children:"Performance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"P50 Latency"}),": ",(0,r.jsx)(n.code,{children:"<1ms"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"P99 Latency"}),": ",(0,r.jsx)(n.code,{children:"<10ms"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Throughput"}),": 10k+ RPS per connection"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Memory"}),": ",(0,r.jsx)(n.code,{children:"<500MB"})," per proxy instance"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"philosophy",children:"Philosophy"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance First"}),": Rust proxy for maximum throughput, minimal latency"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Client Configuration"}),": Applications know their needs best"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Local Testing"}),": Real backends over mocks for realistic testing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pluggable Backends"}),": Clean abstraction allows adding backends without client changes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Code Generation"}),": Protobuf definitions drive all code generation"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["For development practices and project guidance, see ",(0,r.jsx)(n.a,{href:"https://github.com/jrepp/prism-data-layer/blob/main/CLAUDE.md",children:"CLAUDE.md"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var i=s(96540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);