"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[65126],{28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var r=s(96540);const t={},i=r.createContext(t);function a(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:n},e.children)}},31286:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"rfc-035","title":"RFC-035: Pattern Process Launcher with Bulkhead Isolation","description":"Summary","source":"@site/../docs-cms/rfcs/RFC-035-pattern-process-launcher.md","sourceDirName":".","slug":"/rfc-035","permalink":"/prism-data-layer/rfc/rfc-035","draft":false,"unlisted":false,"editUrl":"https://github.com/jrepp/prism-data-layer/tree/main/docs-cms/../docs-cms/rfcs/RFC-035-pattern-process-launcher.md","tags":[{"inline":true,"label":"patterns","permalink":"/prism-data-layer/rfc/tags/patterns"},{"inline":true,"label":"process-management","permalink":"/prism-data-layer/rfc/tags/process-management"},{"inline":true,"label":"bulkhead","permalink":"/prism-data-layer/rfc/tags/bulkhead"},{"inline":true,"label":"isolation","permalink":"/prism-data-layer/rfc/tags/isolation"},{"inline":true,"label":"orchestration","permalink":"/prism-data-layer/rfc/tags/orchestration"}],"version":"current","frontMatter":{"title":"RFC-035: Pattern Process Launcher with Bulkhead Isolation","status":"Proposed","author":"Claude Code","created":"2025-10-15T00:00:00.000Z","updated":"2025-10-15T00:00:00.000Z","tags":["patterns","process-management","bulkhead","isolation","orchestration"],"id":"rfc-035","project_id":"prism-data-access","doc_uuid":"9f4b6e2a-3c5d-4f9b-8a7e-1d2e3f4a5b6c"},"sidebar":"rfcSidebar","previous":{"title":"Robust Process Manager Package Inspired by Kubelet \u2022 RFC-034","permalink":"/prism-data-layer/rfc/rfc-034"}}');var t=s(74848),i=s(28453);const a={title:"RFC-035: Pattern Process Launcher with Bulkhead Isolation",status:"Proposed",author:"Claude Code",created:new Date("2025-10-15T00:00:00.000Z"),updated:new Date("2025-10-15T00:00:00.000Z"),tags:["patterns","process-management","bulkhead","isolation","orchestration"],id:"rfc-035",project_id:"prism-data-access",doc_uuid:"9f4b6e2a-3c5d-4f9b-8a7e-1d2e3f4a5b6c"},l="RFC-035: Pattern Process Launcher with Bulkhead Isolation",c={},o=[{value:"Summary",id:"summary",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Current Situation",id:"current-situation",level:3},{value:"Why an Optional Launcher?",id:"why-an-optional-launcher",level:3},{value:"Bulkhead Isolation Pattern",id:"bulkhead-isolation-pattern",level:3},{value:"Design",id:"design",level:2},{value:"Architecture Components",id:"architecture-components",level:3},{value:"1. Pattern Process Launcher (<code>cmd/pattern-launcher</code>)",id:"1-pattern-process-launcher-cmdpattern-launcher",level:4},{value:"2. Pattern Manifest (<code>patterns/&lt;name&gt;/manifest.yaml</code>)",id:"2-pattern-manifest-patternsnamemanifestyaml",level:4},{value:"3. Launch gRPC API",id:"3-launch-grpc-api",level:4},{value:"Isolation Levels Explained",id:"isolation-levels-explained",level:3},{value:"Isolation Level: NONE (Shared Process Pool)",id:"isolation-level-none-shared-process-pool",level:4},{value:"Isolation Level: NAMESPACE (Tenant Isolation)",id:"isolation-level-namespace-tenant-isolation",level:4},{value:"Isolation Level: SESSION (Maximum Isolation)",id:"isolation-level-session-maximum-isolation",level:4},{value:"Process Lifecycle with procmgr Integration",id:"process-lifecycle-with-procmgr-integration",level:3},{value:"Launch Request Flow",id:"launch-request-flow",level:3},{value:"Pattern Discovery",id:"pattern-discovery",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Implementation Phases",id:"implementation-phases",level:2},{value:"Phase 1: Core Launcher (Week 1)",id:"phase-1-core-launcher-week-1",level:3},{value:"Phase 2: Process Launch (Week 2)",id:"phase-2-process-launch-week-2",level:3},{value:"Phase 3: Isolation Levels (Week 3) \u2705 COMPLETE",id:"phase-3-isolation-levels-week-3--complete",level:3},{value:"Phase 4: Termination and Cleanup (Week 4)",id:"phase-4-termination-and-cleanup-week-4",level:3},{value:"Phase 5: Metrics and Observability (Week 5)",id:"phase-5-metrics-and-observability-week-5",level:3},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Example 1: Proxy Launches Consumer Pattern",id:"example-1-proxy-launches-consumer-pattern",level:3},{value:"Example 2: Local Development Workflow",id:"example-2-local-development-workflow",level:3},{value:"Example 3: Kubernetes Alternative (No Launcher Needed)",id:"example-3-kubernetes-alternative-no-launcher-needed",level:3},{value:"Metrics and Observability",id:"metrics-and-observability",level:2},{value:"Prometheus Metrics",id:"prometheus-metrics",level:3},{value:"Health Check Response",id:"health-check-response",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Alternatives Considered",id:"alternatives-considered",level:2},{value:"Alternative 1: Kubernetes StatefulSets",id:"alternative-1-kubernetes-statefulsets",level:3},{value:"Alternative 2: systemd",id:"alternative-2-systemd",level:3},{value:"Alternative 3: Docker Compose",id:"alternative-3-docker-compose",level:3},{value:"Open Questions",id:"open-questions",level:2},{value:"Success Criteria",id:"success-criteria",level:2},{value:"References",id:"references",level:2},{value:"Appendix A: Launch Request Sequence Diagram",id:"appendix-a-launch-request-sequence-diagram",level:2},{value:"Appendix B: Isolation Level Comparison Table",id:"appendix-b-isolation-level-comparison-table",level:2},{value:"Implementation Status",id:"implementation-status",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"rfc-035-pattern-process-launcher-with-bulkhead-isolation",children:"RFC-035: Pattern Process Launcher with Bulkhead Isolation"})}),"\n",(0,t.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,t.jsxs)(n.p,{children:["This RFC proposes a lightweight process launcher for pattern executables that can run headless and answer launch requests from the Prism proxy. The launcher will be an ",(0,t.jsx)(n.strong,{children:"optional component"})," (alternatives include Kubernetes deployments, systemd, or other orchestrators) that provides lifecycle management using the bulkhead isolation pattern (via ",(0,t.jsx)(n.code,{children:"pkg/isolation"}),") and robust process management (via ",(0,t.jsx)(n.code,{children:"pkg/procmgr"}),"). The launcher will support three isolation levels: None, Namespace, and Session, ensuring fault isolation and proper resource boundaries."]}),"\n",(0,t.jsx)(n.h2,{id:"motivation",children:"Motivation"}),"\n",(0,t.jsx)(n.h3,{id:"current-situation",children:"Current Situation"}),"\n",(0,t.jsx)(n.p,{children:"Prism patterns (Consumer, Producer, Multicast Registry, Claim Check, etc.) currently run as standalone executables that must be launched manually or via external orchestration. The Prism proxy needs a way to:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Launch pattern processes on demand"}),": When a client requests a pattern operation, the proxy must ensure the corresponding pattern process is running"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Manage process lifecycle"}),": Start, monitor health, restart on failure, graceful shutdown"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Isolate failures"}),": Prevent one namespace/session's failures from affecting others (bulkhead pattern)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"List available patterns"}),": Proxy needs to know which patterns are available and their status"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Support multiple deployment models"}),": Local development (direct exec), containerized (Podman/Docker), orchestrated (Kubernetes)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"why-an-optional-launcher",children:"Why an Optional Launcher?"}),"\n",(0,t.jsxs)(n.p,{children:["The pattern process launcher is ",(0,t.jsx)(n.strong,{children:"optional"})," because different deployment models have different orchestration needs:"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Deployment Model"}),(0,t.jsx)(n.th,{children:"Orchestration Method"}),(0,t.jsx)(n.th,{children:"When to Use Launcher"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Local Development"}),(0,t.jsx)(n.td,{children:"Direct exec, Launcher"}),(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Use Launcher"})," - simplest local workflow"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Docker Compose"}),(0,t.jsx)(n.td,{children:"Compose services"}),(0,t.jsx)(n.td,{children:"\u274c Compose handles lifecycle"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Kubernetes"}),(0,t.jsx)(n.td,{children:"Deployments, StatefulSets"}),(0,t.jsx)(n.td,{children:"\u274c K8s handles lifecycle"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Bare Metal / VMs"}),(0,t.jsx)(n.td,{children:"systemd, Launcher"}),(0,t.jsxs)(n.td,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Use Launcher"})," - lightweight alternative to systemd"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Serverless (Lambda)"}),(0,t.jsx)(n.td,{children:"Function invocation"}),(0,t.jsx)(n.td,{children:"\u274c Platform handles lifecycle"})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Key insight"}),": The launcher provides ",(0,t.jsx)(n.strong,{children:"proxy-driven lifecycle control"})," (proxy decides when to start/stop patterns) rather than ",(0,t.jsx)(n.strong,{children:"external orchestration"})," (K8s/systemd decides independently)."]}),"\n",(0,t.jsx)(n.h3,{id:"bulkhead-isolation-pattern",children:"Bulkhead Isolation Pattern"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"bulkhead pattern"}),' (from ship design: compartmentalized hull sections prevent total flooding) isolates processes into separate "compartments" to prevent cascading failures:']}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Pattern Process Launcher (Headless Daemon)         \u2502\n\u2502                                                      \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510            \u2502\n\u2502  \u2502  Isolation     \u2502  \u2502  Process       \u2502            \u2502\n\u2502  \u2502  Manager       \u2502\u2190\u2192\u2502  Manager       \u2502            \u2502\n\u2502  \u2502  (Bulkhead)    \u2502  \u2502  (procmgr)     \u2502            \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518            \u2502\n\u2502          \u2193                    \u2193                     \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2502\n\u2502  \u2502  Process Pool (Isolated by Level)            \u2502  \u2502\n\u2502  \u2502                                               \u2502  \u2502\n\u2502  \u2502  Isolation Level: Namespace                  \u2502  \u2502\n\u2502  \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510           \u2502  \u2502\n\u2502  \u2502  \u2502 ns:tenant-a \u2502  \u2502 ns:tenant-b \u2502           \u2502  \u2502\n\u2502  \u2502  \u2502  Consumer   \u2502  \u2502  Consumer   \u2502           \u2502  \u2502\n\u2502  \u2502  \u2502  Process    \u2502  \u2502  Process    \u2502           \u2502  \u2502\n\u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518           \u2502  \u2502\n\u2502  \u2502                                               \u2502  \u2502\n\u2502  \u2502  Isolation Level: Session                    \u2502  \u2502\n\u2502  \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u2502  \u2502\n\u2502  \u2502  \u2502session:user-1\u2502  \u2502session:user-2\u2502         \u2502  \u2502\n\u2502  \u2502  \u2502  Producer    \u2502  \u2502  Producer    \u2502         \u2502  \u2502\n\u2502  \u2502  \u2502  Process     \u2502  \u2502  Process     \u2502         \u2502  \u2502\n\u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2502  \u2502\n\u2502  \u2502                                               \u2502  \u2502\n\u2502  \u2502  Isolation Level: None                       \u2502  \u2502\n\u2502  \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                             \u2502  \u2502\n\u2502  \u2502  \u2502   shared    \u2502                             \u2502  \u2502\n\u2502  \u2502  \u2502  Registry   \u2502                             \u2502  \u2502\n\u2502  \u2502  \u2502  Process    \u2502                             \u2502  \u2502\n\u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                             \u2502  \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \u2191                           \u2191\n         \u2502 gRPC Launch API           \u2502 Health/Status\n         \u2502                           \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Prism Proxy    \u2502         \u2502  Monitoring     \u2502\n\u2502  (Rust)         \u2502         \u2502  (Prometheus)   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,t.jsx)(n.h2,{id:"design",children:"Design"}),"\n",(0,t.jsx)(n.h3,{id:"architecture-components",children:"Architecture Components"}),"\n",(0,t.jsxs)(n.h4,{id:"1-pattern-process-launcher-cmdpattern-launcher",children:["1. Pattern Process Launcher (",(0,t.jsx)(n.code,{children:"cmd/pattern-launcher"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Headless daemon that:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Listens on gRPC for launch requests from proxy"}),"\n",(0,t.jsxs)(n.li,{children:["Uses ",(0,t.jsx)(n.code,{children:"pkg/isolation.IsolationManager"})," to manage process pools"]}),"\n",(0,t.jsxs)(n.li,{children:["Uses ",(0,t.jsx)(n.code,{children:"pkg/procmgr.ProcessManager"})," for robust process lifecycle"]}),"\n",(0,t.jsx)(n.li,{children:"Discovers available patterns via filesystem (executable manifests)"}),"\n",(0,t.jsx)(n.li,{children:"Exports Prometheus metrics and health endpoints"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:"type PatternLauncher struct {\n    // Configuration\n    config         *LauncherConfig\n    isolationLevel isolation.IsolationLevel\n\n    // Management\n    isolationMgr   *isolation.IsolationManager\n\n    // Pattern discovery\n    patterns       map[string]*PatternManifest\n    patternsMu     sync.RWMutex\n\n    // gRPC server\n    grpcServer     *grpc.Server\n}\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"2-pattern-manifest-patternsnamemanifestyaml",children:["2. Pattern Manifest (",(0,t.jsx)(n.code,{children:"patterns/<name>/manifest.yaml"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Declarative configuration for each pattern:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'name: consumer\nversion: 1.0.0\nexecutable: ./patterns/consumer/consumer\nisolation_level: namespace  # none | namespace | session\nhealthcheck:\n  port: 9090\n  path: /health\n  interval: 30s\nresources:\n  cpu_limit: 1.0\n  memory_limit: 512Mi\nbackend_slots:\n  - name: storage\n    type: postgres\n    required: true\n  - name: messaging\n    type: kafka\n    required: true\nenvironment:\n  LOG_LEVEL: info\n  METRICS_PORT: "9091"\n'})}),"\n",(0,t.jsx)(n.h4,{id:"3-launch-grpc-api",children:"3. Launch gRPC API"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-protobuf",children:'service PatternLauncher {\n    // Launch or get existing pattern process\n    rpc LaunchPattern(LaunchRequest) returns (LaunchResponse);\n\n    // List all running pattern processes\n    rpc ListPatterns(ListPatternsRequest) returns (ListPatternsResponse);\n\n    // Terminate a pattern process\n    rpc TerminatePattern(TerminateRequest) returns (TerminateResponse);\n\n    // Health check\n    rpc Health(HealthRequest) returns (HealthResponse);\n}\n\nmessage LaunchRequest {\n    string pattern_name = 1;          // e.g., "consumer", "producer"\n    IsolationLevel isolation = 2;     // NONE, NAMESPACE, SESSION\n    string namespace = 3;             // Tenant namespace (for NAMESPACE isolation)\n    string session_id = 4;            // Session ID (for SESSION isolation)\n    map<string, string> config = 5;   // Pattern-specific config\n}\n\nmessage LaunchResponse {\n    string process_id = 1;            // Unique process ID\n    ProcessState state = 2;           // STARTING, RUNNING, TERMINATING, etc.\n    string address = 3;               // gRPC address to connect to pattern\n    bool healthy = 4;\n}\n\nmessage ListPatternsResponse {\n    repeated PatternInfo patterns = 1;\n}\n\nmessage PatternInfo {\n    string pattern_name = 1;\n    string process_id = 2;\n    ProcessState state = 3;\n    string address = 4;\n    bool healthy = 5;\n    int64 uptime_seconds = 6;\n    string namespace = 7;\n    string session_id = 8;\n}\n\nenum IsolationLevel {\n    ISOLATION_NONE = 0;\n    ISOLATION_NAMESPACE = 1;\n    ISOLATION_SESSION = 2;\n}\n\nenum ProcessState {\n    STATE_STARTING = 0;\n    STATE_RUNNING = 1;\n    STATE_TERMINATING = 2;\n    STATE_TERMINATED = 3;\n    STATE_FAILED = 4;\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"isolation-levels-explained",children:"Isolation Levels Explained"}),"\n",(0,t.jsx)(n.h4,{id:"isolation-level-none-shared-process-pool",children:"Isolation Level: NONE (Shared Process Pool)"}),"\n",(0,t.jsx)(n.p,{children:"All requests share the same process, regardless of namespace or session."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Use Case"}),": Stateless patterns with no tenant-specific data (e.g., schema registry lookup)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Client A (namespace: tenant-a, session: user-1) \u2500\u2500\u2510\nClient B (namespace: tenant-b, session: user-2) \u2500\u2500\u253c\u2500\u2192 shared:consumer (single process)\nClient C (namespace: tenant-a, session: user-3) \u2500\u2500\u2518\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Benefits"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Lowest resource usage (one process serves all)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Simplest management"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Risks"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u274c No fault isolation (one bug affects all tenants)"}),"\n",(0,t.jsx)(n.li,{children:"\u274c No resource isolation (noisy neighbor problem)"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"isolation-level-namespace-tenant-isolation",children:"Isolation Level: NAMESPACE (Tenant Isolation)"}),"\n",(0,t.jsx)(n.p,{children:"Each namespace gets its own dedicated process. Multiple sessions within the same namespace share the process."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Use Case"}),": Multi-tenant SaaS where tenants must be isolated (data security, billing, fault isolation)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Client A (namespace: tenant-a, session: user-1) \u2500\u2500\u2510\nClient C (namespace: tenant-a, session: user-3) \u2500\u2500\u253c\u2500\u2192 ns:tenant-a:consumer\n\nClient B (namespace: tenant-b, session: user-2) \u2500\u2500\u2500\u2500\u2192 ns:tenant-b:consumer\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Benefits"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Fault isolation: tenant-a's crash doesn't affect tenant-b"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Resource quotas: limit CPU/memory per tenant"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Billing: track resource usage per tenant"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Risks"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u26a0\ufe0f Higher resource usage (one process per namespace)"}),"\n",(0,t.jsx)(n.li,{children:"\u26a0\ufe0f Cold start latency for new namespaces"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"isolation-level-session-maximum-isolation",children:"Isolation Level: SESSION (Maximum Isolation)"}),"\n",(0,t.jsx)(n.p,{children:"Each session gets its own dedicated process. Maximum isolation guarantees."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Use Case"}),": High-security environments, compliance requirements (PCI-DSS, HIPAA), debugging"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Client A (namespace: tenant-a, session: user-1) \u2500\u2500\u2500\u2192 session:user-1:consumer\nClient B (namespace: tenant-b, session: user-2) \u2500\u2500\u2500\u2192 session:user-2:consumer\nClient C (namespace: tenant-a, session: user-3) \u2500\u2500\u2500\u2192 session:user-3:consumer\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Benefits"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Maximum fault isolation: one session crash = one user affected"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Security: no cross-session data leakage possible"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Debugging: session-level logs and metrics"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Risks"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u274c Highest resource usage (one process per session)"}),"\n",(0,t.jsx)(n.li,{children:"\u274c Significant cold start latency"}),"\n",(0,t.jsx)(n.li,{children:"\u274c Management overhead (thousands of processes possible)"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"process-lifecycle-with-procmgr-integration",children:"Process Lifecycle with procmgr Integration"}),"\n",(0,t.jsxs)(n.p,{children:["The launcher uses ",(0,t.jsx)(n.code,{children:"pkg/procmgr.ProcessManager"})," for robust lifecycle management:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'// Pattern process syncer implementation\ntype patternProcessSyncer struct {\n    launcher *PatternLauncher\n}\n\nfunc (s *patternProcessSyncer) SyncProcess(ctx context.Context, updateType procmgr.UpdateType, config interface{}) (terminal bool, err error) {\n    processConfig := config.(*ProcessConfig)\n    manifest := s.launcher.patterns[processConfig.PatternName]\n\n    // Build command\n    cmd := exec.CommandContext(ctx, manifest.Executable)\n    cmd.Env = append(os.Environ(),\n        fmt.Sprintf("PATTERN_NAME=%s", processConfig.PatternName),\n        fmt.Sprintf("NAMESPACE=%s", processConfig.Namespace),\n        fmt.Sprintf("SESSION_ID=%s", processConfig.SessionID),\n        fmt.Sprintf("GRPC_PORT=%d", processConfig.GRPCPort),\n    )\n\n    // Start process\n    if err := cmd.Start(); err != nil {\n        return false, fmt.Errorf("start process: %w", err)\n    }\n\n    // Store process handle\n    s.launcher.storeProcessHandle(processConfig.ProcessID, cmd.Process)\n\n    // Wait for health check to pass\n    if err := s.launcher.waitForHealthy(ctx, processConfig); err != nil {\n        cmd.Process.Kill()\n        return false, fmt.Errorf("health check failed: %w", err)\n    }\n\n    // Check if process exited (terminal state)\n    select {\n    case <-ctx.Done():\n        return false, ctx.Err()\n    default:\n        // Process still running\n        return false, nil\n    }\n}\n\nfunc (s *patternProcessSyncer) SyncTerminatingProcess(ctx context.Context, config interface{}, gracePeriodSecs *int64, statusFn procmgr.ProcessStatusFunc) error {\n    processConfig := config.(*ProcessConfig)\n    process := s.launcher.getProcessHandle(processConfig.ProcessID)\n\n    // Send SIGTERM for graceful shutdown\n    if err := process.Signal(syscall.SIGTERM); err != nil {\n        return fmt.Errorf("send SIGTERM: %w", err)\n    }\n\n    // Wait for graceful exit\n    timeout := time.Duration(*gracePeriodSecs) * time.Second\n    done := make(chan error, 1)\n    go func() {\n        _, err := process.Wait()\n        done <- err\n    }()\n\n    select {\n    case err := <-done:\n        // Process exited gracefully\n        return err\n    case <-time.After(timeout):\n        // Grace period expired, force kill\n        process.Kill()\n        return fmt.Errorf("forced kill after grace period")\n    }\n}\n\nfunc (s *patternProcessSyncer) SyncTerminatedProcess(ctx context.Context, config interface{}) error {\n    processConfig := config.(*ProcessConfig)\n\n    // Cleanup resources\n    s.launcher.removeProcessHandle(processConfig.ProcessID)\n\n    return nil\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"launch-request-flow",children:"Launch Request Flow"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'1. Proxy receives client request for pattern operation\n   \u2502\n   \u251c\u2500\u2192 Check if pattern process already running (cache lookup)\n   \u2502   \u251c\u2500 Yes: Use existing process\n   \u2502   \u2514\u2500 No: Send LaunchPattern gRPC request\n   \u2502\n2. Launcher receives LaunchPattern request\n   \u2502\n   \u251c\u2500\u2192 Determine ProcessID based on isolation level\n   \u2502   \u251c\u2500 NONE:      "shared:<pattern>"\n   \u2502   \u251c\u2500 NAMESPACE: "ns:<namespace>:<pattern>"\n   \u2502   \u2514\u2500 SESSION:   "session:<session_id>:<pattern>"\n   \u2502\n   \u251c\u2500\u2192 IsolationManager.GetOrCreateProcess(isolationKey, processConfig)\n   \u2502   \u2502\n   \u2502   \u251c\u2500\u2192 Check if process exists and healthy\n   \u2502   \u2502   \u251c\u2500 Yes: Return existing handle\n   \u2502   \u2502   \u2514\u2500 No: Create new process\n   \u2502   \u2502\n   \u2502   \u2514\u2500\u2192 ProcessManager.UpdateProcess(CREATE)\n   \u2502       \u2502\n   \u2502       \u251c\u2500\u2192 patternProcessSyncer.SyncProcess()\n   \u2502       \u2502   \u251c\u2500 exec.Command() - start pattern executable\n   \u2502       \u2502   \u251c\u2500 Wait for health check\n   \u2502       \u2502   \u2514\u2500 Return success\n   \u2502       \u2502\n   \u2502       \u2514\u2500\u2192 Return ProcessHandle\n   \u2502\n3. Launcher returns LaunchResponse\n   \u2502\n   \u2514\u2500\u2192 Proxy caches process address and forwards client request\n'})}),"\n",(0,t.jsx)(n.h3,{id:"pattern-discovery",children:"Pattern Discovery"}),"\n",(0,t.jsx)(n.p,{children:"The launcher discovers available patterns by scanning directories:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"patterns/\n\u251c\u2500\u2500 consumer/\n\u2502   \u251c\u2500\u2500 consumer             # Executable binary\n\u2502   \u251c\u2500\u2500 manifest.yaml        # Pattern metadata\n\u2502   \u2514\u2500\u2500 README.md\n\u251c\u2500\u2500 producer/\n\u2502   \u251c\u2500\u2500 producer\n\u2502   \u251c\u2500\u2500 manifest.yaml\n\u2502   \u2514\u2500\u2500 README.md\n\u251c\u2500\u2500 multicast_registry/\n\u2502   \u251c\u2500\u2500 multicast_registry\n\u2502   \u251c\u2500\u2500 manifest.yaml\n\u2502   \u2514\u2500\u2500 README.md\n\u2514\u2500\u2500 claimcheck/\n    \u251c\u2500\u2500 claimcheck\n    \u251c\u2500\u2500 manifest.yaml\n    \u2514\u2500\u2500 README.md\n"})}),"\n",(0,t.jsx)(n.p,{children:"Discovery algorithm:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Scan ",(0,t.jsx)(n.code,{children:"patterns/"})," directory"]}),"\n",(0,t.jsxs)(n.li,{children:["For each subdirectory, check for ",(0,t.jsx)(n.code,{children:"manifest.yaml"})]}),"\n",(0,t.jsx)(n.li,{children:"Validate manifest schema"}),"\n",(0,t.jsx)(n.li,{children:"Check executable exists and is runnable"}),"\n",(0,t.jsx)(n.li,{children:"Load pattern into registry"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["Launcher configuration (",(0,t.jsx)(n.code,{children:"~/.prism/launcher-config.yaml"}),"):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"launcher:\n  # Port for gRPC API\n  grpc_port: 8982\n\n  # Pattern discovery\n  patterns_dir: ./patterns\n\n  # Default isolation level (can be overridden per pattern)\n  default_isolation: namespace\n\n  # Process manager settings\n  process_manager:\n    resync_interval: 30s\n    backoff_period: 5s\n    max_concurrent_starts: 10\n\n  # Resource limits (applied to all pattern processes)\n  resources:\n    cpu_limit: 2.0\n    memory_limit: 1Gi\n\n  # Metrics and observability\n  metrics:\n    port: 9092\n    path: /metrics\n\n  health:\n    port: 9093\n    path: /health\n"})}),"\n",(0,t.jsx)(n.h2,{id:"implementation-phases",children:"Implementation Phases"}),"\n",(0,t.jsx)(n.h3,{id:"phase-1-core-launcher-week-1",children:"Phase 1: Core Launcher (Week 1)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Deliverables"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"cmd/pattern-launcher"})," skeleton with gRPC server"]}),"\n",(0,t.jsx)(n.li,{children:"Pattern manifest schema and validation"}),"\n",(0,t.jsx)(n.li,{children:"Pattern discovery (scan filesystem for manifests)"}),"\n",(0,t.jsxs)(n.li,{children:["Integration with ",(0,t.jsx)(n.code,{children:"pkg/isolation.IsolationManager"})]}),"\n",(0,t.jsx)(n.li,{children:"LaunchPattern API (no actual process launch yet, just mock)"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Tests"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Pattern discovery finds all valid manifests"}),"\n",(0,t.jsx)(n.li,{children:"Invalid manifests rejected"}),"\n",(0,t.jsx)(n.li,{children:"gRPC API responds to LaunchPattern requests"}),"\n",(0,t.jsx)(n.li,{children:"IsolationManager creates correct ProcessIDs"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"phase-2-process-launch-week-2",children:"Phase 2: Process Launch (Week 2)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Deliverables"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"patternProcessSyncer"})," implementation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"exec.Command()"})," integration for spawning processes"]}),"\n",(0,t.jsx)(n.li,{children:"Process handle tracking (PID, port, address)"}),"\n",(0,t.jsxs)(n.li,{children:["Health check polling (HTTP ",(0,t.jsx)(n.code,{children:"/health"})," endpoint)"]}),"\n",(0,t.jsx)(n.li,{children:"LaunchPattern returns running process address"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Tests"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Launch single pattern process successfully"}),"\n",(0,t.jsx)(n.li,{children:"Health check waits until process ready"}),"\n",(0,t.jsx)(n.li,{children:"Failed process launch returns error"}),"\n",(0,t.jsx)(n.li,{children:"Process address returned correctly"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"phase-3-isolation-levels-week-3--complete",children:"Phase 3: Isolation Levels (Week 3) \u2705 COMPLETE"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Deliverables"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Namespace isolation: one process per namespace"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Session isolation: one process per session"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 None isolation: shared process"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Concurrent launch requests handled correctly"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Process reuse for existing isolation keys"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Tests"})," (",(0,t.jsx)(n.code,{children:"pkg/launcher/integration_test.go"}),"):"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.code,{children:"TestIsolationLevels_Integration"}),": All 3 isolation levels (NONE, NAMESPACE, SESSION)\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Verifies process reuse for same isolation key"}),"\n",(0,t.jsx)(n.li,{children:"Verifies process separation for different keys"}),"\n",(0,t.jsx)(n.li,{children:"Validates PID tracking and address assignment"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.code,{children:"TestConcurrentLaunches"}),": 5 concurrent requests correctly reuse process"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.code,{children:"TestProcessTermination"}),": Graceful termination with status verification"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.code,{children:"TestHealthCheck"}),": Health endpoint monitoring and service health reporting"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Results"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Unit tests: 100% passing (run with ",(0,t.jsx)(n.code,{children:"-short"})," flag, 0.2s)"]}),"\n",(0,t.jsx)(n.li,{children:"Integration tests: Created (require actual process launching)"}),"\n",(0,t.jsx)(n.li,{children:"Test pattern binary: Built and ready (7.4MB, Go-based with HTTP health endpoint)"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"phase-4-termination-and-cleanup-week-4",children:"Phase 4: Termination and Cleanup (Week 4)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Deliverables"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"TerminatePattern API"}),"\n",(0,t.jsx)(n.li,{children:"Graceful SIGTERM with timeout"}),"\n",(0,t.jsx)(n.li,{children:"Force SIGKILL after grace period"}),"\n",(0,t.jsx)(n.li,{children:"Process cleanup (remove from tracking)"}),"\n",(0,t.jsx)(n.li,{children:"Orphan process detection and cleanup"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Tests"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Graceful shutdown completes within grace period"}),"\n",(0,t.jsx)(n.li,{children:"Force kill after timeout"}),"\n",(0,t.jsx)(n.li,{children:"Terminated processes removed from list"}),"\n",(0,t.jsx)(n.li,{children:"Orphaned processes detected and terminated"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"phase-5-metrics-and-observability-week-5",children:"Phase 5: Metrics and Observability (Week 5)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Deliverables"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Prometheus metrics export"}),"\n",(0,t.jsx)(n.li,{children:"Process lifecycle metrics (starts, stops, failures)"}),"\n",(0,t.jsx)(n.li,{children:"Isolation level distribution metrics"}),"\n",(0,t.jsx)(n.li,{children:"Resource usage per process"}),"\n",(0,t.jsx)(n.li,{children:"Health endpoint with detailed status"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Tests"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Metrics exported correctly"}),"\n",(0,t.jsx)(n.li,{children:"Counter increases on process start/stop"}),"\n",(0,t.jsx)(n.li,{children:"Health endpoint returns all processes"}),"\n",(0,t.jsx)(n.li,{children:"Resource metrics tracked accurately"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,t.jsx)(n.h3,{id:"example-1-proxy-launches-consumer-pattern",children:"Example 1: Proxy Launches Consumer Pattern"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'// In Prism proxy (Rust), making gRPC call to launcher\nfunc launchConsumerPattern(namespace string) (string, error) {\n    client := NewPatternLauncherClient(conn)\n\n    resp, err := client.LaunchPattern(ctx, &LaunchRequest{\n        PatternName:  "consumer",\n        Isolation:    IsolationLevel_ISOLATION_NAMESPACE,\n        Namespace:    namespace,\n        Config: map[string]string{\n            "kafka_brokers": "localhost:9092",\n            "consumer_group": fmt.Sprintf("%s-consumer", namespace),\n        },\n    })\n\n    if err != nil {\n        return "", fmt.Errorf("launch consumer: %w", err)\n    }\n\n    // Cache the process address for future requests\n    proxyCache.Set(namespace, "consumer", resp.Address)\n\n    return resp.Address, nil\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"example-2-local-development-workflow",children:"Example 2: Local Development Workflow"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Terminal 1: Start pattern launcher\ncd cmd/pattern-launcher\ngo run . --config ~/.prism/launcher-config.yaml\n\n# Terminal 2: Use prismctl to launch pattern\nprismctl pattern launch consumer --namespace tenant-a --isolation namespace\n\n# Terminal 3: Check running patterns\nprismctl pattern list\n\n# Output:\n# PATTERN              PROCESS ID             STATE      HEALTHY  UPTIME\n# consumer             ns:tenant-a:consumer   RUNNING    true     5m30s\n# producer             ns:tenant-a:producer   RUNNING    true     3m15s\n# multicast_registry   shared:registry        RUNNING    true     10m45s\n"})}),"\n",(0,t.jsx)(n.h3,{id:"example-3-kubernetes-alternative-no-launcher-needed",children:"Example 3: Kubernetes Alternative (No Launcher Needed)"}),"\n",(0,t.jsxs)(n.p,{children:["In Kubernetes, the launcher is ",(0,t.jsx)(n.strong,{children:"not used"}),". Instead, patterns are deployed as Deployments:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'# patterns/consumer/k8s-deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: consumer-pattern\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: consumer\n  template:\n    metadata:\n      labels:\n        app: consumer\n    spec:\n      containers:\n      - name: consumer\n        image: prism/consumer:1.0.0\n        env:\n        - name: ISOLATION_LEVEL\n          value: "namespace"\n        - name: GRPC_PORT\n          value: "50051"\n        resources:\n          limits:\n            cpu: 1.0\n            memory: 512Mi\n'})}),"\n",(0,t.jsx)(n.p,{children:"The Prism proxy discovers pattern processes via Kubernetes service discovery (DNS, endpoints API)."}),"\n",(0,t.jsx)(n.h2,{id:"metrics-and-observability",children:"Metrics and Observability"}),"\n",(0,t.jsx)(n.h3,{id:"prometheus-metrics",children:"Prometheus Metrics"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"# Pattern lifecycle\npattern_launcher_process_starts_total{pattern, namespace, isolation} counter\npattern_launcher_process_stops_total{pattern, namespace, isolation} counter\npattern_launcher_process_failures_total{pattern, namespace, isolation} counter\n\n# Process state\npattern_launcher_processes_running{pattern, isolation} gauge\npattern_launcher_processes_terminating{pattern, isolation} gauge\n\n# Launch latency\npattern_launcher_launch_duration_seconds{pattern, isolation} histogram\n\n# Isolation distribution\npattern_launcher_isolation_level{level} gauge\n\n# Resource usage (per process)\npattern_launcher_process_cpu_usage{process_id} gauge\npattern_launcher_process_memory_bytes{process_id} gauge\n"})}),"\n",(0,t.jsx)(n.h3,{id:"health-check-response",children:"Health Check Response"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "status": "healthy",\n  "total_processes": 15,\n  "running_processes": 13,\n  "terminating_processes": 2,\n  "failed_processes": 0,\n  "isolation_distribution": {\n    "none": 2,\n    "namespace": 10,\n    "session": 3\n  },\n  "processes": [\n    {\n      "pattern_name": "consumer",\n      "process_id": "ns:tenant-a:consumer",\n      "state": "RUNNING",\n      "healthy": true,\n      "uptime_seconds": 3600,\n      "namespace": "tenant-a",\n      "address": "localhost:50051"\n    }\n  ]\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Process Isolation"}),": Use OS-level process isolation (cgroups, namespaces) to prevent cross-contamination"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Resource Limits"}),": Enforce CPU/memory limits per process to prevent resource exhaustion"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Authentication"}),": gRPC API requires mTLS or OIDC token authentication"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Authorization"}),": Only authorized namespaces can launch patterns"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Audit Logging"}),": All launch/terminate operations logged for security audit"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Secret Management"}),": Pattern configs may contain secrets (DB passwords) - use secret providers"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cold Start Latency"}),": First request for a namespace incurs process spawn latency (~500ms-2s)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Process Reuse"}),": Subsequent requests to same namespace reuse existing process (< 10ms)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Concurrent Launches"}),": ProcessManager handles concurrent launch requests without race conditions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Memory Overhead"}),": Each process consumes memory (baseline ~50MB + pattern-specific usage)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CPU Overhead"}),": Process management goroutines negligible (< 1% CPU)"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Optimization"}),": Implement ",(0,t.jsx)(n.strong,{children:"warm pool"})," for common patterns (pre-launch consumer processes for popular namespaces)."]}),"\n",(0,t.jsx)(n.h2,{id:"alternatives-considered",children:"Alternatives Considered"}),"\n",(0,t.jsx)(n.h3,{id:"alternative-1-kubernetes-statefulsets",children:"Alternative 1: Kubernetes StatefulSets"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Pros"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Industry-standard orchestration"}),"\n",(0,t.jsx)(n.li,{children:"Built-in health checks, rolling updates"}),"\n",(0,t.jsx)(n.li,{children:"Service discovery via DNS"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Cons"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Requires Kubernetes cluster (heavy dependency)"}),"\n",(0,t.jsx)(n.li,{children:"Overly complex for local development"}),"\n",(0,t.jsx)(n.li,{children:"Doesn't support proxy-driven launch (K8s decides lifecycle)"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Verdict"}),": Good for production, but launcher needed for local development."]}),"\n",(0,t.jsx)(n.h3,{id:"alternative-2-systemd",children:"Alternative 2: systemd"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Pros"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Standard on Linux systems"}),"\n",(0,t.jsx)(n.li,{children:"Automatic restart on failure"}),"\n",(0,t.jsx)(n.li,{children:"Resource limits via cgroups"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Cons"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Not cross-platform (Linux only)"}),"\n",(0,t.jsx)(n.li,{children:"Requires root privileges for system-level units"}),"\n",(0,t.jsx)(n.li,{children:"No dynamic isolation levels (fixed unit files)"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Verdict"}),": Complementary, not a replacement. Launcher can be managed by systemd."]}),"\n",(0,t.jsx)(n.h3,{id:"alternative-3-docker-compose",children:"Alternative 3: Docker Compose"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Pros"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Simple YAML configuration"}),"\n",(0,t.jsx)(n.li,{children:"Built-in networking"}),"\n",(0,t.jsx)(n.li,{children:"Easy local testing"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Cons"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Static configuration (can't launch dynamically per namespace)"}),"\n",(0,t.jsx)(n.li,{children:"No isolation level support"}),"\n",(0,t.jsx)(n.li,{children:"Requires Docker daemon"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Verdict"}),": Good for fixed deployments, but lacks dynamic launch capability."]}),"\n",(0,t.jsx)(n.h2,{id:"open-questions",children:"Open Questions"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Pattern Versioning"}),": Should launcher support multiple versions of the same pattern running concurrently?"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Auto-scaling"}),": Should launcher automatically scale processes based on load (e.g., spawn more consumer workers)?"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Checkpointing"}),": Should process state be persisted for crash recovery?"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Network Isolation"}),": Should namespace-isolated processes run in separate network namespaces (Linux network namespaces)?"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Resource Quotas"}),": Should launcher enforce global resource quotas (e.g., max 100 processes total)?"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"success-criteria",children:"Success Criteria"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Launcher can start/stop pattern processes on demand"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 All three isolation levels work correctly (none, namespace, session)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Graceful shutdown completes within grace period"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Health checks detect unhealthy processes and restart them"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Prometheus metrics exported and accurate"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Can handle 100+ concurrent namespaces without issues"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Cold start latency < 2 seconds"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Integrated with Prism proxy via gRPC API"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/rfc/rfc-034",children:"RFC-034: Robust Process Manager Package"})," - procmgr foundation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/jrepp/prism/tree/main/pkg/isolation",children:"pkg/isolation"})," - Bulkhead isolation implementation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/jrepp/prism/tree/main/pkg/procmgr",children:"pkg/procmgr"})," - Process manager implementation"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.oreilly.com/library/view/release-it-2nd/9781680504552/",children:"Bulkhead Pattern (Michael Nygard, Release It!)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",children:"Kubernetes Pod Lifecycle"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.freedesktop.org/software/systemd/man/systemd.service.html",children:"systemd Service Management"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"appendix-a-launch-request-sequence-diagram",children:"Appendix A: Launch Request Sequence Diagram"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510           \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510           \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Client\u2502           \u2502Proxy \u2502           \u2502Launcher  \u2502         \u2502Pattern   \u2502\n\u2502      \u2502           \u2502      \u2502           \u2502          \u2502         \u2502Process   \u2502\n\u2514\u2500\u2500\u252c\u2500\u2500\u2500\u2518           \u2514\u2500\u2500\u252c\u2500\u2500\u2500\u2518           \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2518\n   \u2502                  \u2502                    \u2502                    \u2502\n   \u2502  Pattern Request \u2502                    \u2502                    \u2502\n   \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2192\u2502                    \u2502                    \u2502\n   \u2502                  \u2502                    \u2502                    \u2502\n   \u2502                  \u2502 LaunchPattern RPC  \u2502                    \u2502\n   \u2502                  \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2192\u2502                    \u2502\n   \u2502                  \u2502                    \u2502                    \u2502\n   \u2502                  \u2502                    \u2502 GetOrCreateProcess \u2502\n   \u2502                  \u2502                    \u2502 (IsolationManager) \u2502\n   \u2502                  \u2502                    \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u2502\n   \u2502                  \u2502                    \u2502          \u2502         \u2502\n   \u2502                  \u2502                    \u2502\u2190\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2502\n   \u2502                  \u2502                    \u2502                    \u2502\n   \u2502                  \u2502                    \u2502 UpdateProcess(CREATE)\n   \u2502                  \u2502                    \u2502 (ProcessManager)   \u2502\n   \u2502                  \u2502                    \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u2502\n   \u2502                  \u2502                    \u2502          \u2502         \u2502\n   \u2502                  \u2502                    \u2502\u2190\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2502\n   \u2502                  \u2502                    \u2502                    \u2502\n   \u2502                  \u2502                    \u2502    exec.Command()  \u2502\n   \u2502                  \u2502                    \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2192\u2502\n   \u2502                  \u2502                    \u2502                    \u2502\n   \u2502                  \u2502                    \u2502                    \u2502 Start()\n   \u2502                  \u2502                    \u2502                    \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502                  \u2502                    \u2502                    \u2502        \u2502\n   \u2502                  \u2502                    \u2502                    \u2502\u2190\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n   \u2502                  \u2502                    \u2502                    \u2502\n   \u2502                  \u2502                    \u2502   Health Check     \u2502\n   \u2502                  \u2502                    \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2192\u2502\n   \u2502                  \u2502                    \u2502       OK           \u2502\n   \u2502                  \u2502                    \u2502\u2190\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502\n   \u2502                  \u2502                    \u2502                    \u2502\n   \u2502                  \u2502 LaunchResponse     \u2502                    \u2502\n   \u2502                  \u2502 (process address)  \u2502                    \u2502\n   \u2502                  \u2502\u2190\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502                    \u2502\n   \u2502                  \u2502                    \u2502                    \u2502\n   \u2502                  \u2502  Forward Request   \u2502                    \u2502\n   \u2502                  \u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2192\u2502\n   \u2502                  \u2502                    \u2502                    \u2502\n   \u2502                  \u2502       Response     \u2502                    \u2502\n   \u2502                  \u2502\u2190\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502\n   \u2502                  \u2502                    \u2502                    \u2502\n   \u2502     Response     \u2502                    \u2502                    \u2502\n   \u2502\u2190\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502                    \u2502                    \u2502\n   \u2502                  \u2502                    \u2502                    \u2502\n"})}),"\n",(0,t.jsx)(n.h2,{id:"appendix-b-isolation-level-comparison-table",children:"Appendix B: Isolation Level Comparison Table"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Aspect"}),(0,t.jsx)(n.th,{children:"NONE"}),(0,t.jsx)(n.th,{children:"NAMESPACE"}),(0,t.jsx)(n.th,{children:"SESSION"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Process Count"}),(0,t.jsx)(n.td,{children:"1 (shared)"}),(0,t.jsx)(n.td,{children:"1 per namespace"}),(0,t.jsx)(n.td,{children:"1 per session"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Fault Isolation"}),(0,t.jsx)(n.td,{children:"\u274c None (all fail together)"}),(0,t.jsx)(n.td,{children:"\u2705 Per-tenant isolation"}),(0,t.jsx)(n.td,{children:"\u2705\u2705 Per-user isolation"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Resource Isolation"}),(0,t.jsx)(n.td,{children:"\u274c Shared resources"}),(0,t.jsx)(n.td,{children:"\u2705 Per-tenant quotas"}),(0,t.jsx)(n.td,{children:"\u2705\u2705 Per-user quotas"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Cold Start Latency"}),(0,t.jsx)(n.td,{children:"None (always warm)"}),(0,t.jsx)(n.td,{children:"~1-2s per namespace"}),(0,t.jsx)(n.td,{children:"~1-2s per session"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Memory Overhead"}),(0,t.jsx)(n.td,{children:"Lowest (~50MB)"}),(0,t.jsx)(n.td,{children:"Medium (~50MB \xd7 namespaces)"}),(0,t.jsx)(n.td,{children:"Highest (~50MB \xd7 sessions)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Security"}),(0,t.jsx)(n.td,{children:"\u274c No isolation"}),(0,t.jsx)(n.td,{children:"\u2705 Tenant boundaries"}),(0,t.jsx)(n.td,{children:"\u2705\u2705 User boundaries"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Use Case"}),(0,t.jsx)(n.td,{children:"Read-only lookups"}),(0,t.jsx)(n.td,{children:"Multi-tenant SaaS"}),(0,t.jsx)(n.td,{children:"High-security, debugging"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Scalability"}),(0,t.jsx)(n.td,{children:"\u2705\u2705 Best (1 process)"}),(0,t.jsx)(n.td,{children:"\u2705 Good (10-100 processes)"}),(0,t.jsx)(n.td,{children:"\u26a0\ufe0f Limited (1000s processes)"})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"implementation-status",children:"Implementation Status"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Overall Status"}),": \u2705 COMPLETE (All 5 Phases Implemented)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Phase 1"})," (Week 1): \u2705 ",(0,t.jsx)(n.strong,{children:"COMPLETE"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"cmd/pattern-launcher"})," with gRPC server (port 8080)"]}),"\n",(0,t.jsxs)(n.li,{children:["Pattern manifest schema (",(0,t.jsx)(n.code,{children:"patterns/<name>/manifest.yaml"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Pattern discovery and validation (",(0,t.jsx)(n.code,{children:"pkg/launcher/discovery.go"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Integration with ",(0,t.jsx)(n.code,{children:"pkg/isolation"})," and ",(0,t.jsx)(n.code,{children:"pkg/procmgr"})]}),"\n",(0,t.jsx)(n.li,{children:"All unit tests passing"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Phase 2"})," (Week 2): \u2705 ",(0,t.jsx)(n.strong,{children:"COMPLETE"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Real process launching with ",(0,t.jsx)(n.code,{children:"exec.Command()"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"patternProcessSyncer"})," implementation (",(0,t.jsx)(n.code,{children:"pkg/launcher/syncer.go"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Health check polling (HTTP ",(0,t.jsx)(n.code,{children:"/health"})," endpoint)"]}),"\n",(0,t.jsx)(n.li,{children:"Process handle tracking (PID, address, state)"}),"\n",(0,t.jsx)(n.li,{children:"Test pattern binary (Go-based, 7.4MB)"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Phase 3"})," (Week 3): \u2705 ",(0,t.jsx)(n.strong,{children:"COMPLETE"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Comprehensive integration tests for all isolation levels"}),"\n",(0,t.jsx)(n.li,{children:"Process reuse verification (same key \u2192 same process)"}),"\n",(0,t.jsx)(n.li,{children:"Process separation verification (different key \u2192 different process)"}),"\n",(0,t.jsx)(n.li,{children:"Concurrent launch handling"}),"\n",(0,t.jsx)(n.li,{children:"Health monitoring and termination tests"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Phase 4"})," (Week 4): \u2705 ",(0,t.jsx)(n.strong,{children:"COMPLETE"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Production-ready error handling with retry limits"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Orphan process detection and cleanup (Linux /proc, macOS ps fallback)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Resource cleanup verification after termination"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Health check monitoring (30s intervals)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Error tracking across restarts (RestartCount, ErrorCount, LastError)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Circuit breaker pattern (max 5 consecutive errors \u2192 terminal)"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Phase 5"})," (Week 5): \u2705 ",(0,t.jsx)(n.strong,{children:"COMPLETE"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Prometheus metrics export (text format with HELP/TYPE)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Process lifecycle metrics (starts, stops, failures, restarts)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Health check metrics (success/failure counters)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Launch duration percentiles (p50, p95, p99)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Isolation level distribution tracking"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 JSON format export for custom dashboards"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Uptime tracking and availability metrics"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Implementation Complete"})," - All 5 phases delivered:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Core launcher with gRPC API and pattern discovery"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Real process launching with health checks"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 All isolation levels (NONE, NAMESPACE, SESSION)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Production error handling and crash recovery"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Prometheus metrics and observability"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Next Steps for Production Deployment"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Integration testing with actual Prism proxy"}),"\n",(0,t.jsx)(n.li,{children:"Performance testing (100+ concurrent namespaces, stress testing)"}),"\n",(0,t.jsx)(n.li,{children:"Documentation for deployment alternatives (K8s, systemd, Docker Compose)"}),"\n",(0,t.jsx)(n.li,{children:"Runbook for operational procedures (scaling, troubleshooting)"}),"\n",(0,t.jsx)(n.li,{children:"SLO definition (launch latency, availability, restart rates)"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);