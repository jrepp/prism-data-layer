"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[45152],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var i=s(96540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}},43205:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"memo-033","title":"MEMO-033: Process Isolation and the Bulkhead Pattern","description":"Executive Summary","source":"@site/../docs-cms/memos/MEMO-033-process-isolation-bulkhead-pattern.md","sourceDirName":".","slug":"/memo-033","permalink":"/prism-data-layer/memos/memo-033","draft":false,"unlisted":false,"editUrl":"https://github.com/jrepp/prism-data-layer/tree/main/docs-cms/../docs-cms/memos/MEMO-033-process-isolation-bulkhead-pattern.md","tags":[{"inline":true,"label":"isolation","permalink":"/prism-data-layer/memos/tags/isolation"},{"inline":true,"label":"bulkhead","permalink":"/prism-data-layer/memos/tags/bulkhead"},{"inline":true,"label":"procmgr","permalink":"/prism-data-layer/memos/tags/procmgr"},{"inline":true,"label":"patterns","permalink":"/prism-data-layer/memos/tags/patterns"},{"inline":true,"label":"reliability","permalink":"/prism-data-layer/memos/tags/reliability"},{"inline":true,"label":"multi-tenancy","permalink":"/prism-data-layer/memos/tags/multi-tenancy"},{"inline":true,"label":"fault-isolation","permalink":"/prism-data-layer/memos/tags/fault-isolation"}],"version":"current","frontMatter":{"title":"MEMO-033: Process Isolation and the Bulkhead Pattern","author":"Prism Team","created":"2025-10-15","updated":"2025-10-15","tags":["isolation","bulkhead","procmgr","patterns","reliability","multi-tenancy","fault-isolation"],"id":"memo-033","project_id":"prism","doc_uuid":"a9c3f05a-04d7-43c4-a949-dbdff8fb2ce0"},"sidebar":"memosSidebar","previous":{"title":"Driver Test Consolidation Strategy \u2022 MEMO-032","permalink":"/prism-data-layer/memos/memo-032"}}');var r=s(74848),t=s(28453);const o={title:"MEMO-033: Process Isolation and the Bulkhead Pattern",author:"Prism Team",created:"2025-10-15",updated:"2025-10-15",tags:["isolation","bulkhead","procmgr","patterns","reliability","multi-tenancy","fault-isolation"],id:"memo-033",project_id:"prism",doc_uuid:"a9c3f05a-04d7-43c4-a949-dbdff8fb2ce0"},l="MEMO-033: Process Isolation and the Bulkhead Pattern",a={},c=[{value:"Executive Summary",id:"executive-summary",level:2},{value:"Background",id:"background",level:2},{value:"Problem Statement",id:"problem-statement",level:3},{value:"Prior Art: Bulkhead Pattern",id:"prior-art-bulkhead-pattern",level:3},{value:"Architecture",id:"architecture",level:2},{value:"Components",id:"components",level:3},{value:"Three Isolation Levels",id:"three-isolation-levels",level:3},{value:"1. IsolationNone (Shared)",id:"1-isolationnone-shared",level:4},{value:"2. IsolationNamespace (Tenant Isolation)",id:"2-isolationnamespace-tenant-isolation",level:4},{value:"3. IsolationSession (Session Isolation)",id:"3-isolationsession-session-isolation",level:4},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Core Types",id:"core-types",level:3},{value:"Process ID Generation",id:"process-id-generation",level:3},{value:"Process Lifecycle",id:"process-lifecycle",level:3},{value:"Integration with procmgr",id:"integration-with-procmgr",level:3},{value:"Pattern Runner Integration",id:"pattern-runner-integration",level:2},{value:"Framework Enhancement",id:"framework-enhancement",level:3},{value:"IsolatedBackend Wrapper",id:"isolatedbackend-wrapper",level:3},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Example 1: No Isolation (Development)",id:"example-1-no-isolation-development",level:3},{value:"Example 2: Namespace Isolation (Multi-Tenant)",id:"example-2-namespace-isolation-multi-tenant",level:3},{value:"Example 3: Session Isolation (High Security)",id:"example-3-session-isolation-high-security",level:3},{value:"Testing",id:"testing",level:2},{value:"Test Coverage",id:"test-coverage",level:3},{value:"Framework Integration Tests",id:"framework-integration-tests",level:3},{value:"Performance Characteristics",id:"performance-characteristics",level:2},{value:"Process Creation Overhead",id:"process-creation-overhead",level:3},{value:"Memory Footprint",id:"memory-footprint",level:3},{value:"Failure Isolation",id:"failure-isolation",level:3},{value:"Health Monitoring",id:"health-monitoring",level:2},{value:"Health Metrics",id:"health-metrics",level:3},{value:"Health Reporter",id:"health-reporter",level:3},{value:"Example Health Report",id:"example-health-report",level:3},{value:"Prometheus Metrics Integration",id:"prometheus-metrics-integration",level:2},{value:"Metrics Available",id:"metrics-available",level:3},{value:"Example PromQL Queries",id:"example-promql-queries",level:3},{value:"Production Deployment Considerations",id:"production-deployment-considerations",level:2},{value:"When to Use Each Isolation Level",id:"when-to-use-each-isolation-level",level:3},{value:"IsolationNone",id:"isolationnone",level:4},{value:"IsolationNamespace (Recommended)",id:"isolationnamespace-recommended",level:4},{value:"IsolationSession",id:"isolationsession",level:4},{value:"Resource Limits",id:"resource-limits",level:3},{value:"Monitoring Recommendations",id:"monitoring-recommendations",level:3},{value:"Future Enhancements",id:"future-enhancements",level:2},{value:"1. Dynamic Isolation Level Switching",id:"1-dynamic-isolation-level-switching",level:3},{value:"2. Process Pooling",id:"2-process-pooling",level:3},{value:"3. Adaptive Isolation",id:"3-adaptive-isolation",level:3},{value:"4. Cross-Region Isolation",id:"4-cross-region-isolation",level:3},{value:"Comparison with Other Approaches",id:"comparison-with-other-approaches",level:2},{value:"vs. Separate Deployments",id:"vs-separate-deployments",level:3},{value:"vs. Thread Pools",id:"vs-thread-pools",level:3},{value:"vs. Kubernetes Namespaces",id:"vs-kubernetes-namespaces",level:3},{value:"Conclusion",id:"conclusion",level:2},{value:"References",id:"references",level:2},{value:"Appendix A: Complete Code Example",id:"appendix-a-complete-code-example",level:2},{value:"Appendix B: Performance Benchmark Results",id:"appendix-b-performance-benchmark-results",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"memo-033-process-isolation-and-the-bulkhead-pattern",children:"MEMO-033: Process Isolation and the Bulkhead Pattern"})}),"\n",(0,r.jsx)(n.h2,{id:"executive-summary",children:"Executive Summary"}),"\n",(0,r.jsxs)(n.p,{children:["This memo documents the implementation of process isolation capabilities in Prism, using the bulkhead pattern to prevent failures in one namespace or session from affecting others. The ",(0,r.jsx)(n.code,{children:"isolation"})," package builds on ",(0,r.jsx)(n.code,{children:"procmgr"})," (RFC-034) to provide three isolation levels: None, Namespace, and Session."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Achievement"}),": Pattern tests can now run with configurable isolation, ensuring that requests for different namespaces or sessions are routed to separate processes, preventing cascading failures and improving multi-tenant reliability."]}),"\n",(0,r.jsx)(n.h2,{id:"background",children:"Background"}),"\n",(0,r.jsx)(n.h3,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,r.jsx)(n.p,{children:"When running acceptance tests or production workloads with multiple tenants or sessions, we need to prevent:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Failure propagation"}),": A crash in one tenant's process affecting other tenants"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resource contention"}),": One tenant consuming all available resources"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Security leaks"}),": Memory sharing or state leakage between tenants"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Debugging complexity"}),": Difficulty isolating which tenant caused a failure"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"prior-art-bulkhead-pattern",children:"Prior Art: Bulkhead Pattern"}),"\n",(0,r.jsx)(n.p,{children:"The bulkhead pattern (named after ship compartments that prevent sinking if one compartment floods) isolates system components so that failures in one component don't cascade to others."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Principle"}),": Segment resources into isolated pools so that exhaustion or failure of one pool doesn't affect others."]}),"\n",(0,r.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,r.jsx)(n.h3,{id:"components",children:"Components"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:'\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                  Pattern Runner Framework                \u2502\n\u2502  (tests/acceptance/framework/)                           \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                    \u2502\n                    \u2502 uses\n                    \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502               Isolation Package                          \u2502\n\u2502  (pkg/isolation/)                                        \u2502\n\u2502                                                          \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502         IsolationManager                         \u2502   \u2502\n\u2502  \u2502  - GetOrCreateProcess()                          \u2502   \u2502\n\u2502  \u2502  - TerminateProcess()                            \u2502   \u2502\n\u2502  \u2502  - ListProcesses()                               \u2502   \u2502\n\u2502  \u2502  - Health()                                      \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u2502                    \u2502                                     \u2502\n\u2502                    \u2502 manages                             \u2502\n\u2502                    \u25bc                                     \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502   IsolationKey \u2192 ProcessID Mapping               \u2502   \u2502\n\u2502  \u2502                                                   \u2502   \u2502\n\u2502  \u2502   Level: None       \u2192 "shared"                   \u2502   \u2502\n\u2502  \u2502   Level: Namespace  \u2192 "ns:<namespace>"           \u2502   \u2502\n\u2502  \u2502   Level: Session    \u2192 "session:<session>"        \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                     \u2502\n                     \u2502 uses\n                     \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502              Process Manager (procmgr)                   \u2502\n\u2502  (pkg/procmgr/ - RFC-034)                                \u2502\n\u2502                                                          \u2502\n\u2502  - Robust lifecycle management                           \u2502\n\u2502  - Work queue with exponential backoff                   \u2502\n\u2502  - Health monitoring and metrics                         \u2502\n\u2502  - Graceful termination                                  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n'})}),"\n",(0,r.jsx)(n.h3,{id:"three-isolation-levels",children:"Three Isolation Levels"}),"\n",(0,r.jsx)(n.h4,{id:"1-isolationnone-shared",children:"1. IsolationNone (Shared)"}),"\n",(0,r.jsx)(n.p,{children:"All requests share a single process. Useful for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Local development"}),"\n",(0,r.jsx)(n.li,{children:"Simple test scenarios"}),"\n",(0,r.jsx)(n.li,{children:"Maximum resource efficiency"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"Request 1 (ns:A, session:1) \u2500\u2500\u2510\nRequest 2 (ns:B, session:2) \u2500\u2500\u253c\u2500\u2192 [Process: shared]\nRequest 3 (ns:A, session:3) \u2500\u2500\u2518\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Process ID"}),": ",(0,r.jsx)(n.code,{children:'"shared"'})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Characteristics"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Lowest overhead (one process for all requests)"}),"\n",(0,r.jsx)(n.li,{children:"No isolation (failures affect all requests)"}),"\n",(0,r.jsx)(n.li,{children:"Fastest (no process creation/switching)"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"2-isolationnamespace-tenant-isolation",children:"2. IsolationNamespace (Tenant Isolation)"}),"\n",(0,r.jsx)(n.p,{children:"Each namespace gets its own process. Useful for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Multi-tenant systems"}),"\n",(0,r.jsx)(n.li,{children:"SaaS applications"}),"\n",(0,r.jsx)(n.li,{children:"Isolating customer workloads"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"Request 1 (ns:A, session:1) \u2500\u2500\u2510\nRequest 2 (ns:A, session:2) \u2500\u2500\u253c\u2500\u2192 [Process: ns:A]\nRequest 3 (ns:B, session:1) \u2500\u2500\u2500\u2500\u2192 [Process: ns:B]\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Process ID"}),": ",(0,r.jsx)(n.code,{children:'"ns:<namespace>"'})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Characteristics"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"One process per namespace/tenant"}),"\n",(0,r.jsx)(n.li,{children:"Failures in namespace A don't affect namespace B"}),"\n",(0,r.jsx)(n.li,{children:"Resource limits can be applied per tenant"}),"\n",(0,r.jsx)(n.li,{children:"Ideal for multi-tenant production deployments"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"3-isolationsession-session-isolation",children:"3. IsolationSession (Session Isolation)"}),"\n",(0,r.jsx)(n.p,{children:"Each session gets its own process. Useful for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User session isolation"}),"\n",(0,r.jsx)(n.li,{children:"Per-connection isolation"}),"\n",(0,r.jsx)(n.li,{children:"Maximum security requirements"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"Request 1 (ns:A, session:1) \u2500\u2500\u2510\nRequest 2 (ns:B, session:1) \u2500\u2500\u253c\u2500\u2192 [Process: session:1]\nRequest 3 (ns:A, session:2) \u2500\u2500\u2500\u2500\u2192 [Process: session:2]\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Process ID"}),": ",(0,r.jsx)(n.code,{children:'"session:<session>"'})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Characteristics"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"One process per session"}),"\n",(0,r.jsx)(n.li,{children:"Highest isolation (even same namespace gets different processes)"}),"\n",(0,r.jsx)(n.li,{children:"Higher overhead (more processes)"}),"\n",(0,r.jsx)(n.li,{children:"Ideal for high-security scenarios"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,r.jsx)(n.h3,{id:"core-types",children:"Core Types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"// IsolationLevel defines how requests are isolated\ntype IsolationLevel int\n\nconst (\n    IsolationNone      IsolationLevel = iota\n    IsolationNamespace\n    IsolationSession\n)\n\n// IsolationKey identifies the namespace and session\ntype IsolationKey struct {\n    Namespace string\n    Session   string\n}\n\n// ProcessConfig holds configuration for a managed process\ntype ProcessConfig struct {\n    Key            IsolationKey\n    BackendConfig  interface{}\n    GracePeriodSec int64\n}\n\n// IsolationManager manages process isolation\ntype IsolationManager struct {\n    level  IsolationLevel\n    pm     *procmgr.ProcessManager\n    syncer ProcessSyncer\n    // ... internal state\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"process-id-generation",children:"Process ID Generation"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"IsolationKey.ProcessID()"})," method generates process IDs based on the isolation level:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func (key IsolationKey) ProcessID(level IsolationLevel) procmgr.ProcessID {\n    switch level {\n    case IsolationNone:\n        return "shared"\n    case IsolationNamespace:\n        return procmgr.ProcessID("ns:" + key.Namespace)\n    case IsolationSession:\n        return procmgr.ProcessID("session:" + key.Session)\n    default:\n        return "shared"\n    }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"This ensures requests are routed to the correct isolated process."}),"\n",(0,r.jsx)(n.h3,{id:"process-lifecycle",children:"Process Lifecycle"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"1. Request arrives with (namespace, session)\n   \u2193\n2. Generate ProcessID from IsolationKey\n   \u2193\n3. Check if process already exists\n   \u2193\n   \u251c\u2500 Yes \u2192 Return existing ProcessHandle\n   \u2502         (reuse process)\n   \u2502\n   \u2514\u2500 No  \u2192 Create new process\n             \u251c\u2500 Call ProcessSyncer.SyncProcess()\n             \u251c\u2500 Wait for process to start\n             \u2514\u2500 Return ProcessHandle\n"})}),"\n",(0,r.jsx)(n.h3,{id:"integration-with-procmgr",children:"Integration with procmgr"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"isolation"})," package delegates to ",(0,r.jsx)(n.code,{children:"procmgr"})," for:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lifecycle management"}),": Starting, stopping, restarting processes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Health monitoring"}),": Tracking process health and errors"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Work queue"}),": Retry scheduling with exponential backoff"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Metrics"}),": Prometheus metrics collection"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Graceful shutdown"}),": Orderly termination with grace periods"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This reuses all the robustness guarantees from RFC-034."}),"\n",(0,r.jsx)(n.h2,{id:"pattern-runner-integration",children:"Pattern Runner Integration"}),"\n",(0,r.jsx)(n.h3,{id:"framework-enhancement",children:"Framework Enhancement"}),"\n",(0,r.jsxs)(n.p,{children:["The pattern runner framework now supports isolated test execution via ",(0,r.jsx)(n.code,{children:"RunIsolatedPatternTests()"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'// Configure namespace isolation\nopts := IsolatedTestOptions{\n    IsolationConfig: IsolationConfig{\n        Level:          isolation.IsolationNamespace,\n        Namespace:      "default",\n        GracePeriodSec: 10,\n    },\n    // Generate unique namespace per test\n    NamespaceGenerator: func(backendName, testName string) string {\n        return fmt.Sprintf("%s-%s", backendName, testName)\n    },\n}\n\n// Run tests with isolation\nRunIsolatedPatternTests(t, PatternKeyValueBasic, tests, syncer, opts)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"isolatedbackend-wrapper",children:"IsolatedBackend Wrapper"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"IsolatedBackend"})," type wraps a standard ",(0,r.jsx)(n.code,{children:"Backend"})," with isolation management:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"type IsolatedBackend struct {\n    Backend\n    isolationMgr *isolation.IsolationManager\n    config       IsolationConfig\n}\n\n// SetupIsolated creates an isolated process for the test\nfunc (ib *IsolatedBackend) SetupIsolated(t *testing.T, ctx context.Context, key isolation.IsolationKey) (driver interface{}, cleanup func())\n"})}),"\n",(0,r.jsx)(n.p,{children:"This allows existing tests to gain isolation with minimal code changes."}),"\n",(0,r.jsx)(n.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,r.jsx)(n.h3,{id:"example-1-no-isolation-development",children:"Example 1: No Isolation (Development)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'config := IsolationConfig{\n    Level:          isolation.IsolationNone,\n    Namespace:      "dev",\n    Session:        "local",\n    GracePeriodSec: 5,\n}\n\nim := isolation.NewIsolationManager(config.Level, syncer)\n\n// All requests use process ID "shared"\nhandle1, _ := im.GetOrCreateProcess(ctx, key1, config1)\nhandle2, _ := im.GetOrCreateProcess(ctx, key2, config2)\n\nassert.Equal(t, "shared", handle1.ID)\nassert.Equal(t, "shared", handle2.ID)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"example-2-namespace-isolation-multi-tenant",children:"Example 2: Namespace Isolation (Multi-Tenant)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'config := IsolationConfig{\n    Level:          isolation.IsolationNamespace,\n    GracePeriodSec: 10,\n}\n\nim := isolation.NewIsolationManager(config.Level, syncer)\n\nkey1 := isolation.IsolationKey{Namespace: "tenant-a", Session: "s1"}\nkey2 := isolation.IsolationKey{Namespace: "tenant-b", Session: "s2"}\n\nhandle1, _ := im.GetOrCreateProcess(ctx, key1, config1)\nhandle2, _ := im.GetOrCreateProcess(ctx, key2, config2)\n\n// Different namespaces get different processes\nassert.Equal(t, "ns:tenant-a", handle1.ID)\nassert.Equal(t, "ns:tenant-b", handle2.ID)\nassert.NotEqual(t, handle1.ID, handle2.ID)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"example-3-session-isolation-high-security",children:"Example 3: Session Isolation (High Security)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'config := IsolationConfig{\n    Level:          isolation.IsolationSession,\n    GracePeriodSec: 10,\n}\n\nim := isolation.NewIsolationManager(config.Level, syncer)\n\nkey1 := isolation.IsolationKey{Namespace: "tenant-a", Session: "session-1"}\nkey2 := isolation.IsolationKey{Namespace: "tenant-a", Session: "session-2"}\n\nhandle1, _ := im.GetOrCreateProcess(ctx, key1, config1)\nhandle2, _ := im.GetOrCreateProcess(ctx, key2, config2)\n\n// Different sessions get different processes (even same namespace)\nassert.Equal(t, "session:session-1", handle1.ID)\nassert.Equal(t, "session:session-2", handle2.ID)\nassert.NotEqual(t, handle1.ID, handle2.ID)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,r.jsx)(n.h3,{id:"test-coverage",children:"Test Coverage"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Package"}),": ",(0,r.jsx)(n.code,{children:"pkg/isolation/"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Tests"}),": 10 tests, all passing (1.155s runtime)"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\u2705 TestIsolationLevel_String - String representation of levels\n\u2705 TestIsolationKey_ProcessID - ProcessID generation\n\u2705 TestIsolationManager_None - Shared process behavior\n\u2705 TestIsolationManager_Namespace - Namespace isolation\n\u2705 TestIsolationManager_Session - Session isolation\n\u2705 TestIsolationManager_GetProcess - Process retrieval\n\u2705 TestIsolationManager_TerminateProcess - Graceful termination\n\u2705 TestIsolationManager_ListProcesses - Listing all processes\n\u2705 TestIsolationManager_Health - Health reporting\n\u2705 TestIsolationManager_ConcurrentAccess - 10 concurrent goroutines\n"})}),"\n",(0,r.jsx)(n.h3,{id:"framework-integration-tests",children:"Framework Integration Tests"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"File"}),": ",(0,r.jsx)(n.code,{children:"tests/acceptance/framework/isolation_example_test.go"})]}),"\n",(0,r.jsx)(n.p,{children:"Demonstrates:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"No isolation (all tests share one process)"}),"\n",(0,r.jsx)(n.li,{children:"Namespace isolation (one process per namespace)"}),"\n",(0,r.jsx)(n.li,{children:"Session isolation (one process per session)"}),"\n",(0,r.jsx)(n.li,{children:"Health monitoring and reporting"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"performance-characteristics",children:"Performance Characteristics"}),"\n",(0,r.jsx)(n.h3,{id:"process-creation-overhead",children:"Process Creation Overhead"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Isolation Level"}),(0,r.jsx)(n.th,{children:"Processes Created"}),(0,r.jsx)(n.th,{children:"Overhead"}),(0,r.jsx)(n.th,{children:"Best For"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"None"}),(0,r.jsx)(n.td,{children:"1"}),(0,r.jsx)(n.td,{children:"Minimal (<1ms)"}),(0,r.jsx)(n.td,{children:"Development"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Namespace"}),(0,r.jsx)(n.td,{children:"N (tenants)"}),(0,r.jsx)(n.td,{children:"Low (~10-50ms)"}),(0,r.jsx)(n.td,{children:"Multi-tenant SaaS"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Session"}),(0,r.jsx)(n.td,{children:"M (sessions)"}),(0,r.jsx)(n.td,{children:"Medium (~10-50ms)"}),(0,r.jsx)(n.td,{children:"High security"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Measured"}),": Process creation takes ~10ms (includes SyncProcess call)"]}),"\n",(0,r.jsx)(n.h3,{id:"memory-footprint",children:"Memory Footprint"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"None"}),": Single process memory footprint"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Namespace"}),": N \xd7 (process memory + backend connection pool)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Session"}),": M \xd7 (process memory + backend connection pool)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Recommendation"}),": Use Namespace isolation for most production scenarios (balances isolation and resource usage)"]}),"\n",(0,r.jsx)(n.h3,{id:"failure-isolation",children:"Failure Isolation"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Scenario"}),(0,r.jsx)(n.th,{children:"None"}),(0,r.jsx)(n.th,{children:"Namespace"}),(0,r.jsx)(n.th,{children:"Session"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Tenant A crashes"}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Session 1 OOMs"}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"\u2705"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Tenant A exhausts connections"}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Memory leak in shared code"}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"\u274c"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"health-monitoring",children:"Health Monitoring"}),"\n",(0,r.jsx)(n.h3,{id:"health-metrics",children:"Health Metrics"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"IsolationManager.Health()"})," method returns:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"type HealthCheck struct {\n    TotalProcesses       int\n    RunningProcesses     int\n    TerminatingProcesses int\n    FailedProcesses      int\n    WorkQueueDepth       int\n    Processes            map[ProcessID]ProcessHealth\n}\n\ntype ProcessHealth struct {\n    State        ProcessState\n    Healthy      bool\n    Uptime       time.Duration\n    LastSync     time.Time\n    ErrorCount   int\n    RestartCount int\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"health-reporter",children:"Health Reporter"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"IsolationHealthReporter"})," aggregates health across multiple backends:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'reporter := NewIsolationHealthReporter()\nreporter.Register("Redis", isolatedRedis)\nreporter.Register("NATS", isolatedNATS)\n\nhealth := reporter.GetHealth()\nreport := reporter.Report() // Human-readable report\n'})}),"\n",(0,r.jsx)(n.h3,{id:"example-health-report",children:"Example Health Report"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"=== Isolation Health Report ===\n\nBackend: Redis\n  Total Processes: 3\n  Running: 3\n  Terminating: 0\n  Failed: 0\n  Work Queue Depth: 0\n\n  Process ns:tenant-a:\n    State: Syncing\n    Healthy: true\n    Uptime: 5m23s\n    Last Sync: 2025-10-15 08:30:00\n    Errors: 0\n    Restarts: 0\n\n  Process ns:tenant-b:\n    State: Syncing\n    Healthy: true\n    Uptime: 3m12s\n    Last Sync: 2025-10-15 08:28:00\n    Errors: 0\n    Restarts: 0\n"})}),"\n",(0,r.jsx)(n.h2,{id:"prometheus-metrics-integration",children:"Prometheus Metrics Integration"}),"\n",(0,r.jsxs)(n.p,{children:["Since ",(0,r.jsx)(n.code,{children:"isolation"})," builds on ",(0,r.jsx)(n.code,{children:"procmgr"}),", all procmgr Prometheus metrics are available:"]}),"\n",(0,r.jsx)(n.h3,{id:"metrics-available",children:"Metrics Available"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"procmgr_process_state_transitions_total"})," - Process state changes (labels: process_id, from_state, to_state)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"procmgr_process_sync_duration_seconds"})," - Sync duration histogram"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"procmgr_process_termination_duration_seconds"})," - Termination duration histogram"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"procmgr_process_errors_total"})," - Error counter (labels: process_id, error_type)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"procmgr_process_restarts_total"})," - Restart counter"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"procmgr_work_queue_depth"})," - Current queue depth gauge"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"procmgr_work_queue_adds_total"})," - Items added to queue"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"procmgr_work_queue_retries_total"})," - Retry attempts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"procmgr_work_queue_backoff_duration_seconds"})," - Backoff duration histogram"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-promql-queries",children:"Example PromQL Queries"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-promql",children:'# Number of isolated processes per namespace\ncount by (process_id) (procmgr_process_state_transitions_total{process_id=~"ns:.*"})\n\n# Average sync duration per namespace\nrate(procmgr_process_sync_duration_seconds_sum{process_id=~"ns:.*"}[5m])\n/ rate(procmgr_process_sync_duration_seconds_count{process_id=~"ns:.*"}[5m])\n\n# Error rate by namespace\nrate(procmgr_process_errors_total{process_id=~"ns:.*"}[5m])\n\n# Processes in unhealthy state\nprocmgr_process_state_transitions_total{to_state!="Syncing"}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"production-deployment-considerations",children:"Production Deployment Considerations"}),"\n",(0,r.jsx)(n.h3,{id:"when-to-use-each-isolation-level",children:"When to Use Each Isolation Level"}),"\n",(0,r.jsx)(n.h4,{id:"isolationnone",children:"IsolationNone"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Use Cases"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Single-tenant deployments"}),"\n",(0,r.jsx)(n.li,{children:"Development environments"}),"\n",(0,r.jsx)(n.li,{children:"Non-critical workloads"}),"\n",(0,r.jsx)(n.li,{children:"Maximum performance requirements"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Risks"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"No fault isolation"}),"\n",(0,r.jsx)(n.li,{children:"Resource contention"}),"\n",(0,r.jsx)(n.li,{children:"Security boundary only at application level"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"isolationnamespace-recommended",children:"IsolationNamespace (Recommended)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Use Cases"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Multi-tenant SaaS applications"}),"\n",(0,r.jsx)(n.li,{children:"Enterprise deployments with multiple customers"}),"\n",(0,r.jsx)(n.li,{children:"Compliance requirements for tenant isolation"}),"\n",(0,r.jsx)(n.li,{children:"Predictable tenant workloads"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Benefits"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Strong fault isolation per tenant"}),"\n",(0,r.jsx)(n.li,{children:"Resource limits per tenant"}),"\n",(0,r.jsx)(n.li,{children:"Clear billing boundaries"}),"\n",(0,r.jsx)(n.li,{children:"Reasonable overhead"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Recommended Configuration"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"IsolationConfig{\n    Level:          isolation.IsolationNamespace,\n    GracePeriodSec: 30,\n    ProcessOptions: []procmgr.Option{\n        procmgr.WithResyncInterval(60 * time.Second),\n        procmgr.WithBackOffPeriod(10 * time.Second),\n        procmgr.WithMetricsCollector(prometheusMetrics),\n    },\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"isolationsession",children:"IsolationSession"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Use Cases"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"High-security requirements (PCI, HIPAA)"}),"\n",(0,r.jsx)(n.li,{children:"Untrusted user input"}),"\n",(0,r.jsx)(n.li,{children:"Per-user resource limits"}),"\n",(0,r.jsx)(n.li,{children:"Short-lived sessions"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Considerations"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Higher resource overhead"}),"\n",(0,r.jsx)(n.li,{children:"Process creation latency"}),"\n",(0,r.jsx)(n.li,{children:"More complex lifecycle management"}),"\n",(0,r.jsx)(n.li,{children:"Best with session pooling/reuse"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"resource-limits",children:"Resource Limits"}),"\n",(0,r.jsx)(n.p,{children:"Consider setting process-level resource limits using cgroups or systemd:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'// In ProcessSyncer.SyncProcess(), configure limits\ncmd := exec.CommandContext(ctx, "systemd-run", "--scope",\n    "--property=MemoryMax=512M",\n    "--property=CPUQuota=50%",\n    "./backend-process")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"monitoring-recommendations",children:"Monitoring Recommendations"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Alert on high process counts"})," (indicates scaling issues)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Alert on failed processes"})," (indicates backend instability)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Track process uptime distribution"})," (identify restart patterns)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Monitor work queue depth"})," (indicates scheduling bottlenecks)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"future-enhancements",children:"Future Enhancements"}),"\n",(0,r.jsx)(n.h3,{id:"1-dynamic-isolation-level-switching",children:"1. Dynamic Isolation Level Switching"}),"\n",(0,r.jsx)(n.p,{children:"Allow changing isolation level at runtime based on load:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"// Promote from None to Namespace under high load\nif currentLoad > threshold {\n    im.SetLevel(isolation.IsolationNamespace)\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-process-pooling",children:"2. Process Pooling"}),"\n",(0,r.jsx)(n.p,{children:"Pre-warm process pools for faster request handling:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'// Pre-create processes for known tenants\npool := isolation.NewProcessPool(im, []string{"tenant-a", "tenant-b", "tenant-c"})\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-adaptive-isolation",children:"3. Adaptive Isolation"}),"\n",(0,r.jsx)(n.p,{children:"Automatically isolate misbehaving tenants:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'// If tenant-a has >10 errors, isolate it\nif errorRate["tenant-a"] > 10 {\n    im.IsolateTenant("tenant-a", isolation.IsolationSession)\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"4-cross-region-isolation",children:"4. Cross-Region Isolation"}),"\n",(0,r.jsx)(n.p,{children:"Extend isolation to route requests to region-specific processes:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"type IsolationKey struct {\n    Namespace string\n    Session   string\n    Region    string  // NEW\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"comparison-with-other-approaches",children:"Comparison with Other Approaches"}),"\n",(0,r.jsx)(n.h3,{id:"vs-separate-deployments",children:"vs. Separate Deployments"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Aspect"}),(0,r.jsx)(n.th,{children:"Process Isolation"}),(0,r.jsx)(n.th,{children:"Separate Deployments"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Overhead"}),(0,r.jsx)(n.td,{children:"Low (shared host)"}),(0,r.jsx)(n.td,{children:"High (separate hosts)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Deployment time"}),(0,r.jsx)(n.td,{children:"Instant"}),(0,r.jsx)(n.td,{children:"Minutes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Cost"}),(0,r.jsx)(n.td,{children:"Shared infrastructure"}),(0,r.jsx)(n.td,{children:"Per-deployment cost"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Isolation"}),(0,r.jsx)(n.td,{children:"Process-level"}),(0,r.jsx)(n.td,{children:"VM/container-level"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Best for"}),(0,r.jsx)(n.td,{children:"Many small tenants"}),(0,r.jsx)(n.td,{children:"Few large tenants"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"vs-thread-pools",children:"vs. Thread Pools"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Aspect"}),(0,r.jsx)(n.th,{children:"Process Isolation"}),(0,r.jsx)(n.th,{children:"Thread Pools"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Crash isolation"}),(0,r.jsx)(n.td,{children:"\u2705 Full"}),(0,r.jsx)(n.td,{children:"\u274c Shared process space"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Memory isolation"}),(0,r.jsx)(n.td,{children:"\u2705 Separate address space"}),(0,r.jsx)(n.td,{children:"\u274c Shared heap"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Resource limits"}),(0,r.jsx)(n.td,{children:"\u2705 OS-level cgroups"}),(0,r.jsx)(n.td,{children:"\u274c Application-level"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Overhead"}),(0,r.jsx)(n.td,{children:"Medium"}),(0,r.jsx)(n.td,{children:"Low"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Best for"}),(0,r.jsx)(n.td,{children:"Untrusted workloads"}),(0,r.jsx)(n.td,{children:"Trusted internal services"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"vs-kubernetes-namespaces",children:"vs. Kubernetes Namespaces"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Aspect"}),(0,r.jsx)(n.th,{children:"Process Isolation"}),(0,r.jsx)(n.th,{children:"K8s Namespaces"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Granularity"}),(0,r.jsx)(n.td,{children:"Per request"}),(0,r.jsx)(n.td,{children:"Per deployment"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Startup time"}),(0,r.jsx)(n.td,{children:"<50ms"}),(0,r.jsx)(n.td,{children:"Seconds to minutes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Resource overhead"}),(0,r.jsx)(n.td,{children:"Single binary"}),(0,r.jsx)(n.td,{children:"Full pod + sidecar"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Orchestration"}),(0,r.jsx)(n.td,{children:"Built-in"}),(0,r.jsx)(n.td,{children:"Requires K8s"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Best for"}),(0,r.jsx)(n.td,{children:"Dynamic isolation"}),(0,r.jsx)(n.td,{children:"Static tenant boundaries"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"isolation"})," package provides a flexible, production-ready solution for process isolation in Prism. By building on ",(0,r.jsx)(n.code,{children:"procmgr"}),", it inherits robust lifecycle management, health monitoring, and metrics collection while adding multi-tenant isolation capabilities."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Takeaways"}),":"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Three isolation levels"})," (None, Namespace, Session) cover different use cases"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Bulkhead pattern"})," prevents cascading failures across tenants/sessions"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Built on RFC-034"})," (procmgr) for robust process management"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Pattern runner integration"})," enables isolated acceptance testing"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Comprehensive testing"})," (10 tests, all passing)"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Production-ready"})," with health monitoring and Prometheus metrics"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Recommended Default"}),": ",(0,r.jsx)(n.code,{children:"IsolationNamespace"})," for multi-tenant production deployments (balances isolation and resource efficiency)"]}),"\n",(0,r.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/rfc/rfc-034",children:"RFC-034: Robust Process Manager Package"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/jrepp/prism-data-layer/tree/main/pkg/procmgr/README.md",children:"pkg/procmgr/README.md"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/jrepp/prism-data-layer/tree/main/pkg/isolation/README.md",children:"pkg/isolation/README.md"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/azure/architecture/patterns/bulkhead",children:"Bulkhead Pattern - Microsoft Azure"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://pragprog.com/titles/mnee2/release-it-second-edition/",children:"Release It! - Michael Nygard"})," (Bulkhead pattern origin)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"appendix-a-complete-code-example",children:"Appendix A: Complete Code Example"}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.code,{children:"tests/acceptance/framework/isolation_example_test.go"})," for complete runnable examples demonstrating all three isolation levels."]}),"\n",(0,r.jsx)(n.h2,{id:"appendix-b-performance-benchmark-results",children:"Appendix B: Performance Benchmark Results"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"BenchmarkIsolationManager_GetOrCreateProcess_None-8       100000    10523 ns/op\nBenchmarkIsolationManager_GetOrCreateProcess_Namespace-8   50000    28742 ns/op\nBenchmarkIsolationManager_GetOrCreateProcess_Session-8     50000    29183 ns/op\nBenchmarkIsolationManager_TerminateProcess-8               30000    45891 ns/op\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Interpretation"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Process creation: ~10-30ms depending on isolation level"}),"\n",(0,r.jsx)(n.li,{children:"Termination: ~45ms (includes graceful shutdown)"}),"\n",(0,r.jsx)(n.li,{children:"Acceptable for test frameworks and production request routing"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);