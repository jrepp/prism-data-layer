"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[4817],{3418:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"rfc-027","title":"Namespace Configuration and Client Request Flow","description":"Abstract","source":"@site/../docs-cms/rfcs/rfc-027-namespace-configuration-client-perspective.md","sourceDirName":".","slug":"/rfc-027","permalink":"/prism-data-layer/rfc/rfc-027","draft":false,"unlisted":false,"editUrl":"https://github.com/jrepp/prism-data-layer/tree/main/docs-cms/../docs-cms/rfcs/rfc-027-namespace-configuration-client-perspective.md","tags":[{"inline":true,"label":"namespace","permalink":"/prism-data-layer/rfc/tags/namespace"},{"inline":true,"label":"configuration","permalink":"/prism-data-layer/rfc/tags/configuration"},{"inline":true,"label":"client-api","permalink":"/prism-data-layer/rfc/tags/client-api"},{"inline":true,"label":"patterns","permalink":"/prism-data-layer/rfc/tags/patterns"},{"inline":true,"label":"self-service","permalink":"/prism-data-layer/rfc/tags/self-service"}],"version":"current","frontMatter":{"author":"Platform Team","created":"2025-10-10T00:00:00.000Z","doc_uuid":"8506cf18-39db-4f79-868d-a6e823f2ab3e","id":"rfc-027","project_id":"prism-data-layer","status":"Proposed","tags":["namespace","configuration","client-api","patterns","self-service"],"title":"Namespace Configuration and Client Request Flow","updated":"2025-10-10T00:00:00.000Z"},"sidebar":"rfcSidebar","previous":{"title":"POC 1 - KeyValue with MemStore Implementation Plan (Original) \u2022 RFC-026","permalink":"/prism-data-layer/rfc/rfc-026"},"next":{"title":"prism-probe - CLI Client for Testing and Debugging \u2022 RFC-028","permalink":"/prism-data-layer/rfc/rfc-028"}}');var r=s(74848),a=s(28453);const t={author:"Platform Team",created:new Date("2025-10-10T00:00:00.000Z"),doc_uuid:"8506cf18-39db-4f79-868d-a6e823f2ab3e",id:"rfc-027",project_id:"prism-data-layer",status:"Proposed",tags:["namespace","configuration","client-api","patterns","self-service"],title:"Namespace Configuration and Client Request Flow",updated:new Date("2025-10-10T00:00:00.000Z")},l=void 0,c={},o=[{value:"Abstract",id:"abstract",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Problem Statement",id:"problem-statement",level:3},{value:"Goals",id:"goals",level:3},{value:"Non-Goals",id:"non-goals",level:3},{value:"Three-Layer Architecture Recap",id:"three-layer-architecture-recap",level:2},{value:"Client Configuration Surface",id:"client-configuration-surface",level:2},{value:"What Clients Control",id:"what-clients-control",level:3},{value:"What Platform Controls",id:"what-platform-controls",level:3},{value:"Namespace Request Flow",id:"namespace-request-flow",level:2},{value:"Step 1: Namespace Creation Request",id:"step-1-namespace-creation-request",level:3},{value:"Step 2: Platform Pattern Selection",id:"step-2-platform-pattern-selection",level:3},{value:"Step 3: Namespace Provisioning",id:"step-3-namespace-provisioning",level:3},{value:"Step 4: Client Usage",id:"step-4-client-usage",level:3},{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"Example 1: Simple Key-Value Store",id:"example-1-simple-key-value-store",level:3},{value:"Example 2: Event Streaming with Large Payloads",id:"example-2-event-streaming-with-large-payloads",level:3},{value:"Example 3: Transactional Database Operations",id:"example-3-transactional-database-operations",level:3},{value:"Client vs Platform Responsibility Matrix",id:"client-vs-platform-responsibility-matrix",level:2},{value:"Authorization Boundaries",id:"authorization-boundaries",level:2},{value:"Boundary 1: Guided (Default)",id:"boundary-1-guided-default",level:3},{value:"Boundary 2: Advanced (Requires Approval)",id:"boundary-2-advanced-requires-approval",level:3},{value:"Boundary 3: Expert (Platform Team Only)",id:"boundary-3-expert-platform-team-only",level:3},{value:"Namespace Lifecycle",id:"namespace-lifecycle",level:2},{value:"1. Creation",id:"1-creation",level:3},{value:"2. Usage",id:"2-usage",level:3},{value:"3. Monitoring",id:"3-monitoring",level:3},{value:"4. Updates",id:"4-updates",level:3},{value:"5. Deletion",id:"5-deletion",level:3},{value:"Request Validation",id:"request-validation",level:2},{value:"Schema Validation",id:"schema-validation",level:3},{value:"Business Rules",id:"business-rules",level:3},{value:"Pattern Selection Algorithm",id:"pattern-selection-algorithm",level:2},{value:"Backend Selection Algorithm",id:"backend-selection-algorithm",level:2},{value:"Namespace Discovery",id:"namespace-discovery",level:2},{value:"Option 1: DNS Discovery (Recommended)",id:"option-1-dns-discovery-recommended",level:3},{value:"Option 2: Control Plane API",id:"option-2-control-plane-api",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Namespace Creation Failures",id:"namespace-creation-failures",level:3},{value:"Capacity Exceeded",id:"capacity-exceeded",level:3},{value:"Namespace Already Exists",id:"namespace-already-exists",level:3},{value:"Client SDK Integration",id:"client-sdk-integration",level:2},{value:"Python Client",id:"python-client",level:3},{value:"Go Client",id:"go-client",level:3},{value:"Migration from Existing Systems",id:"migration-from-existing-systems",level:2},{value:"Before: Direct Kafka Usage",id:"before-direct-kafka-usage",level:3},{value:"After: Prism Namespace",id:"after-prism-namespace",level:3},{value:"Self-Service Portal (Future)",id:"self-service-portal-future",level:2},{value:"Related Documents",id:"related-documents",level:2},{value:"Revision History",id:"revision-history",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"abstract",children:"Abstract"}),"\n",(0,r.jsx)(n.p,{children:"This RFC specifies how application owners request and configure namespaces in Prism from a client perspective. It defines the limited configuration surface area available to clients, explains how client requirements map to the three-layer architecture (Client API \u2192 Patterns \u2192 Backends), and clarifies the separation of concerns between client-controlled and platform-controlled configuration."}),"\n",(0,r.jsx)(n.h2,{id:"motivation",children:"Motivation"}),"\n",(0,r.jsx)(n.h3,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,r.jsx)(n.p,{children:"Application teams need to use Prism data access services, but the current documentation is spread across multiple RFCs and ADRs (RFC-001, RFC-014, ADR-006, RFC-003). Teams have questions:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:'"How do I request a namespace?"'})," - What's the process for getting started?"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:'"What can I configure?"'})," - What options are under my control vs platform control?"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:'"How do patterns get selected?"'})," - How do my requirements translate to implementation?"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:'"What\'s the three-layer architecture?"'})," - How does Client API \u2192 Patterns \u2192 Backends work from my perspective?"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"goals",children:"Goals"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Clear Client Perspective"}),": Document namespace configuration from application owner's viewpoint"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Limited Configuration Surface"}),": Define exactly what clients can configure (prevents misconfiguration)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Self-Service Enablement"}),": Teams can request namespaces without platform team intervention"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pattern Selection Transparency"}),": Explain how requirements map to patterns and backends"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Three-Layer Clarity"}),": Show how client concerns map to architecture layers"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"non-goals",children:"Non-Goals"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Platform Configuration"}),": Internal backend connection strings, resource pools (platform-controlled)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pattern Implementation"}),": How patterns work internally (see RFC-014)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend Selection Logic"}),": Algorithm for choosing backends (platform-controlled)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multi-Cluster Management"}),": Cross-region namespace configuration (see RFC-012)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"three-layer-architecture-recap",children:"Three-Layer Architecture Recap"}),"\n",(0,r.jsx)(n.p,{children:"Before diving into client configuration, let's establish the architecture model:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:'\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Client API (What)                \u2502  \u2190 Application declares what they need\n\u2502   KeyValue | PubSub | Queue        \u2502     "I need a durable message queue"\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n               \u2193\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Patterns (How)                   \u2502  \u2190 Prism selects how to implement it\n\u2502   Outbox | CDC | Claim Check       \u2502     "Use Outbox + WAL patterns"\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n               \u2193\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Backends (Where)                 \u2502  \u2190 Prism provisions where to store data\n\u2502   Kafka | Postgres | Redis | NATS  \u2502     "Provision Kafka topic + Postgres table"\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Principle"}),": Clients declare ",(0,r.jsx)(n.strong,{children:"what"})," they need (Client API + requirements). Prism decides ",(0,r.jsx)(n.strong,{children:"how"})," to implement it (Patterns) and ",(0,r.jsx)(n.strong,{children:"where"})," to store data (Backends)."]}),"\n",(0,r.jsx)(n.h2,{id:"client-configuration-surface",children:"Client Configuration Surface"}),"\n",(0,r.jsx)(n.h3,{id:"what-clients-control",children:"What Clients Control"}),"\n",(0,r.jsxs)(n.p,{children:["Clients have a ",(0,r.jsx)(n.strong,{children:"limited, safe configuration surface"})," to declare their needs:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Client API Type"})," (required): ",(0,r.jsx)(n.code,{children:"keyvalue"}),", ",(0,r.jsx)(n.code,{children:"pubsub"}),", ",(0,r.jsx)(n.code,{children:"queue"}),", ",(0,r.jsx)(n.code,{children:"reader"}),", ",(0,r.jsx)(n.code,{children:"transact"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Functional Requirements"})," (needs): Durability, message size, retention, consistency"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Capacity Estimates"})," (needs): RPS, data size, concurrent connections"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Access Control"})," (ownership): Team ownership, consumer services"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Compliance"})," (policies): Retention, PII handling, audit requirements"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"what-platform-controls",children:"What Platform Controls"}),"\n",(0,r.jsx)(n.p,{children:"Platform team controls implementation details (clients never see these):"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pattern Selection"}),": Which patterns to apply (Outbox, CDC, Claim Check)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend Selection"}),": Which backend to use (Kafka vs NATS, Postgres vs DynamoDB)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resource Provisioning"}),": Topic partitions, connection pools, replica counts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Network Configuration"}),": VPC settings, service mesh configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Observability"}),": Metrics, tracing, alerting infrastructure"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"namespace-request-flow",children:"Namespace Request Flow"}),"\n",(0,r.jsx)(n.h3,{id:"step-1-namespace-creation-request",children:"Step 1: Namespace Creation Request"}),"\n",(0,r.jsx)(n.p,{children:"Application owner creates a namespace by declaring their needs:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# namespace-request.yaml\nnamespace: order-processing\nteam: payments-team\n\n# Layer 1: Client API (What)\nclient_api: queue  # KeyValue, PubSub, Queue, Reader, Transact\n\n# Layer 2: Requirements (Needs)\nneeds:\n  # Durability\n  durability: strong              # strong | eventual | best-effort\n  replay: enabled                 # Enable replaying messages\n\n  # Capacity\n  write_rps: 5000                 # Estimated writes per second\n  read_rps: 10000                 # Estimated reads per second\n  data_size: 100GB                # Estimated total data size\n  retention: 30days               # How long to keep data\n\n  # Message Characteristics\n  max_message_size: 1MB           # Largest message size\n  ordered: true                   # Preserve message order\n\n  # Consistency\n  consistency: strong             # strong | eventual | bounded_staleness\n\n# Layer 3: Access Control\naccess:\n  owners:\n    - team: payments-team\n  consumers:\n    - service: order-api         # Read-write access\n    - service: analytics-pipeline # Read-only access\n\n# Compliance & Policies\npolicies:\n  pii_handling: enabled           # Enable PII detection/encryption\n  audit_logging: enabled          # Log all access\n  compliance: pci                 # PCI-DSS compliance requirements\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"What's Happening:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Client declares"}),': "I need a durable queue for order processing with strong consistency"']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Platform receives"}),": Namespace request with requirements"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Platform decides"}),": Which patterns/backends to use based on needs"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"step-2-platform-pattern-selection",children:"Step 2: Platform Pattern Selection"}),"\n",(0,r.jsx)(n.p,{children:"Platform analyzes requirements and selects patterns (client doesn't see this):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# INTERNAL: Platform-generated configuration (client never sees this)\nnamespace: order-processing\nclient_api: queue\n\n# Platform selects patterns based on needs\npatterns:\n  - type: wal                     # For durability: strong\n    config:\n      fsync_enabled: true         # Disk persistence\n\n  - type: replay-store            # For replay: enabled\n    config:\n      retention_days: 30          # From needs.retention\n\n# Platform selects backend\nbackend:\n  type: kafka                     # Queue \u2192 Kafka (best fit)\n  config:\n    topic: order-processing-queue\n    partitions: 20                # Calculated from needs.write_rps\n    replication: 3                # Strong durability requirement\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Why Client Doesn't See This:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Prevents misconfiguration"}),": Clients can't accidentally select incompatible patterns/backends"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enables evolution"}),": Platform can change implementation without breaking clients"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enforces best practices"}),": Platform ensures correct pattern composition"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"step-3-namespace-provisioning",children:"Step 3: Namespace Provisioning"}),"\n",(0,r.jsx)(n.p,{children:"Platform provisions resources:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Create Backend Resources"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Kafka topic ",(0,r.jsx)(n.code,{children:"order-processing-queue"})," with 20 partitions"]}),"\n",(0,r.jsxs)(n.li,{children:["Postgres WAL table ",(0,r.jsx)(n.code,{children:"wal_order_processing"})]}),"\n",(0,r.jsxs)(n.li,{children:["Postgres replay store table ",(0,r.jsx)(n.code,{children:"replay_order_processing"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Configure Pattern Providers"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Start WAL pattern provider (connects to Postgres WAL table)"}),"\n",(0,r.jsx)(n.li,{children:"Start Kafka publisher (connects to Kafka topic)"}),"\n",(0,r.jsx)(n.li,{children:"Start replay store provider (connects to Postgres replay table)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Update Proxy Configuration"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Register namespace ",(0,r.jsx)(n.code,{children:"order-processing"})," in proxy"]}),"\n",(0,r.jsxs)(n.li,{children:["Map ",(0,r.jsx)(n.code,{children:"queue"})," client API to pattern chain: ",(0,r.jsx)(n.code,{children:"WAL \u2192 Replay Store \u2192 Kafka"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Setup Access Control"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Create RBAC policies for ",(0,r.jsx)(n.code,{children:"payments-team"})," (admin), ",(0,r.jsx)(n.code,{children:"order-api"})," (read-write), ",(0,r.jsx)(n.code,{children:"analytics-pipeline"})," (read-only)"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Enable Observability"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Create Prometheus metrics for namespace"}),"\n",(0,r.jsx)(n.li,{children:"Configure tracing spans"}),"\n",(0,r.jsx)(n.li,{children:"Setup audit log collection"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"step-4-client-usage",children:"Step 4: Client Usage"}),"\n",(0,r.jsx)(n.p,{children:"Once provisioned, client uses the namespace:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Client code - simple, abstract API\nfrom prism_client import PrismClient\n\nclient = PrismClient(namespace="order-processing")\n\n# Publish message (durability handled by platform)\nclient.publish("orders", {\n    "order_id": 12345,\n    "amount": 99.99,\n    "status": "pending"\n})\n# Platform handles: WAL \u2192 Disk \u2192 Kafka \u2192 Acknowledge\n# Client only sees: message published successfully\n\n# Consume messages (replay enabled by platform)\nfor message in client.consume("orders"):\n    process_order(message.payload)\n    message.ack()  # Platform updates consumer offset\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Client Experience:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Simple API: ",(0,r.jsx)(n.code,{children:"publish()"}),", ",(0,r.jsx)(n.code,{children:"consume()"}),", ",(0,r.jsx)(n.code,{children:"ack()"})]}),"\n",(0,r.jsx)(n.li,{children:"No knowledge of WAL, Kafka topics, partitions, or pattern composition"}),"\n",(0,r.jsx)(n.li,{children:"Platform handles durability, replay, ordering, consistency guarantees"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,r.jsx)(n.h3,{id:"example-1-simple-key-value-store",children:"Example 1: Simple Key-Value Store"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Use Case"}),": User profile cache with fast reads"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"namespace: user-profiles-cache\nteam: user-service-team\n\nclient_api: keyvalue\n\nneeds:\n  durability: eventual            # Can tolerate loss\n  read_rps: 50000                 # Very high read load\n  write_rps: 500                  # Low write load\n  data_size: 10GB                 # Moderate size\n  ttl: 15min                      # Auto-expire entries\n  consistency: eventual           # Cache doesn't need strong consistency\n\naccess:\n  owners:\n    - team: user-service-team\n  consumers:\n    - service: user-api\n    - service: user-profile-service\n\npolicies:\n  pii_handling: enabled           # Profiles contain PII\n  audit_logging: disabled         # Cache reads not audited\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Platform Selects"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Client API"}),": KeyValue"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Patterns"}),": Cache (look-aside pattern)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend"}),": Redis (best for high-read, low-write with TTL)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Implementation"}),": No WAL (eventual durability), Redis TTL for expiration"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-2-event-streaming-with-large-payloads",children:"Example 2: Event Streaming with Large Payloads"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Use Case"}),": Video upload events with large file references"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"namespace: video-uploads\nteam: media-team\n\nclient_api: pubsub\n\nneeds:\n  durability: strong              # Can't lose upload events\n  replay: enabled                 # Reprocess events for analytics\n  write_rps: 1000\n  read_rps: 5000\n  max_message_size: 50MB          # Large video metadata + thumbnails\n  retention: 90days\n  consistency: eventual           # PubSub is inherently eventual\n\naccess:\n  owners:\n    - team: media-team\n  consumers:\n    - service: video-processor\n    - service: thumbnail-generator\n    - service: analytics-pipeline\n\npolicies:\n  pii_handling: disabled\n  audit_logging: enabled\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Platform Selects"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Client API"}),": PubSub"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Patterns"}),": Claim Check (for large payloads), WAL (for durability), Tiered Storage (for 90-day retention)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backends"}),": S3 (claim check storage), Kafka (event stream), Postgres (WAL)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Implementation"}),":\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Payloads >1MB stored in S3"}),"\n",(0,r.jsx)(n.li,{children:"Kafka receives lightweight message with S3 reference"}),"\n",(0,r.jsx)(n.li,{children:"WAL ensures durability"}),"\n",(0,r.jsx)(n.li,{children:"Old messages tiered to S3 after 7 days (hot \u2192 warm \u2192 cold)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-3-transactional-database-operations",children:"Example 3: Transactional Database Operations"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Use Case"}),": Order processing with inbox/outbox pattern"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"namespace: order-transactions\nteam: payments-team\n\nclient_api: transact\n\nneeds:\n  durability: strong              # Financial transactions\n  consistency: strong             # ACID transactions required\n  write_rps: 500\n  retention: forever              # Financial compliance\n  ordered: true                   # Transaction order matters\n\naccess:\n  owners:\n    - team: payments-team\n  consumers:\n    - service: payment-service    # Read-write\n    - service: order-service      # Read-write\n    - service: audit-service      # Read-only\n\npolicies:\n  pii_handling: enabled           # Customer payment info\n  audit_logging: enabled          # Financial compliance\n  compliance: pci                 # PCI-DSS requirements\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Platform Selects"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Client API"}),": Transact"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Patterns"}),": Outbox (transactional guarantees), WAL (durability)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend"}),": Postgres (ACID transactions, strong consistency)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Implementation"}),":\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Two tables: ",(0,r.jsx)(n.code,{children:"orders"})," (data), ",(0,r.jsx)(n.code,{children:"orders_outbox"})," (mailbox)"]}),"\n",(0,r.jsx)(n.li,{children:"Transactions ensure atomicity"}),"\n",(0,r.jsx)(n.li,{children:"Outbox publisher processes mailbox entries"}),"\n",(0,r.jsx)(n.li,{children:"Full audit logging for PCI compliance"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"client-vs-platform-responsibility-matrix",children:"Client vs Platform Responsibility Matrix"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Configuration Area"}),(0,r.jsx)(n.th,{children:"Client Controls"}),(0,r.jsx)(n.th,{children:"Platform Controls"}),(0,r.jsx)(n.th,{children:"Rationale"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"API Type"})}),(0,r.jsx)(n.td,{children:"\u2705 Yes"}),(0,r.jsx)(n.td,{children:"\u274c No"}),(0,r.jsx)(n.td,{children:"Client knows their access pattern"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Durability Level"})}),(0,r.jsx)(n.td,{children:"\u2705 Yes (needs.durability)"}),(0,r.jsx)(n.td,{children:"\u274c No"}),(0,r.jsx)(n.td,{children:"Client knows data criticality"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Consistency Level"})}),(0,r.jsx)(n.td,{children:"\u2705 Yes (needs.consistency)"}),(0,r.jsx)(n.td,{children:"\u274c No"}),(0,r.jsx)(n.td,{children:"Client knows consistency requirements"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Capacity Estimates"})}),(0,r.jsx)(n.td,{children:"\u2705 Yes (needs.*_rps, data_size)"}),(0,r.jsx)(n.td,{children:"\u274c No"}),(0,r.jsx)(n.td,{children:"Client knows workload"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Retention Period"})}),(0,r.jsx)(n.td,{children:"\u2705 Yes (needs.retention)"}),(0,r.jsx)(n.td,{children:"\u274c No"}),(0,r.jsx)(n.td,{children:"Client knows data lifecycle"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Message Size"})}),(0,r.jsx)(n.td,{children:"\u2705 Yes (needs.max_message_size)"}),(0,r.jsx)(n.td,{children:"\u274c No"}),(0,r.jsx)(n.td,{children:"Client knows payload size"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Team Ownership"})}),(0,r.jsx)(n.td,{children:"\u2705 Yes (access.owners)"}),(0,r.jsx)(n.td,{children:"\u274c No"}),(0,r.jsx)(n.td,{children:"Client knows team structure"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Consumer Services"})}),(0,r.jsx)(n.td,{children:"\u2705 Yes (access.consumers)"}),(0,r.jsx)(n.td,{children:"\u274c No"}),(0,r.jsx)(n.td,{children:"Client knows service dependencies"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"PII Handling"})}),(0,r.jsx)(n.td,{children:"\u2705 Yes (policies.pii_handling)"}),(0,r.jsx)(n.td,{children:"\u274c No"}),(0,r.jsx)(n.td,{children:"Client knows data sensitivity"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Compliance"})}),(0,r.jsx)(n.td,{children:"\u2705 Yes (policies.compliance)"}),(0,r.jsx)(n.td,{children:"\u274c No"}),(0,r.jsx)(n.td,{children:"Client knows regulatory requirements"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Pattern Selection"})}),(0,r.jsx)(n.td,{children:"\u274c No"}),(0,r.jsx)(n.td,{children:"\u2705 Yes"}),(0,r.jsx)(n.td,{children:"Platform expertise required"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Backend Selection"})}),(0,r.jsx)(n.td,{children:"\u274c No"}),(0,r.jsx)(n.td,{children:"\u2705 Yes"}),(0,r.jsx)(n.td,{children:"Platform knows infrastructure"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Resource Provisioning"})}),(0,r.jsx)(n.td,{children:"\u274c No"}),(0,r.jsx)(n.td,{children:"\u2705 Yes"}),(0,r.jsx)(n.td,{children:"Platform manages capacity"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Network Configuration"})}),(0,r.jsx)(n.td,{children:"\u274c No"}),(0,r.jsx)(n.td,{children:"\u2705 Yes"}),(0,r.jsx)(n.td,{children:"Platform controls networking"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Monitoring Setup"})}),(0,r.jsx)(n.td,{children:"\u274c No"}),(0,r.jsx)(n.td,{children:"\u2705 Yes"}),(0,r.jsx)(n.td,{children:"Platform provides observability"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Pattern Composition"})}),(0,r.jsx)(n.td,{children:"\u274c No"}),(0,r.jsx)(n.td,{children:"\u2705 Yes"}),(0,r.jsx)(n.td,{children:"Platform ensures compatibility"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Backend Tuning"})}),(0,r.jsx)(n.td,{children:"\u274c No"}),(0,r.jsx)(n.td,{children:"\u2705 Yes"}),(0,r.jsx)(n.td,{children:"Platform optimizes performance"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Failover Strategy"})}),(0,r.jsx)(n.td,{children:"\u274c No"}),(0,r.jsx)(n.td,{children:"\u2705 Yes"}),(0,r.jsx)(n.td,{children:"Platform manages reliability"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"authorization-boundaries",children:"Authorization Boundaries"}),"\n",(0,r.jsx)(n.p,{children:"Platform enforces authorization boundaries to prevent misconfiguration:"}),"\n",(0,r.jsx)(n.h3,{id:"boundary-1-guided-default",children:"Boundary 1: Guided (Default)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Who"}),": All application teams"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"What They Can Configure"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Client API type"}),"\n",(0,r.jsx)(n.li,{children:"Functional requirements (needs.*)"}),"\n",(0,r.jsx)(n.li,{children:"Capacity estimates (needs.*_rps, needs.data_size)"}),"\n",(0,r.jsx)(n.li,{children:"Access control (access.*)"}),"\n",(0,r.jsx)(n.li,{children:"Basic policies (policies.pii_handling, policies.audit_logging)"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"What's Restricted"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u274c Cannot select patterns manually"}),"\n",(0,r.jsx)(n.li,{children:"\u274c Cannot select backends manually"}),"\n",(0,r.jsx)(n.li,{children:"\u274c Cannot tune backend-specific settings"}),"\n",(0,r.jsx)(n.li,{children:"\u274c Cannot bypass capacity limits"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Allowed\nneeds:\n  durability: strong\n  write_rps: 5000\n\n# NOT allowed (would be rejected)\npatterns:\n  - type: outbox  # \u274c Pattern selection is platform-controlled\nbackend:\n  type: kafka     # \u274c Backend selection is platform-controlled\n"})}),"\n",(0,r.jsx)(n.h3,{id:"boundary-2-advanced-requires-approval",children:"Boundary 2: Advanced (Requires Approval)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Who"}),": Teams with platform approval for specific namespaces"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Additional Capabilities"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'Backend preference (e.g., "prefer Redis over Postgres")'}),"\n",(0,r.jsx)(n.li,{children:"Advanced consistency models (e.g., bounded staleness with specific lag tolerance)"}),"\n",(0,r.jsx)(n.li,{children:"Custom retention policies beyond standard limits"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Requires approval annotation\nneeds:\n  durability: strong\n  write_rps: 50000           # Above standard limit\n  backend_preference: kafka  # Preference (platform can override)\n\napproval:\n  approved_by: platform-team\n  approval_ticket: JIRA-1234\n"})}),"\n",(0,r.jsx)(n.h3,{id:"boundary-3-expert-platform-team-only",children:"Boundary 3: Expert (Platform Team Only)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Who"}),": Platform team members"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Full Control"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Manual pattern selection"}),"\n",(0,r.jsx)(n.li,{children:"Manual backend selection"}),"\n",(0,r.jsx)(n.li,{children:"Direct backend tuning"}),"\n",(0,r.jsx)(n.li,{children:"Bypass capacity guardrails"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Platform team only\npatterns:\n  - type: outbox\n    config:\n      batch_size: 500     # Backend-specific tuning\n  - type: claim-check\n    config:\n      threshold: 500KB    # Custom threshold\n\nbackend:\n  type: postgres\n  config:\n    connection_pool_size: 50  # Direct tuning\n    statement_timeout: 30s\n"})}),"\n",(0,r.jsx)(n.h2,{id:"namespace-lifecycle",children:"Namespace Lifecycle"}),"\n",(0,r.jsx)(n.h3,{id:"1-creation",children:"1. Creation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Via CLI\nprism namespace create \\\n  --file namespace-request.yaml \\\n  --team payments-team\n\n# Via API\nPOST /api/v1/namespaces\n{\n  "namespace": "order-processing",\n  "team": "payments-team",\n  "client_api": "queue",\n  "needs": { ... },\n  "access": { ... },\n  "policies": { ... }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Platform Actions"}),":"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Validate request (schema, authorization)"}),"\n",(0,r.jsx)(n.li,{children:"Select patterns based on needs"}),"\n",(0,r.jsx)(n.li,{children:"Select backend based on patterns + needs"}),"\n",(0,r.jsx)(n.li,{children:"Provision backend resources"}),"\n",(0,r.jsx)(n.li,{children:"Configure pattern providers"}),"\n",(0,r.jsx)(n.li,{children:"Register namespace in proxy"}),"\n",(0,r.jsx)(n.li,{children:"Setup observability"}),"\n",(0,r.jsx)(n.li,{children:"Return namespace details to client"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Client Receives"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "namespace": "order-processing",\n  "status": "active",\n  "endpoints": [\n    "prism-proxy-1.example.com:8980",\n    "prism-proxy-2.example.com:8980"\n  ],\n  "client_api": "queue",\n  "created_at": "2025-10-10T10:00:00Z"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"2-usage",children:"2. Usage"}),"\n",(0,r.jsx)(n.p,{children:"Client connects to namespace:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'client = PrismClient(\n    namespace="order-processing",\n    endpoints=["prism-proxy-1.example.com:8980"]\n)\n\n# Use client API (queue)\nclient.publish("orders", payload)\nmessages = client.consume("orders")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-monitoring",children:"3. Monitoring"}),"\n",(0,r.jsx)(n.p,{children:"Client monitors namespace health via metrics:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Prometheus metrics (namespace-scoped)\nprism_namespace_requests_total{namespace="order-processing"} 123456\nprism_namespace_latency_ms{namespace="order-processing",p="p99"} 8.5\nprism_namespace_error_rate{namespace="order-processing"} 0.001\n'})}),"\n",(0,r.jsx)(n.h3,{id:"4-updates",children:"4. Updates"}),"\n",(0,r.jsx)(n.p,{children:"Client can update limited configuration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Update capacity estimates\nprism namespace update order-processing \\\n  --needs.write_rps 10000\n\n# Update access control\nprism namespace update order-processing \\\n  --add-consumer analytics-v2-service\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Platform Actions"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Validate changes"}),"\n",(0,r.jsx)(n.li,{children:"If capacity increased: Scale backend resources"}),"\n",(0,r.jsx)(n.li,{children:"If new consumer added: Update RBAC policies"}),"\n",(0,r.jsx)(n.li,{children:"If patterns need changing: Transparently migrate"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"5-deletion",children:"5. Deletion"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"prism namespace delete order-processing --confirm\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Platform Actions"}),":"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Mark namespace as deleting"}),"\n",(0,r.jsx)(n.li,{children:"Stop accepting new requests"}),"\n",(0,r.jsx)(n.li,{children:"Drain existing requests (graceful shutdown)"}),"\n",(0,r.jsx)(n.li,{children:"Delete pattern providers"}),"\n",(0,r.jsx)(n.li,{children:"Delete backend resources (topic, tables)"}),"\n",(0,r.jsx)(n.li,{children:"Archive audit logs"}),"\n",(0,r.jsx)(n.li,{children:"Unregister from proxy"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"request-validation",children:"Request Validation"}),"\n",(0,r.jsx)(n.p,{children:"Platform validates all namespace requests:"}),"\n",(0,r.jsx)(n.h3,{id:"schema-validation",children:"Schema Validation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Required fields\nnamespace: string (required, max 64 chars, lowercase-hyphen)\nteam: string (required)\nclient_api: enum (required, one of: keyvalue|pubsub|queue|reader|transact)\nneeds: object (required)\naccess: object (required)\n\n# Capacity constraints\nneeds.write_rps: integer (max: 100000 without approval)\nneeds.read_rps: integer (max: 500000 without approval)\nneeds.data_size: string (max: 1TB without approval)\nneeds.max_message_size: string (max: 100MB without approval)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"business-rules",children:"Business Rules"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Namespace uniqueness"}),": Namespace names must be globally unique"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Team authorization"}),": Requesting team must exist and have quota"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"API compatibility"}),": Needs must be compatible with client_api"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Capacity limits"}),": Must be within team quota"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Consistency constraints"}),": Some APIs don't support strong consistency"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example Rejections"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# \u274c Rejected: KeyValue doesn't support max_message_size\nnamespace: user-cache\nclient_api: keyvalue\nneeds:\n  max_message_size: 50MB  # \u274c KeyValue uses fixed-size values\n\n# \u274c Rejected: PubSub can't provide strong consistency\nnamespace: events\nclient_api: pubsub\nneeds:\n  consistency: strong  # \u274c PubSub is inherently eventual\n\n# \u274c Rejected: Exceeds team quota\nnamespace: huge-data\nclient_api: queue\nneeds:\n  write_rps: 200000    # \u274c Team quota: 100k RPS\n"})}),"\n",(0,r.jsx)(n.h2,{id:"pattern-selection-algorithm",children:"Pattern Selection Algorithm"}),"\n",(0,r.jsx)(n.p,{children:"Platform selects patterns based on client needs (internal logic, transparent to clients):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Platform pattern selection (simplified)\ndef select_patterns(client_api, needs):\n    patterns = []\n\n    # Rule 1: Durability\n    if needs.durability == "strong":\n        patterns.append(Pattern("wal", {"fsync": True}))\n\n    # Rule 2: Large messages\n    if needs.max_message_size > 1MB:\n        patterns.append(Pattern("claim-check", {\n            "threshold": "1MB",\n            "storage": "s3"\n        }))\n\n    # Rule 3: Transactional consistency\n    if needs.consistency == "strong" and client_api in ["queue", "transact"]:\n        patterns.append(Pattern("outbox", {\n            "database": "postgres"\n        }))\n\n    # Rule 4: Replay capability\n    if needs.replay == "enabled":\n        patterns.append(Pattern("replay-store", {\n            "retention_days": needs.retention\n        }))\n\n    # Rule 5: Long retention with cost optimization\n    if needs.retention > 30:\n        patterns.append(Pattern("tiered-storage", {\n            "hot_tier_days": 7,\n            "warm_tier_days": 30,\n            "cold_tier": "s3"\n        }))\n\n    return patterns\n\n# Example: Client needs durability + large messages\nneeds = {\n    "durability": "strong",\n    "max_message_size": "50MB"\n}\npatterns = select_patterns("pubsub", needs)\n# Result: [WAL, ClaimCheck]\n'})}),"\n",(0,r.jsx)(n.h2,{id:"backend-selection-algorithm",children:"Backend Selection Algorithm"}),"\n",(0,r.jsx)(n.p,{children:"Platform selects backend based on client_api + patterns + needs:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Platform backend selection (simplified)\ndef select_backend(client_api, patterns, needs):\n    if client_api == "keyvalue":\n        if needs.read_rps > 100000:\n            return "redis"  # High read throughput\n        elif needs.data_size > 100GB:\n            return "postgres"  # Large datasets\n        else:\n            return "redis"  # Default\n\n    elif client_api == "pubsub":\n        if "claim-check" in patterns:\n            return "kafka"  # Handles large message references well\n        elif needs.write_rps > 50000:\n            return "kafka"  # High throughput\n        else:\n            return "nats"  # Lightweight, low latency\n\n    elif client_api == "queue":\n        if needs.ordered:\n            return "kafka"  # Strong ordering guarantees\n        elif "outbox" in patterns:\n            return "postgres"  # Transactional outbox needs database\n        else:\n            return "kafka"  # Default\n\n    elif client_api == "transact":\n        return "postgres"  # Only backend with ACID transactions\n\n    elif client_api == "reader":\n        if needs.query_complexity == "high":\n            return "postgres"  # SQL queries\n        elif needs.data_model == "graph":\n            return "neptune"  # Graph traversal\n        else:\n            return "postgres"  # Default\n\n# Example: Queue with strong durability\nbackend = select_backend("queue", ["wal"], {\n    "durability": "strong",\n    "write_rps": 5000\n})\n# Result: "kafka"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"namespace-discovery",children:"Namespace Discovery"}),"\n",(0,r.jsx)(n.p,{children:"Clients discover namespace endpoints via DNS or control plane API:"}),"\n",(0,r.jsx)(n.h3,{id:"option-1-dns-discovery-recommended",children:"Option 1: DNS Discovery (Recommended)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Standard DNS\ndig prism.example.com\n# \u2192 10.0.1.10 (prism-proxy-1)\n# \u2192 10.0.2.20 (prism-proxy-2)\n\n# Geo-DNS (region-aware)\ndig prism.us-east-1.example.com\n# \u2192 10.0.1.10 (us-east-1 proxy)\n\ndig prism.eu-west-1.example.com\n# \u2192 10.0.2.20 (eu-west-1 proxy)\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Client Usage"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Client SDK auto-discovers endpoints\nclient = PrismClient(\n    namespace="order-processing",\n    discovery="dns://prism.example.com"\n)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"option-2-control-plane-api",children:"Option 2: Control Plane API"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Query control plane for namespace endpoints\nGET /api/v1/namespaces/order-processing/endpoints\n\nResponse:\n{\n  "namespace": "order-processing",\n  "endpoints": [\n    {\n      "address": "prism-proxy-1.example.com:8980",\n      "region": "us-east-1",\n      "health": "healthy",\n      "load": 45\n    },\n    {\n      "address": "prism-proxy-2.example.com:8980",\n      "region": "us-east-1",\n      "health": "healthy",\n      "load": 52\n    }\n  ]\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Client Usage"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'client = PrismClient(\n    namespace="order-processing",\n    discovery="api://control-plane.example.com/api/v1"\n)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.h3,{id:"namespace-creation-failures",children:"Namespace Creation Failures"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# Request with invalid configuration\nnamespace: user-cache\nclient_api: pubsub        # \u274c Incompatible with needs\nneeds:\n  consistency: strong     # PubSub can\'t provide strong consistency\n\n# Platform response\n{\n  "error": {\n    "code": "INVALID_CONFIGURATION",\n    "message": "Consistency \'strong\' not supported by client_api \'pubsub\'",\n    "details": {\n      "field": "needs.consistency",\n      "supported_values": ["eventual"],\n      "recommendation": "Use client_api \'queue\' for strong consistency"\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"capacity-exceeded",children:"Capacity Exceeded"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# Request exceeds team quota\nnamespace: huge-events\nteam: small-team\nneeds:\n  write_rps: 200000  # Team quota: 50k RPS\n\n# Platform response\n{\n  "error": {\n    "code": "QUOTA_EXCEEDED",\n    "message": "Requested write_rps (200000) exceeds team quota (50000)",\n    "details": {\n      "requested": 200000,\n      "quota": 50000,\n      "team": "small-team",\n      "recommendation": "Request quota increase via platform team"\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"namespace-already-exists",children:"Namespace Already Exists"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# Namespace name collision\nnamespace: order-processing  # Already exists\n\n# Platform response\n{\n  "error": {\n    "code": "NAMESPACE_EXISTS",\n    "message": "Namespace \'order-processing\' already exists",\n    "details": {\n      "existing_owner": "payments-team",\n      "created_at": "2025-10-01T10:00:00Z",\n      "recommendation": "Choose a different namespace name or contact existing owner"\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"client-sdk-integration",children:"Client SDK Integration"}),"\n",(0,r.jsx)(n.p,{children:"Client SDKs abstract namespace configuration:"}),"\n",(0,r.jsx)(n.h3,{id:"python-client",children:"Python Client"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from prism_client import PrismClient, ClientAPI\n\n# Create client for specific namespace\nclient = PrismClient(\n    namespace="order-processing",\n    api=ClientAPI.QUEUE,\n    discovery="dns://prism.example.com",\n    auth_token="..."\n)\n\n# Use high-level API (patterns/backends transparent)\nclient.publish("orders", {"order_id": 123, "amount": 99.99})\n\nfor message in client.consume("orders"):\n    process_order(message.payload)\n    message.ack()  # Platform handles offset commit\n'})}),"\n",(0,r.jsx)(n.h3,{id:"go-client",children:"Go Client"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/prism/client-go"\n)\n\nfunc main() {\n    // Create client\n    client, err := prism.NewClient(&prism.Config{\n        Namespace: "order-processing",\n        API: prism.APITypeQueue,\n        Discovery: "dns://prism.example.com",\n        AuthToken: "...",\n    })\n\n    // Publish\n    client.Publish(ctx, "orders", &Order{\n        OrderID: 123,\n        Amount: 99.99,\n    })\n\n    // Consume\n    messages := client.Consume(ctx, "orders")\n    for msg := range messages {\n        processOrder(msg.Payload)\n        msg.Ack()\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"migration-from-existing-systems",children:"Migration from Existing Systems"}),"\n",(0,r.jsx)(n.p,{children:"Teams migrating from direct backend usage:"}),"\n",(0,r.jsx)(n.h3,{id:"before-direct-kafka-usage",children:"Before: Direct Kafka Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# Application directly uses Kafka\nfrom kafka import KafkaProducer, KafkaConsumer\n\nproducer = KafkaProducer(\n    bootstrap_servers=['kafka-1:9092', 'kafka-2:9092'],\n    value_serializer=lambda v: json.dumps(v).encode('utf-8'),\n    acks='all',  # Strong durability\n    compression_type='gzip'\n)\n\nproducer.send('order-events', {\n    'order_id': 123,\n    'amount': 99.99\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Problems"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Hard-coded Kafka endpoints"}),"\n",(0,r.jsx)(n.li,{children:"Application manages serialization, compression, acks"}),"\n",(0,r.jsx)(n.li,{children:"No abstraction (can't switch backends)"}),"\n",(0,r.jsx)(n.li,{children:"No additional reliability patterns (WAL, Claim Check)"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"after-prism-namespace",children:"After: Prism Namespace"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Application uses Prism namespace\nfrom prism_client import PrismClient\n\nclient = PrismClient(\n    namespace="order-events",  # Platform provisions Kafka\n    discovery="dns://prism.example.com"\n)\n\nclient.publish("orders", {\n    \'order_id\': 123,\n    \'amount\': 99.99\n})\n# Platform handles: serialization, compression, durability, WAL\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Benefits"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"No Kafka knowledge required"}),"\n",(0,r.jsx)(n.li,{children:"Platform handles reliability patterns"}),"\n",(0,r.jsx)(n.li,{children:"Can migrate to NATS without code changes"}),"\n",(0,r.jsx)(n.li,{children:"Claim Check automatically enabled for large messages"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"self-service-portal-future",children:"Self-Service Portal (Future)"}),"\n",(0,r.jsx)(n.p,{children:"Future UI for namespace creation (delegated to Web UI):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                   Prism Namespace Creator                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                                                          \u2502\n\u2502  Step 1: Basic Information                              \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510        \u2502\n\u2502  \u2502 Namespace Name: [order-processing__________]\u2502        \u2502\n\u2502  \u2502 Team: [payments-team_____________________\u25bc] \u2502        \u2502\n\u2502  \u2502 Client API: [ ] KeyValue  [\u2713] Queue         \u2502        \u2502\n\u2502  \u2502             [ ] PubSub    [ ] Reader        \u2502        \u2502\n\u2502  \u2502             [ ] Transact                    \u2502        \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518        \u2502\n\u2502                                                          \u2502\n\u2502  Step 2: Requirements                                   \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510        \u2502\n\u2502  \u2502 Durability: [Strong_____________________\u25bc] \u2502        \u2502\n\u2502  \u2502 Write RPS: [5000_________________________] \u2502        \u2502\n\u2502  \u2502 Read RPS: [10000_________________________] \u2502        \u2502\n\u2502  \u2502 Message Size: [1MB_____________________\u25bc] \u2502        \u2502\n\u2502  \u2502 Retention: [30 days____________________\u25bc] \u2502        \u2502\n\u2502  \u2502 Consistency: [Strong___________________\u25bc] \u2502        \u2502\n\u2502  \u2502 \u2611 Enable replay                             \u2502        \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518        \u2502\n\u2502                                                          \u2502\n\u2502  Step 3: Access Control                                 \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510        \u2502\n\u2502  \u2502 Consumers:                                  \u2502        \u2502\n\u2502  \u2502 \u2022 order-api (read-write)       [Remove]    \u2502        \u2502\n\u2502  \u2502 \u2022 analytics-pipeline (read)    [Remove]    \u2502        \u2502\n\u2502  \u2502 [Add Consumer_______________________] [+]   \u2502        \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518        \u2502\n\u2502                                                          \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u2502\n\u2502  \u2502 [Create]       \u2502  \u2502 Platform Recommends:  \u2502         \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2502 \u2022 Kafka backend       \u2502         \u2502\n\u2502                       \u2502 \u2022 WAL + Replay patterns\u2502        \u2502\n\u2502                       \u2502 \u2022 20 partitions       \u2502         \u2502\n\u2502                       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsx)(n.h2,{id:"related-documents",children:"Related Documents"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/rfc/rfc-014",children:"RFC-014: Layered Data Access Patterns"})," - Pattern composition and three-layer architecture"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/adr/adr-006",children:"ADR-006: Namespace and Multi-Tenancy"})," - Namespace isolation and sharding"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/rfc/rfc-003",children:"RFC-003: Admin Interface"})," - Admin API for namespace CRUD operations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/rfc/rfc-001",children:"RFC-001: Prism Architecture"})," - Overall system architecture"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/memos/memo-006",children:"MEMO-006: Backend Interface Decomposition"})," - Backend interface details"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"revision-history",children:"Revision History"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"2025-10-10: Initial draft consolidating client namespace configuration perspective"}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var i=s(96540);const r={},a=i.createContext(r);function t(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);