name: Deploy Docs

on:
  push:
    branches: [main]
    paths:
      - 'docs-cms/**'
      - 'docusaurus/**'
      - 'tooling/build_docs.py'
      - 'tooling/validate_docs.py'
      - '.github/workflows/docs.yml'
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: docusaurus/package-lock.json

      - name: Install dependencies
        run: cd docusaurus && npm ci

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Validate docs
        run: uv run tooling/validate_docs.py

      - name: Build docs
        run: uv run tooling/build_docs.py

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Send Telegram notification
        if: always() && (secrets.TELEGRAM_BOT_TOKEN != '' && secrets.TELEGRAM_CHAT_ID != '')
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          message: |
            ${{ job.status == 'success' && 'üìö‚úÖ' || 'üìö‚ùå' }} **Documentation Deployment ${{ job.status == 'success' && 'Succeeded' || 'Failed' }}**

            **Repository:** ${{ github.repository }}
            **Branch:** `${{ github.ref_name }}`
            **Commit:** `${{ github.sha | slice(0,7) }}`
            **Author:** ${{ github.actor }}

            **Deployment URL:** ${{ steps.deployment.outputs.page_url }}

            [View Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
