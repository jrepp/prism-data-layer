name: Acceptance Tests

on:
  push:
    branches: [main]
    paths:
      - 'patterns/**'
      - 'tests/acceptance/**'
      - 'tooling/parallel_acceptance_test.py'
      - '.github/workflows/acceptance-tests.yml'
  pull_request:
    branches: [main]
    paths:
      - 'patterns/**'
      - 'tests/acceptance/**'
      - 'tooling/parallel_acceptance_test.py'
      - '.github/workflows/acceptance-tests.yml'
  workflow_dispatch:  # Allow manual trigger

# Cancel in-progress runs for the same PR/branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # Generate protobuf code (required for acceptance tests)
  generate-proto:
    name: Generate Protobuf Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Setup protoc
        uses: arduino/setup-protoc@v3
        with:
          version: '25.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install protoc-gen-go
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

      - name: Install buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate protobuf code
        run: make proto-go

      - name: Upload generated proto code
        uses: actions/upload-artifact@v4
        with:
          name: proto-generated
          path: patterns/core/gen/
          retention-days: 1

  # Parallel acceptance tests using GitHub matrix
  acceptance-tests-matrix:
    name: Acceptance Tests (${{ matrix.pattern }})
    runs-on: ubuntu-latest
    needs: generate-proto
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        pattern: [memstore, redis, nats]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Download generated proto code
        uses: actions/download-artifact@v4
        with:
          name: proto-generated
          path: patterns/core/gen/

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run acceptance tests for ${{ matrix.pattern }}
        id: acceptance_tests
        run: |
          cd tests/acceptance/${{ matrix.pattern }}
          go test -v -timeout 10m ./...
        env:
          PRISM_TEST_QUIET: "1"

      - name: Generate coverage report
        run: |
          cd tests/acceptance/${{ matrix.pattern }}
          go test -coverprofile=coverage.out -timeout 10m ./...
          go tool cover -func=coverage.out | grep total | awk '{print "Coverage: " $3}'

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-acceptance-${{ matrix.pattern }}
          path: tests/acceptance/${{ matrix.pattern }}/coverage.out
          retention-days: 7


  # Status check for acceptance tests (required for merge)
  acceptance-status:
    name: Acceptance Status Check
    runs-on: ubuntu-latest
    needs: [acceptance-tests-matrix]
    if: always()

    steps:
      - name: Check acceptance test status
        run: |
          if [[ "${{ needs.acceptance-tests-matrix.result }}" != "success" ]]; then
            echo "❌ Acceptance tests failed"
            exit 1
          else
            echo "✅ Acceptance tests passed"
          fi
